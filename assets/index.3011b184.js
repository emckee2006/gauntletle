const or=function(){const E=document.createElement("link").relList;if(E&&E.supports&&E.supports("modulepreload"))return;for(const A of document.querySelectorAll('link[rel="modulepreload"]'))t(A);new MutationObserver(A=>{for(const n of A)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&t(r)}).observe(document,{childList:!0,subtree:!0});function S(A){const n={};return A.integrity&&(n.integrity=A.integrity),A.referrerpolicy&&(n.referrerPolicy=A.referrerpolicy),A.crossorigin==="use-credentials"?n.credentials="include":A.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function t(A){if(A.ep)return;A.ep=!0;const n=S(A);fetch(A.href,n)}};or();function Kt(e,E){const S=Object.create(null),t=e.split(",");for(let A=0;A<t.length;A++)S[t[A]]=!0;return E?A=>!!S[A.toLowerCase()]:A=>!!S[A]}const sr="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Rr=Kt(sr);function En(e){return!!e||e===""}function pt(e){if(y(e)){const E={};for(let S=0;S<e.length;S++){const t=e[S],A=le(t)?Ir(t):pt(t);if(A)for(const n in A)E[n]=A[n]}return E}else{if(le(e))return e;if(se(e))return e}}const lr=/;(?![^(]*\))/g,ir=/:(.+)/;function Ir(e){const E={};return e.split(lr).forEach(S=>{if(S){const t=S.split(ir);t.length>1&&(E[t[0].trim()]=t[1].trim())}}),E}function ue(e){let E="";if(le(e))E=e;else if(y(e))for(let S=0;S<e.length;S++){const t=ue(e[S]);t&&(E+=t+" ")}else if(se(e))for(const S in e)e[S]&&(E+=S+" ");return E.trim()}const PS=e=>le(e)?e:e==null?"":y(e)||se(e)&&(e.toString===nn||!V(e.toString))?JSON.stringify(e,Sn,2):String(e),Sn=(e,E)=>E&&E.__v_isRef?Sn(e,E.value):gE(E)?{[`Map(${E.size})`]:[...E.entries()].reduce((S,[t,A])=>(S[`${t} =>`]=A,S),{})}:tn(E)?{[`Set(${E.size})`]:[...E.values()]}:se(E)&&!y(E)&&!rn(E)?String(E):E,ne={},mE=[],ke=()=>{},ar=()=>!1,Lr=/^on[^a-z]/,vS=e=>Lr.test(e),ht=e=>e.startsWith("onUpdate:"),Ne=Object.assign,Ft=(e,E)=>{const S=e.indexOf(E);S>-1&&e.splice(S,1)},Tr=Object.prototype.hasOwnProperty,J=(e,E)=>Tr.call(e,E),y=Array.isArray,gE=e=>bS(e)==="[object Map]",tn=e=>bS(e)==="[object Set]",V=e=>typeof e=="function",le=e=>typeof e=="string",mt=e=>typeof e=="symbol",se=e=>e!==null&&typeof e=="object",An=e=>se(e)&&V(e.then)&&V(e.catch),nn=Object.prototype.toString,bS=e=>nn.call(e),ur=e=>bS(e).slice(8,-1),rn=e=>bS(e)==="[object Object]",gt=e=>le(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,MS=Kt(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),VS=e=>{const E=Object.create(null);return S=>E[S]||(E[S]=e(S))},Nr=/-(\w)/g,$e=VS(e=>e.replace(Nr,(E,S)=>S?S.toUpperCase():"")),cr=/\B([A-Z])/g,BE=VS(e=>e.replace(cr,"-$1").toLowerCase()),wS=VS(e=>e.charAt(0).toUpperCase()+e.slice(1)),dS=VS(e=>e?`on${wS(e)}`:""),tS=(e,E)=>!Object.is(e,E),Et=(e,E)=>{for(let S=0;S<e.length;S++)e[S](E)},GS=(e,E,S)=>{Object.defineProperty(e,E,{configurable:!0,enumerable:!1,value:S})},On=e=>{const E=parseFloat(e);return isNaN(E)?e:E};let nA;const Ur=()=>nA||(nA=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});let je;class Dr{constructor(E=!1){this.active=!0,this.effects=[],this.cleanups=[],!E&&je&&(this.parent=je,this.index=(je.scopes||(je.scopes=[])).push(this)-1)}run(E){if(this.active){const S=je;try{return je=this,E()}finally{je=S}}}on(){je=this}off(){je=this.parent}stop(E){if(this.active){let S,t;for(S=0,t=this.effects.length;S<t;S++)this.effects[S].stop();for(S=0,t=this.cleanups.length;S<t;S++)this.cleanups[S]();if(this.scopes)for(S=0,t=this.scopes.length;S<t;S++)this.scopes[S].stop(!0);if(this.parent&&!E){const A=this.parent.scopes.pop();A&&A!==this&&(this.parent.scopes[this.index]=A,A.index=this.index)}this.active=!1}}}function fr(e,E=je){E&&E.active&&E.effects.push(e)}const Wt=e=>{const E=new Set(e);return E.w=0,E.n=0,E},on=e=>(e.w&LE)>0,sn=e=>(e.n&LE)>0,Cr=({deps:e})=>{if(e.length)for(let E=0;E<e.length;E++)e[E].w|=LE},Pr=e=>{const{deps:E}=e;if(E.length){let S=0;for(let t=0;t<E.length;t++){const A=E[t];on(A)&&!sn(A)?A.delete(e):E[S++]=A,A.w&=~LE,A.n&=~LE}E.length=S}},it=new WeakMap;let JE=0,LE=1;const It=30;let Ze;const ME=Symbol(""),at=Symbol("");class yt{constructor(E,S=null,t){this.fn=E,this.scheduler=S,this.active=!0,this.deps=[],this.parent=void 0,fr(this,t)}run(){if(!this.active)return this.fn();let E=Ze,S=IE;for(;E;){if(E===this)return;E=E.parent}try{return this.parent=Ze,Ze=this,IE=!0,LE=1<<++JE,JE<=It?Cr(this):rA(this),this.fn()}finally{JE<=It&&Pr(this),LE=1<<--JE,Ze=this.parent,IE=S,this.parent=void 0,this.deferStop&&this.stop()}}stop(){Ze===this?this.deferStop=!0:this.active&&(rA(this),this.onStop&&this.onStop(),this.active=!1)}}function rA(e){const{deps:E}=e;if(E.length){for(let S=0;S<E.length;S++)E[S].delete(e);E.length=0}}let IE=!0;const Rn=[];function VE(){Rn.push(IE),IE=!1}function wE(){const e=Rn.pop();IE=e===void 0?!0:e}function Fe(e,E,S){if(IE&&Ze){let t=it.get(e);t||it.set(e,t=new Map);let A=t.get(S);A||t.set(S,A=Wt()),ln(A)}}function ln(e,E){let S=!1;JE<=It?sn(e)||(e.n|=LE,S=!on(e)):S=!e.has(Ze),S&&(e.add(Ze),Ze.deps.push(e))}function EE(e,E,S,t,A,n){const r=it.get(e);if(!r)return;let o=[];if(E==="clear")o=[...r.values()];else if(S==="length"&&y(e))r.forEach((R,i)=>{(i==="length"||i>=t)&&o.push(R)});else switch(S!==void 0&&o.push(r.get(S)),E){case"add":y(e)?gt(S)&&o.push(r.get("length")):(o.push(r.get(ME)),gE(e)&&o.push(r.get(at)));break;case"delete":y(e)||(o.push(r.get(ME)),gE(e)&&o.push(r.get(at)));break;case"set":gE(e)&&o.push(r.get(ME));break}if(o.length===1)o[0]&&Lt(o[0]);else{const R=[];for(const i of o)i&&R.push(...i);Lt(Wt(R))}}function Lt(e,E){const S=y(e)?e:[...e];for(const t of S)t.computed&&OA(t);for(const t of S)t.computed||OA(t)}function OA(e,E){(e!==Ze||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const Mr=Kt("__proto__,__v_isRef,__isVue"),In=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(mt)),dr=vt(),Yr=vt(!1,!0),Hr=vt(!0),oA=Br();function Br(){const e={};return["includes","indexOf","lastIndexOf"].forEach(E=>{e[E]=function(...S){const t=z(this);for(let n=0,r=this.length;n<r;n++)Fe(t,"get",n+"");const A=t[E](...S);return A===-1||A===!1?t[E](...S.map(z)):A}}),["push","pop","shift","unshift","splice"].forEach(E=>{e[E]=function(...S){VE();const t=z(this)[E].apply(this,S);return wE(),t}}),e}function vt(e=!1,E=!1){return function(t,A,n){if(A==="__v_isReactive")return!e;if(A==="__v_isReadonly")return e;if(A==="__v_isShallow")return E;if(A==="__v_raw"&&n===(e?E?xr:Nn:E?un:Tn).get(t))return t;const r=y(t);if(!e&&r&&J(oA,A))return Reflect.get(oA,A,n);const o=Reflect.get(t,A,n);return(mt(A)?In.has(A):Mr(A))||(e||Fe(t,"get",A),E)?o:re(o)?r&&gt(A)?o:o.value:se(o)?e?cn(o):_S(o):o}}const Gr=an(),Kr=an(!0);function an(e=!1){return function(S,t,A,n){let r=S[t];if(AS(r)&&re(r)&&!re(A))return!1;if(!e&&!AS(A)&&(ut(A)||(A=z(A),r=z(r)),!y(S)&&re(r)&&!re(A)))return r.value=A,!0;const o=y(S)&&gt(t)?Number(t)<S.length:J(S,t),R=Reflect.set(S,t,A,n);return S===z(n)&&(o?tS(A,r)&&EE(S,"set",t,A):EE(S,"add",t,A)),R}}function pr(e,E){const S=J(e,E);e[E];const t=Reflect.deleteProperty(e,E);return t&&S&&EE(e,"delete",E,void 0),t}function hr(e,E){const S=Reflect.has(e,E);return(!mt(E)||!In.has(E))&&Fe(e,"has",E),S}function Fr(e){return Fe(e,"iterate",y(e)?"length":ME),Reflect.ownKeys(e)}const Ln={get:dr,set:Gr,deleteProperty:pr,has:hr,ownKeys:Fr},mr={get:Hr,set(e,E){return!0},deleteProperty(e,E){return!0}},gr=Ne({},Ln,{get:Yr,set:Kr}),bt=e=>e,ZS=e=>Reflect.getPrototypeOf(e);function IS(e,E,S=!1,t=!1){e=e.__v_raw;const A=z(e),n=z(E);S||(E!==n&&Fe(A,"get",E),Fe(A,"get",n));const{has:r}=ZS(A),o=t?bt:S?Zt:nS;if(r.call(A,E))return o(e.get(E));if(r.call(A,n))return o(e.get(n));e!==A&&e.get(E)}function aS(e,E=!1){const S=this.__v_raw,t=z(S),A=z(e);return E||(e!==A&&Fe(t,"has",e),Fe(t,"has",A)),e===A?S.has(e):S.has(e)||S.has(A)}function LS(e,E=!1){return e=e.__v_raw,!E&&Fe(z(e),"iterate",ME),Reflect.get(e,"size",e)}function sA(e){e=z(e);const E=z(this);return ZS(E).has.call(E,e)||(E.add(e),EE(E,"add",e,e)),this}function RA(e,E){E=z(E);const S=z(this),{has:t,get:A}=ZS(S);let n=t.call(S,e);n||(e=z(e),n=t.call(S,e));const r=A.call(S,e);return S.set(e,E),n?tS(E,r)&&EE(S,"set",e,E):EE(S,"add",e,E),this}function lA(e){const E=z(this),{has:S,get:t}=ZS(E);let A=S.call(E,e);A||(e=z(e),A=S.call(E,e)),t&&t.call(E,e);const n=E.delete(e);return A&&EE(E,"delete",e,void 0),n}function iA(){const e=z(this),E=e.size!==0,S=e.clear();return E&&EE(e,"clear",void 0,void 0),S}function TS(e,E){return function(t,A){const n=this,r=n.__v_raw,o=z(r),R=E?bt:e?Zt:nS;return!e&&Fe(o,"iterate",ME),r.forEach((i,L)=>t.call(A,R(i),R(L),n))}}function uS(e,E,S){return function(...t){const A=this.__v_raw,n=z(A),r=gE(n),o=e==="entries"||e===Symbol.iterator&&r,R=e==="keys"&&r,i=A[e](...t),L=S?bt:E?Zt:nS;return!E&&Fe(n,"iterate",R?at:ME),{next(){const{value:U,done:N}=i.next();return N?{value:U,done:N}:{value:o?[L(U[0]),L(U[1])]:L(U),done:N}},[Symbol.iterator](){return this}}}}function OE(e){return function(...E){return e==="delete"?!1:this}}function Wr(){const e={get(n){return IS(this,n)},get size(){return LS(this)},has:aS,add:sA,set:RA,delete:lA,clear:iA,forEach:TS(!1,!1)},E={get(n){return IS(this,n,!1,!0)},get size(){return LS(this)},has:aS,add:sA,set:RA,delete:lA,clear:iA,forEach:TS(!1,!0)},S={get(n){return IS(this,n,!0)},get size(){return LS(this,!0)},has(n){return aS.call(this,n,!0)},add:OE("add"),set:OE("set"),delete:OE("delete"),clear:OE("clear"),forEach:TS(!0,!1)},t={get(n){return IS(this,n,!0,!0)},get size(){return LS(this,!0)},has(n){return aS.call(this,n,!0)},add:OE("add"),set:OE("set"),delete:OE("delete"),clear:OE("clear"),forEach:TS(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(n=>{e[n]=uS(n,!1,!1),S[n]=uS(n,!0,!1),E[n]=uS(n,!1,!0),t[n]=uS(n,!0,!0)}),[e,S,E,t]}const[yr,vr,br,Vr]=Wr();function Vt(e,E){const S=E?e?Vr:br:e?vr:yr;return(t,A,n)=>A==="__v_isReactive"?!e:A==="__v_isReadonly"?e:A==="__v_raw"?t:Reflect.get(J(S,A)&&A in t?S:t,A,n)}const wr={get:Vt(!1,!1)},Zr={get:Vt(!1,!0)},_r={get:Vt(!0,!1)},Tn=new WeakMap,un=new WeakMap,Nn=new WeakMap,xr=new WeakMap;function kr(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Jr(e){return e.__v_skip||!Object.isExtensible(e)?0:kr(ur(e))}function _S(e){return AS(e)?e:wt(e,!1,Ln,wr,Tn)}function Tt(e){return wt(e,!1,gr,Zr,un)}function cn(e){return wt(e,!0,mr,_r,Nn)}function wt(e,E,S,t,A){if(!se(e)||e.__v_raw&&!(E&&e.__v_isReactive))return e;const n=A.get(e);if(n)return n;const r=Jr(e);if(r===0)return e;const o=new Proxy(e,r===2?t:S);return A.set(e,o),o}function WE(e){return AS(e)?WE(e.__v_raw):!!(e&&e.__v_isReactive)}function AS(e){return!!(e&&e.__v_isReadonly)}function ut(e){return!!(e&&e.__v_isShallow)}function Un(e){return WE(e)||AS(e)}function z(e){const E=e&&e.__v_raw;return E?z(E):e}function Dn(e){return GS(e,"__v_skip",!0),e}const nS=e=>se(e)?_S(e):e,Zt=e=>se(e)?cn(e):e;function fn(e){IE&&Ze&&(e=z(e),ln(e.dep||(e.dep=Wt())))}function Cn(e,E){e=z(e),e.dep&&Lt(e.dep)}function re(e){return!!(e&&e.__v_isRef===!0)}function _(e){return Xr(e,!1)}function Xr(e,E){return re(e)?e:new zr(e,E)}class zr{constructor(E,S){this.__v_isShallow=S,this.dep=void 0,this.__v_isRef=!0,this._rawValue=S?E:z(E),this._value=S?E:nS(E)}get value(){return fn(this),this._value}set value(E){E=this.__v_isShallow?E:z(E),tS(E,this._rawValue)&&(this._rawValue=E,this._value=this.__v_isShallow?E:nS(E),Cn(this))}}function P(e){return re(e)?e.value:e}const jr={get:(e,E,S)=>P(Reflect.get(e,E,S)),set:(e,E,S,t)=>{const A=e[E];return re(A)&&!re(S)?(A.value=S,!0):Reflect.set(e,E,S,t)}};function Pn(e){return WE(e)?e:new Proxy(e,jr)}class Qr{constructor(E,S,t,A){this._setter=S,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new yt(E,()=>{this._dirty||(this._dirty=!0,Cn(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!A,this.__v_isReadonly=t}get value(){const E=z(this);return fn(E),(E._dirty||!E._cacheable)&&(E._dirty=!1,E._value=E.effect.run()),E._value}set value(E){this._setter(E)}}function $r(e,E,S=!1){let t,A;const n=V(e);return n?(t=e,A=ke):(t=e.get,A=e.set),new Qr(t,A,n||!A,S)}function aE(e,E,S,t){let A;try{A=t?e(...t):e()}catch(n){xS(n,E,S)}return A}function We(e,E,S,t){if(V(e)){const n=aE(e,E,S,t);return n&&An(n)&&n.catch(r=>{xS(r,E,S)}),n}const A=[];for(let n=0;n<e.length;n++)A.push(We(e[n],E,S,t));return A}function xS(e,E,S,t=!0){const A=E?E.vnode:null;if(E){let n=E.parent;const r=E.proxy,o=S;for(;n;){const i=n.ec;if(i){for(let L=0;L<i.length;L++)if(i[L](e,r,o)===!1)return}n=n.parent}const R=E.appContext.config.errorHandler;if(R){aE(R,null,10,[e,r,o]);return}}qr(e,S,A,t)}function qr(e,E,S,t=!0){console.error(e)}let KS=!1,Nt=!1;const he=[];let eE=0;const jE=[];let XE=null,pE=0;const QE=[];let RE=null,hE=0;const Mn=Promise.resolve();let _t=null,ct=null;function zE(e){const E=_t||Mn;return e?E.then(this?e.bind(this):e):E}function eO(e){let E=eE+1,S=he.length;for(;E<S;){const t=E+S>>>1;rS(he[t])<e?E=t+1:S=t}return E}function dn(e){(!he.length||!he.includes(e,KS&&e.allowRecurse?eE+1:eE))&&e!==ct&&(e.id==null?he.push(e):he.splice(eO(e.id),0,e),Yn())}function Yn(){!KS&&!Nt&&(Nt=!0,_t=Mn.then(Gn))}function EO(e){const E=he.indexOf(e);E>eE&&he.splice(E,1)}function Hn(e,E,S,t){y(e)?S.push(...e):(!E||!E.includes(e,e.allowRecurse?t+1:t))&&S.push(e),Yn()}function SO(e){Hn(e,XE,jE,pE)}function tO(e){Hn(e,RE,QE,hE)}function kS(e,E=null){if(jE.length){for(ct=E,XE=[...new Set(jE)],jE.length=0,pE=0;pE<XE.length;pE++)XE[pE]();XE=null,pE=0,ct=null,kS(e,E)}}function Bn(e){if(kS(),QE.length){const E=[...new Set(QE)];if(QE.length=0,RE){RE.push(...E);return}for(RE=E,RE.sort((S,t)=>rS(S)-rS(t)),hE=0;hE<RE.length;hE++)RE[hE]();RE=null,hE=0}}const rS=e=>e.id==null?1/0:e.id;function Gn(e){Nt=!1,KS=!0,kS(e),he.sort((S,t)=>rS(S)-rS(t));const E=ke;try{for(eE=0;eE<he.length;eE++){const S=he[eE];S&&S.active!==!1&&aE(S,null,14)}}finally{eE=0,he.length=0,Bn(),KS=!1,_t=null,(he.length||jE.length||QE.length)&&Gn(e)}}function AO(e,E,...S){if(e.isUnmounted)return;const t=e.vnode.props||ne;let A=S;const n=E.startsWith("update:"),r=n&&E.slice(7);if(r&&r in t){const L=`${r==="modelValue"?"model":r}Modifiers`,{number:U,trim:N}=t[L]||ne;N&&(A=S.map(C=>C.trim())),U&&(A=S.map(On))}let o,R=t[o=dS(E)]||t[o=dS($e(E))];!R&&n&&(R=t[o=dS(BE(E))]),R&&We(R,e,6,A);const i=t[o+"Once"];if(i){if(!e.emitted)e.emitted={};else if(e.emitted[o])return;e.emitted[o]=!0,We(i,e,6,A)}}function Kn(e,E,S=!1){const t=E.emitsCache,A=t.get(e);if(A!==void 0)return A;const n=e.emits;let r={},o=!1;if(!V(e)){const R=i=>{const L=Kn(i,E,!0);L&&(o=!0,Ne(r,L))};!S&&E.mixins.length&&E.mixins.forEach(R),e.extends&&R(e.extends),e.mixins&&e.mixins.forEach(R)}return!n&&!o?(t.set(e,null),null):(y(n)?n.forEach(R=>r[R]=null):Ne(r,n),t.set(e,r),r)}function JS(e,E){return!e||!vS(E)?!1:(E=E.slice(2).replace(/Once$/,""),J(e,E[0].toLowerCase()+E.slice(1))||J(e,BE(E))||J(e,E))}let ce=null,XS=null;function pS(e){const E=ce;return ce=e,XS=e&&e.type.__scopeId||null,E}function pn(e){XS=e}function hn(){XS=null}const nO=e=>yE;function yE(e,E=ce,S){if(!E||e._n)return e;const t=(...A)=>{t._d&&dA(-1);const n=pS(E),r=e(...A);return pS(n),t._d&&dA(1),r};return t._n=!0,t._c=!0,t._d=!0,t}function St(e){const{type:E,vnode:S,proxy:t,withProxy:A,props:n,propsOptions:[r],slots:o,attrs:R,emit:i,render:L,renderCache:U,data:N,setupState:C,ctx:F,inheritAttrs:K}=e;let W,p;const Y=pS(e);try{if(S.shapeFlag&4){const v=A||t;W=Qe(L.call(v,v,U,n,C,N,F)),p=R}else{const v=E;W=Qe(v.length>1?v(n,{attrs:R,slots:o,emit:i}):v(n,null)),p=E.props?R:rO(R)}}catch(v){qE.length=0,xS(v,e,1),W=k(ye)}let g=W;if(p&&K!==!1){const v=Object.keys(p),{shapeFlag:Se}=g;v.length&&Se&7&&(r&&v.some(ht)&&(p=OO(p,r)),g=TE(g,p))}return S.dirs&&(g=TE(g),g.dirs=g.dirs?g.dirs.concat(S.dirs):S.dirs),S.transition&&(g.transition=S.transition),W=g,pS(Y),W}const rO=e=>{let E;for(const S in e)(S==="class"||S==="style"||vS(S))&&((E||(E={}))[S]=e[S]);return E},OO=(e,E)=>{const S={};for(const t in e)(!ht(t)||!(t.slice(9)in E))&&(S[t]=e[t]);return S};function oO(e,E,S){const{props:t,children:A,component:n}=e,{props:r,children:o,patchFlag:R}=E,i=n.emitsOptions;if(E.dirs||E.transition)return!0;if(S&&R>=0){if(R&1024)return!0;if(R&16)return t?IA(t,r,i):!!r;if(R&8){const L=E.dynamicProps;for(let U=0;U<L.length;U++){const N=L[U];if(r[N]!==t[N]&&!JS(i,N))return!0}}}else return(A||o)&&(!o||!o.$stable)?!0:t===r?!1:t?r?IA(t,r,i):!0:!!r;return!1}function IA(e,E,S){const t=Object.keys(E);if(t.length!==Object.keys(e).length)return!0;for(let A=0;A<t.length;A++){const n=t[A];if(E[n]!==e[n]&&!JS(S,n))return!0}return!1}function sO({vnode:e,parent:E},S){for(;E&&E.subTree===e;)(e=E.vnode).el=S,E=E.parent}const RO=e=>e.__isSuspense;function lO(e,E){E&&E.pendingBranch?y(e)?E.effects.push(...e):E.effects.push(e):tO(e)}function iO(e,E){if(ae){let S=ae.provides;const t=ae.parent&&ae.parent.provides;t===S&&(S=ae.provides=Object.create(t)),S[e]=E}}function tt(e,E,S=!1){const t=ae||ce;if(t){const A=t.parent==null?t.vnode.appContext&&t.vnode.appContext.provides:t.parent.provides;if(A&&e in A)return A[e];if(arguments.length>1)return S&&V(E)?E.call(t.proxy):E}}const aA={};function we(e,E,S){return Fn(e,E,S)}function Fn(e,E,{immediate:S,deep:t,flush:A,onTrack:n,onTrigger:r}=ne){const o=ae;let R,i=!1,L=!1;if(re(e)?(R=()=>e.value,i=ut(e)):WE(e)?(R=()=>e,t=!0):y(e)?(L=!0,i=e.some(p=>WE(p)||ut(p)),R=()=>e.map(p=>{if(re(p))return p.value;if(WE(p))return PE(p);if(V(p))return aE(p,o,2)})):V(e)?E?R=()=>aE(e,o,2):R=()=>{if(!(o&&o.isUnmounted))return U&&U(),We(e,o,3,[N])}:R=ke,E&&t){const p=R;R=()=>PE(p())}let U,N=p=>{U=W.onStop=()=>{aE(p,o,4)}};if(sS)return N=ke,E?S&&We(E,o,3,[R(),L?[]:void 0,N]):R(),ke;let C=L?[]:aA;const F=()=>{if(!!W.active)if(E){const p=W.run();(t||i||(L?p.some((Y,g)=>tS(Y,C[g])):tS(p,C)))&&(U&&U(),We(E,o,3,[p,C===aA?void 0:C,N]),C=p)}else W.run()};F.allowRecurse=!!E;let K;A==="sync"?K=F:A==="post"?K=()=>Ye(F,o&&o.suspense):K=()=>SO(F);const W=new yt(R,K);return E?S?F():C=W.run():A==="post"?Ye(W.run.bind(W),o&&o.suspense):W.run(),()=>{W.stop(),o&&o.scope&&Ft(o.scope.effects,W)}}function IO(e,E,S){const t=this.proxy,A=le(e)?e.includes(".")?mn(t,e):()=>t[e]:e.bind(t,t);let n;V(E)?n=E:(n=E.handler,S=E);const r=ae;bE(this);const o=Fn(A,n.bind(t),S);return r?bE(r):dE(),o}function mn(e,E){const S=E.split(".");return()=>{let t=e;for(let A=0;A<S.length&&t;A++)t=t[S[A]];return t}}function PE(e,E){if(!se(e)||e.__v_skip||(E=E||new Set,E.has(e)))return e;if(E.add(e),re(e))PE(e.value,E);else if(y(e))for(let S=0;S<e.length;S++)PE(e[S],E);else if(tn(e)||gE(e))e.forEach(S=>{PE(S,E)});else if(rn(e))for(const S in e)PE(e[S],E);return e}function aO(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return xt(()=>{e.isMounted=!0}),kt(()=>{e.isUnmounting=!0}),e}const ge=[Function,Array],LO={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:ge,onEnter:ge,onAfterEnter:ge,onEnterCancelled:ge,onBeforeLeave:ge,onLeave:ge,onAfterLeave:ge,onLeaveCancelled:ge,onBeforeAppear:ge,onAppear:ge,onAfterAppear:ge,onAppearCancelled:ge},setup(e,{slots:E}){const S=$O(),t=aO();let A;return()=>{const n=E.default&&yn(E.default(),!0);if(!n||!n.length)return;let r=n[0];if(n.length>1){for(const K of n)if(K.type!==ye){r=K;break}}const o=z(e),{mode:R}=o;if(t.isLeaving)return At(r);const i=LA(r);if(!i)return At(r);const L=Ut(i,o,t,S);Dt(i,L);const U=S.subTree,N=U&&LA(U);let C=!1;const{getTransitionKey:F}=i.type;if(F){const K=F();A===void 0?A=K:K!==A&&(A=K,C=!0)}if(N&&N.type!==ye&&(!fE(i,N)||C)){const K=Ut(N,o,t,S);if(Dt(N,K),R==="out-in")return t.isLeaving=!0,K.afterLeave=()=>{t.isLeaving=!1,S.update()},At(r);R==="in-out"&&i.type!==ye&&(K.delayLeave=(W,p,Y)=>{const g=Wn(t,N);g[String(N.key)]=N,W._leaveCb=()=>{p(),W._leaveCb=void 0,delete L.delayedLeave},L.delayedLeave=Y})}return r}}},gn=LO;function Wn(e,E){const{leavingVNodes:S}=e;let t=S.get(E.type);return t||(t=Object.create(null),S.set(E.type,t)),t}function Ut(e,E,S,t){const{appear:A,mode:n,persisted:r=!1,onBeforeEnter:o,onEnter:R,onAfterEnter:i,onEnterCancelled:L,onBeforeLeave:U,onLeave:N,onAfterLeave:C,onLeaveCancelled:F,onBeforeAppear:K,onAppear:W,onAfterAppear:p,onAppearCancelled:Y}=E,g=String(e.key),v=Wn(S,e),Se=(w,j)=>{w&&We(w,t,9,j)},Le=(w,j)=>{const $=j[1];Se(w,j),y(w)?w.every(oe=>oe.length<=1)&&$():w.length<=1&&$()},Be={mode:n,persisted:r,beforeEnter(w){let j=o;if(!S.isMounted)if(A)j=K||o;else return;w._leaveCb&&w._leaveCb(!0);const $=v[g];$&&fE(e,$)&&$.el._leaveCb&&$.el._leaveCb(),Se(j,[w])},enter(w){let j=R,$=i,oe=L;if(!S.isMounted)if(A)j=W||R,$=p||i,oe=Y||L;else return;let h=!1;const q=w._enterCb=Re=>{h||(h=!0,Re?Se(oe,[w]):Se($,[w]),Be.delayedLeave&&Be.delayedLeave(),w._enterCb=void 0)};j?Le(j,[w,q]):q()},leave(w,j){const $=String(e.key);if(w._enterCb&&w._enterCb(!0),S.isUnmounting)return j();Se(U,[w]);let oe=!1;const h=w._leaveCb=q=>{oe||(oe=!0,j(),q?Se(F,[w]):Se(C,[w]),w._leaveCb=void 0,v[$]===e&&delete v[$])};v[$]=e,N?Le(N,[w,h]):h()},clone(w){return Ut(w,E,S,t)}};return Be}function At(e){if(zS(e))return e=TE(e),e.children=null,e}function LA(e){return zS(e)?e.children?e.children[0]:void 0:e}function Dt(e,E){e.shapeFlag&6&&e.component?Dt(e.component.subTree,E):e.shapeFlag&128?(e.ssContent.transition=E.clone(e.ssContent),e.ssFallback.transition=E.clone(e.ssFallback)):e.transition=E}function yn(e,E=!1,S){let t=[],A=0;for(let n=0;n<e.length;n++){let r=e[n];const o=S==null?r.key:String(S)+String(r.key!=null?r.key:n);r.type===ie?(r.patchFlag&128&&A++,t=t.concat(yn(r.children,E,o))):(E||r.type!==ye)&&t.push(o!=null?TE(r,{key:o}):r)}if(A>1)for(let n=0;n<t.length;n++)t[n].patchFlag=-2;return t}const $E=e=>!!e.type.__asyncLoader,zS=e=>e.type.__isKeepAlive;function TO(e,E){vn(e,"a",E)}function uO(e,E){vn(e,"da",E)}function vn(e,E,S=ae){const t=e.__wdc||(e.__wdc=()=>{let A=S;for(;A;){if(A.isDeactivated)return;A=A.parent}return e()});if(jS(E,t,S),S){let A=S.parent;for(;A&&A.parent;)zS(A.parent.vnode)&&NO(t,E,S,A),A=A.parent}}function NO(e,E,S,t){const A=jS(E,e,t,!0);Jt(()=>{Ft(t[E],A)},S)}function jS(e,E,S=ae,t=!1){if(S){const A=S[e]||(S[e]=[]),n=E.__weh||(E.__weh=(...r)=>{if(S.isUnmounted)return;VE(),bE(S);const o=We(E,S,e,r);return dE(),wE(),o});return t?A.unshift(n):A.push(n),n}}const SE=e=>(E,S=ae)=>(!sS||e==="sp")&&jS(e,E,S),cO=SE("bm"),xt=SE("m"),UO=SE("bu"),DO=SE("u"),kt=SE("bum"),Jt=SE("um"),fO=SE("sp"),CO=SE("rtg"),PO=SE("rtc");function MO(e,E=ae){jS("ec",e,E)}function TA(e,E){const S=ce;if(S===null)return e;const t=$S(S)||S.proxy,A=e.dirs||(e.dirs=[]);for(let n=0;n<E.length;n++){let[r,o,R,i=ne]=E[n];V(r)&&(r={mounted:r,updated:r}),r.deep&&PE(o),A.push({dir:r,instance:t,value:o,oldValue:void 0,arg:R,modifiers:i})}return e}function uE(e,E,S,t){const A=e.dirs,n=E&&E.dirs;for(let r=0;r<A.length;r++){const o=A[r];n&&(o.oldValue=n[r].value);let R=o.dir[t];R&&(VE(),We(R,S,8,[e.el,o,e,E]),wE())}}const bn="components",Vn=Symbol();function uA(e){return le(e)?dO(bn,e,!1)||e:e||Vn}function dO(e,E,S=!0,t=!1){const A=ce||ae;if(A){const n=A.type;if(e===bn){const o=to(n);if(o&&(o===E||o===$e(E)||o===wS($e(E))))return n}const r=NA(A[e]||n[e],E)||NA(A.appContext[e],E);return!r&&t?n:r}}function NA(e,E){return e&&(e[E]||e[$e(E)]||e[wS($e(E))])}function HE(e,E,S,t){let A;const n=S&&S[t];if(y(e)||le(e)){A=new Array(e.length);for(let r=0,o=e.length;r<o;r++)A[r]=E(e[r],r,void 0,n&&n[r])}else if(typeof e=="number"){A=new Array(e);for(let r=0;r<e;r++)A[r]=E(r+1,r,void 0,n&&n[r])}else if(se(e))if(e[Symbol.iterator])A=Array.from(e,(r,o)=>E(r,o,void 0,n&&n[o]));else{const r=Object.keys(e);A=new Array(r.length);for(let o=0,R=r.length;o<R;o++){const i=r[o];A[o]=E(e[i],i,o,n&&n[o])}}else A=[];return S&&(S[t]=A),A}function YO(e,E){for(let S=0;S<E.length;S++){const t=E[S];if(y(t))for(let A=0;A<t.length;A++)e[t[A].name]=t[A].fn;else t&&(e[t.name]=t.fn)}return e}function HO(e,E,S={},t,A){if(ce.isCE||ce.parent&&$E(ce.parent)&&ce.parent.isCE)return k("slot",E==="default"?null:{name:E},t&&t());let n=e[E];n&&n._c&&(n._d=!1),Ee();const r=n&&wn(n(S)),o=Ie(ie,{key:S.key||`_${E}`},r||(t?t():[]),r&&e._===1?64:-2);return!A&&o.scopeId&&(o.slotScopeIds=[o.scopeId+"-s"]),n&&n._c&&(n._d=!0),o}function wn(e){return e.some(E=>mS(E)?!(E.type===ye||E.type===ie&&!wn(E.children)):!0)?e:null}function cA(e){const E={};for(const S in e)E[dS(S)]=e[S];return E}const ft=e=>e?er(e)?$S(e)||e.proxy:ft(e.parent):null,hS=Ne(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>ft(e.parent),$root:e=>ft(e.root),$emit:e=>e.emit,$options:e=>_n(e),$forceUpdate:e=>e.f||(e.f=()=>dn(e.update)),$nextTick:e=>e.n||(e.n=zE.bind(e.proxy)),$watch:e=>IO.bind(e)}),BO={get({_:e},E){const{ctx:S,setupState:t,data:A,props:n,accessCache:r,type:o,appContext:R}=e;let i;if(E[0]!=="$"){const C=r[E];if(C!==void 0)switch(C){case 1:return t[E];case 2:return A[E];case 4:return S[E];case 3:return n[E]}else{if(t!==ne&&J(t,E))return r[E]=1,t[E];if(A!==ne&&J(A,E))return r[E]=2,A[E];if((i=e.propsOptions[0])&&J(i,E))return r[E]=3,n[E];if(S!==ne&&J(S,E))return r[E]=4,S[E];Ct&&(r[E]=0)}}const L=hS[E];let U,N;if(L)return E==="$attrs"&&Fe(e,"get",E),L(e);if((U=o.__cssModules)&&(U=U[E]))return U;if(S!==ne&&J(S,E))return r[E]=4,S[E];if(N=R.config.globalProperties,J(N,E))return N[E]},set({_:e},E,S){const{data:t,setupState:A,ctx:n}=e;return A!==ne&&J(A,E)?(A[E]=S,!0):t!==ne&&J(t,E)?(t[E]=S,!0):J(e.props,E)||E[0]==="$"&&E.slice(1)in e?!1:(n[E]=S,!0)},has({_:{data:e,setupState:E,accessCache:S,ctx:t,appContext:A,propsOptions:n}},r){let o;return!!S[r]||e!==ne&&J(e,r)||E!==ne&&J(E,r)||(o=n[0])&&J(o,r)||J(t,r)||J(hS,r)||J(A.config.globalProperties,r)},defineProperty(e,E,S){return S.get!=null?e._.accessCache[E]=0:J(S,"value")&&this.set(e,E,S.value,null),Reflect.defineProperty(e,E,S)}};let Ct=!0;function GO(e){const E=_n(e),S=e.proxy,t=e.ctx;Ct=!1,E.beforeCreate&&UA(E.beforeCreate,e,"bc");const{data:A,computed:n,methods:r,watch:o,provide:R,inject:i,created:L,beforeMount:U,mounted:N,beforeUpdate:C,updated:F,activated:K,deactivated:W,beforeDestroy:p,beforeUnmount:Y,destroyed:g,unmounted:v,render:Se,renderTracked:Le,renderTriggered:Be,errorCaptured:w,serverPrefetch:j,expose:$,inheritAttrs:oe,components:h,directives:q,filters:Re}=E;if(i&&KO(i,t,null,e.appContext.config.unwrapInjectedRef),r)for(const te in r){const X=r[te];V(X)&&(t[te]=X.bind(S))}if(A){const te=A.call(S,S);se(te)&&(e.data=_S(te))}if(Ct=!0,n)for(const te in n){const X=n[te],De=V(X)?X.bind(S,S):V(X.get)?X.get.bind(S,S):ke,Je=!V(X)&&V(X.set)?X.set.bind(S):ke,qe=Me({get:De,set:Je});Object.defineProperty(t,te,{enumerable:!0,configurable:!0,get:()=>qe.value,set:Ge=>qe.value=Ge})}if(o)for(const te in o)Zn(o[te],t,S,te);if(R){const te=V(R)?R.call(S):R;Reflect.ownKeys(te).forEach(X=>{iO(X,te[X])})}L&&UA(L,e,"c");function Oe(te,X){y(X)?X.forEach(De=>te(De.bind(S))):X&&te(X.bind(S))}if(Oe(cO,U),Oe(xt,N),Oe(UO,C),Oe(DO,F),Oe(TO,K),Oe(uO,W),Oe(MO,w),Oe(PO,Le),Oe(CO,Be),Oe(kt,Y),Oe(Jt,v),Oe(fO,j),y($))if($.length){const te=e.exposed||(e.exposed={});$.forEach(X=>{Object.defineProperty(te,X,{get:()=>S[X],set:De=>S[X]=De})})}else e.exposed||(e.exposed={});Se&&e.render===ke&&(e.render=Se),oe!=null&&(e.inheritAttrs=oe),h&&(e.components=h),q&&(e.directives=q)}function KO(e,E,S=ke,t=!1){y(e)&&(e=Pt(e));for(const A in e){const n=e[A];let r;se(n)?"default"in n?r=tt(n.from||A,n.default,!0):r=tt(n.from||A):r=tt(n),re(r)&&t?Object.defineProperty(E,A,{enumerable:!0,configurable:!0,get:()=>r.value,set:o=>r.value=o}):E[A]=r}}function UA(e,E,S){We(y(e)?e.map(t=>t.bind(E.proxy)):e.bind(E.proxy),E,S)}function Zn(e,E,S,t){const A=t.includes(".")?mn(S,t):()=>S[t];if(le(e)){const n=E[e];V(n)&&we(A,n)}else if(V(e))we(A,e.bind(S));else if(se(e))if(y(e))e.forEach(n=>Zn(n,E,S,t));else{const n=V(e.handler)?e.handler.bind(S):E[e.handler];V(n)&&we(A,n,e)}}function _n(e){const E=e.type,{mixins:S,extends:t}=E,{mixins:A,optionsCache:n,config:{optionMergeStrategies:r}}=e.appContext,o=n.get(E);let R;return o?R=o:!A.length&&!S&&!t?R=E:(R={},A.length&&A.forEach(i=>FS(R,i,r,!0)),FS(R,E,r)),n.set(E,R),R}function FS(e,E,S,t=!1){const{mixins:A,extends:n}=E;n&&FS(e,n,S,!0),A&&A.forEach(r=>FS(e,r,S,!0));for(const r in E)if(!(t&&r==="expose")){const o=pO[r]||S&&S[r];e[r]=o?o(e[r],E[r]):E[r]}return e}const pO={data:DA,props:DE,emits:DE,methods:DE,computed:DE,beforeCreate:Pe,created:Pe,beforeMount:Pe,mounted:Pe,beforeUpdate:Pe,updated:Pe,beforeDestroy:Pe,beforeUnmount:Pe,destroyed:Pe,unmounted:Pe,activated:Pe,deactivated:Pe,errorCaptured:Pe,serverPrefetch:Pe,components:DE,directives:DE,watch:FO,provide:DA,inject:hO};function DA(e,E){return E?e?function(){return Ne(V(e)?e.call(this,this):e,V(E)?E.call(this,this):E)}:E:e}function hO(e,E){return DE(Pt(e),Pt(E))}function Pt(e){if(y(e)){const E={};for(let S=0;S<e.length;S++)E[e[S]]=e[S];return E}return e}function Pe(e,E){return e?[...new Set([].concat(e,E))]:E}function DE(e,E){return e?Ne(Ne(Object.create(null),e),E):E}function FO(e,E){if(!e)return E;if(!E)return e;const S=Ne(Object.create(null),e);for(const t in E)S[t]=Pe(e[t],E[t]);return S}function mO(e,E,S,t=!1){const A={},n={};GS(n,QS,1),e.propsDefaults=Object.create(null),xn(e,E,A,n);for(const r in e.propsOptions[0])r in A||(A[r]=void 0);S?e.props=t?A:Tt(A):e.type.props?e.props=A:e.props=n,e.attrs=n}function gO(e,E,S,t){const{props:A,attrs:n,vnode:{patchFlag:r}}=e,o=z(A),[R]=e.propsOptions;let i=!1;if((t||r>0)&&!(r&16)){if(r&8){const L=e.vnode.dynamicProps;for(let U=0;U<L.length;U++){let N=L[U];if(JS(e.emitsOptions,N))continue;const C=E[N];if(R)if(J(n,N))C!==n[N]&&(n[N]=C,i=!0);else{const F=$e(N);A[F]=Mt(R,o,F,C,e,!1)}else C!==n[N]&&(n[N]=C,i=!0)}}}else{xn(e,E,A,n)&&(i=!0);let L;for(const U in o)(!E||!J(E,U)&&((L=BE(U))===U||!J(E,L)))&&(R?S&&(S[U]!==void 0||S[L]!==void 0)&&(A[U]=Mt(R,o,U,void 0,e,!0)):delete A[U]);if(n!==o)for(const U in n)(!E||!J(E,U)&&!0)&&(delete n[U],i=!0)}i&&EE(e,"set","$attrs")}function xn(e,E,S,t){const[A,n]=e.propsOptions;let r=!1,o;if(E)for(let R in E){if(MS(R))continue;const i=E[R];let L;A&&J(A,L=$e(R))?!n||!n.includes(L)?S[L]=i:(o||(o={}))[L]=i:JS(e.emitsOptions,R)||(!(R in t)||i!==t[R])&&(t[R]=i,r=!0)}if(n){const R=z(S),i=o||ne;for(let L=0;L<n.length;L++){const U=n[L];S[U]=Mt(A,R,U,i[U],e,!J(i,U))}}return r}function Mt(e,E,S,t,A,n){const r=e[S];if(r!=null){const o=J(r,"default");if(o&&t===void 0){const R=r.default;if(r.type!==Function&&V(R)){const{propsDefaults:i}=A;S in i?t=i[S]:(bE(A),t=i[S]=R.call(null,E),dE())}else t=R}r[0]&&(n&&!o?t=!1:r[1]&&(t===""||t===BE(S))&&(t=!0))}return t}function kn(e,E,S=!1){const t=E.propsCache,A=t.get(e);if(A)return A;const n=e.props,r={},o=[];let R=!1;if(!V(e)){const L=U=>{R=!0;const[N,C]=kn(U,E,!0);Ne(r,N),C&&o.push(...C)};!S&&E.mixins.length&&E.mixins.forEach(L),e.extends&&L(e.extends),e.mixins&&e.mixins.forEach(L)}if(!n&&!R)return t.set(e,mE),mE;if(y(n))for(let L=0;L<n.length;L++){const U=$e(n[L]);fA(U)&&(r[U]=ne)}else if(n)for(const L in n){const U=$e(L);if(fA(U)){const N=n[L],C=r[U]=y(N)||V(N)?{type:N}:N;if(C){const F=MA(Boolean,C.type),K=MA(String,C.type);C[0]=F>-1,C[1]=K<0||F<K,(F>-1||J(C,"default"))&&o.push(U)}}}const i=[r,o];return t.set(e,i),i}function fA(e){return e[0]!=="$"}function CA(e){const E=e&&e.toString().match(/^\s*function (\w+)/);return E?E[1]:e===null?"null":""}function PA(e,E){return CA(e)===CA(E)}function MA(e,E){return y(E)?E.findIndex(S=>PA(S,e)):V(E)&&PA(E,e)?0:-1}const Jn=e=>e[0]==="_"||e==="$stable",Xt=e=>y(e)?e.map(Qe):[Qe(e)],WO=(e,E,S)=>{if(E._n)return E;const t=yE((...A)=>Xt(E(...A)),S);return t._c=!1,t},Xn=(e,E,S)=>{const t=e._ctx;for(const A in e){if(Jn(A))continue;const n=e[A];if(V(n))E[A]=WO(A,n,t);else if(n!=null){const r=Xt(n);E[A]=()=>r}}},zn=(e,E)=>{const S=Xt(E);e.slots.default=()=>S},yO=(e,E)=>{if(e.vnode.shapeFlag&32){const S=E._;S?(e.slots=z(E),GS(E,"_",S)):Xn(E,e.slots={})}else e.slots={},E&&zn(e,E);GS(e.slots,QS,1)},vO=(e,E,S)=>{const{vnode:t,slots:A}=e;let n=!0,r=ne;if(t.shapeFlag&32){const o=E._;o?S&&o===1?n=!1:(Ne(A,E),!S&&o===1&&delete A._):(n=!E.$stable,Xn(E,A)),r=E}else E&&(zn(e,E),r={default:1});if(n)for(const o in A)!Jn(o)&&!(o in r)&&delete A[o]};function jn(){return{app:null,config:{isNativeTag:ar,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let bO=0;function VO(e,E){return function(t,A=null){V(t)||(t=Object.assign({},t)),A!=null&&!se(A)&&(A=null);const n=jn(),r=new Set;let o=!1;const R=n.app={_uid:bO++,_component:t,_props:A,_container:null,_context:n,_instance:null,version:ro,get config(){return n.config},set config(i){},use(i,...L){return r.has(i)||(i&&V(i.install)?(r.add(i),i.install(R,...L)):V(i)&&(r.add(i),i(R,...L))),R},mixin(i){return n.mixins.includes(i)||n.mixins.push(i),R},component(i,L){return L?(n.components[i]=L,R):n.components[i]},directive(i,L){return L?(n.directives[i]=L,R):n.directives[i]},mount(i,L,U){if(!o){const N=k(t,A);return N.appContext=n,L&&E?E(N,i):e(N,i,U),o=!0,R._container=i,i.__vue_app__=R,$S(N.component)||N.component.proxy}},unmount(){o&&(e(null,R._container),delete R._container.__vue_app__)},provide(i,L){return n.provides[i]=L,R}};return R}}function dt(e,E,S,t,A=!1){if(y(e)){e.forEach((N,C)=>dt(N,E&&(y(E)?E[C]:E),S,t,A));return}if($E(t)&&!A)return;const n=t.shapeFlag&4?$S(t.component)||t.component.proxy:t.el,r=A?null:n,{i:o,r:R}=e,i=E&&E.r,L=o.refs===ne?o.refs={}:o.refs,U=o.setupState;if(i!=null&&i!==R&&(le(i)?(L[i]=null,J(U,i)&&(U[i]=null)):re(i)&&(i.value=null)),V(R))aE(R,o,12,[r,L]);else{const N=le(R),C=re(R);if(N||C){const F=()=>{if(e.f){const K=N?L[R]:R.value;A?y(K)&&Ft(K,n):y(K)?K.includes(n)||K.push(n):N?(L[R]=[n],J(U,R)&&(U[R]=L[R])):(R.value=[n],e.k&&(L[e.k]=R.value))}else N?(L[R]=r,J(U,R)&&(U[R]=r)):re(R)&&(R.value=r,e.k&&(L[e.k]=r))};r?(F.id=-1,Ye(F,S)):F()}}}const Ye=lO;function wO(e){return ZO(e)}function ZO(e,E){const S=Ur();S.__VUE__=!0;const{insert:t,remove:A,patchProp:n,createElement:r,createText:o,createComment:R,setText:i,setElementText:L,parentNode:U,nextSibling:N,setScopeId:C=ke,cloneNode:F,insertStaticContent:K}=e,W=(O,s,l,a=null,I=null,u=null,D=!1,c=null,f=!!s.dynamicChildren)=>{if(O===s)return;O&&!fE(O,s)&&(a=x(O),Ke(O,I,u,!0),O=null),s.patchFlag===-2&&(f=!1,s.dynamicChildren=null);const{type:T,ref:G,shapeFlag:M}=s;switch(T){case zt:p(O,s,l,a);break;case ye:Y(O,s,l,a);break;case nt:O==null&&g(s,l,a,D);break;case ie:q(O,s,l,a,I,u,D,c,f);break;default:M&1?Le(O,s,l,a,I,u,D,c,f):M&6?Re(O,s,l,a,I,u,D,c,f):(M&64||M&128)&&T.process(O,s,l,a,I,u,D,c,f,Te)}G!=null&&I&&dt(G,O&&O.ref,u,s||O,!s)},p=(O,s,l,a)=>{if(O==null)t(s.el=o(s.children),l,a);else{const I=s.el=O.el;s.children!==O.children&&i(I,s.children)}},Y=(O,s,l,a)=>{O==null?t(s.el=R(s.children||""),l,a):s.el=O.el},g=(O,s,l,a)=>{[O.el,O.anchor]=K(O.children,s,l,a,O.el,O.anchor)},v=({el:O,anchor:s},l,a)=>{let I;for(;O&&O!==s;)I=N(O),t(O,l,a),O=I;t(s,l,a)},Se=({el:O,anchor:s})=>{let l;for(;O&&O!==s;)l=N(O),A(O),O=l;A(s)},Le=(O,s,l,a,I,u,D,c,f)=>{D=D||s.type==="svg",O==null?Be(s,l,a,I,u,D,c,f):$(O,s,I,u,D,c,f)},Be=(O,s,l,a,I,u,D,c)=>{let f,T;const{type:G,props:M,shapeFlag:d,transition:m,patchFlag:b,dirs:Q}=O;if(O.el&&F!==void 0&&b===-1)f=O.el=F(O.el);else{if(f=O.el=r(O.type,u,M&&M.is,M),d&8?L(f,O.children):d&16&&j(O.children,f,null,a,I,u&&G!=="foreignObject",D,c),Q&&uE(O,null,a,"created"),M){for(const Ae in M)Ae!=="value"&&!MS(Ae)&&n(f,Ae,null,M[Ae],u,O.children,a,I,H);"value"in M&&n(f,"value",null,M.value),(T=M.onVnodeBeforeMount)&&ze(T,a,O)}w(f,O,O.scopeId,D,a)}Q&&uE(O,null,a,"beforeMount");const Z=(!I||I&&!I.pendingBranch)&&m&&!m.persisted;Z&&m.beforeEnter(f),t(f,s,l),((T=M&&M.onVnodeMounted)||Z||Q)&&Ye(()=>{T&&ze(T,a,O),Z&&m.enter(f),Q&&uE(O,null,a,"mounted")},I)},w=(O,s,l,a,I)=>{if(l&&C(O,l),a)for(let u=0;u<a.length;u++)C(O,a[u]);if(I){let u=I.subTree;if(s===u){const D=I.vnode;w(O,D,D.scopeId,D.slotScopeIds,I.parent)}}},j=(O,s,l,a,I,u,D,c,f=0)=>{for(let T=f;T<O.length;T++){const G=O[T]=c?lE(O[T]):Qe(O[T]);W(null,G,s,l,a,I,u,D,c)}},$=(O,s,l,a,I,u,D)=>{const c=s.el=O.el;let{patchFlag:f,dynamicChildren:T,dirs:G}=s;f|=O.patchFlag&16;const M=O.props||ne,d=s.props||ne;let m;l&&NE(l,!1),(m=d.onVnodeBeforeUpdate)&&ze(m,l,s,O),G&&uE(s,O,l,"beforeUpdate"),l&&NE(l,!0);const b=I&&s.type!=="foreignObject";if(T?oe(O.dynamicChildren,T,c,l,a,b,u):D||De(O,s,c,null,l,a,b,u,!1),f>0){if(f&16)h(c,s,M,d,l,a,I);else if(f&2&&M.class!==d.class&&n(c,"class",null,d.class,I),f&4&&n(c,"style",M.style,d.style,I),f&8){const Q=s.dynamicProps;for(let Z=0;Z<Q.length;Z++){const Ae=Q[Z],pe=M[Ae],AE=d[Ae];(AE!==pe||Ae==="value")&&n(c,Ae,pe,AE,I,O.children,l,a,H)}}f&1&&O.children!==s.children&&L(c,s.children)}else!D&&T==null&&h(c,s,M,d,l,a,I);((m=d.onVnodeUpdated)||G)&&Ye(()=>{m&&ze(m,l,s,O),G&&uE(s,O,l,"updated")},a)},oe=(O,s,l,a,I,u,D)=>{for(let c=0;c<s.length;c++){const f=O[c],T=s[c],G=f.el&&(f.type===ie||!fE(f,T)||f.shapeFlag&70)?U(f.el):l;W(f,T,G,null,a,I,u,D,!0)}},h=(O,s,l,a,I,u,D)=>{if(l!==a){for(const c in a){if(MS(c))continue;const f=a[c],T=l[c];f!==T&&c!=="value"&&n(O,c,T,f,D,s.children,I,u,H)}if(l!==ne)for(const c in l)!MS(c)&&!(c in a)&&n(O,c,l[c],null,D,s.children,I,u,H);"value"in a&&n(O,"value",l.value,a.value)}},q=(O,s,l,a,I,u,D,c,f)=>{const T=s.el=O?O.el:o(""),G=s.anchor=O?O.anchor:o("");let{patchFlag:M,dynamicChildren:d,slotScopeIds:m}=s;m&&(c=c?c.concat(m):m),O==null?(t(T,l,a),t(G,l,a),j(s.children,l,G,I,u,D,c,f)):M>0&&M&64&&d&&O.dynamicChildren?(oe(O.dynamicChildren,d,l,I,u,D,c),(s.key!=null||I&&s===I.subTree)&&Qn(O,s,!0)):De(O,s,l,G,I,u,D,c,f)},Re=(O,s,l,a,I,u,D,c,f)=>{s.slotScopeIds=c,O==null?s.shapeFlag&512?I.ctx.activate(s,l,a,D,f):Ue(s,l,a,I,u,D,f):Oe(O,s,f)},Ue=(O,s,l,a,I,u,D)=>{const c=O.component=QO(O,a,I);if(zS(O)&&(c.ctx.renderer=Te),qO(c),c.asyncDep){if(I&&I.registerDep(c,te),!O.el){const f=c.subTree=k(ye);Y(null,f,s,l)}return}te(c,O,s,l,I,u,D)},Oe=(O,s,l)=>{const a=s.component=O.component;if(oO(O,s,l))if(a.asyncDep&&!a.asyncResolved){X(a,s,l);return}else a.next=s,EO(a.update),a.update();else s.el=O.el,a.vnode=s},te=(O,s,l,a,I,u,D)=>{const c=()=>{if(O.isMounted){let{next:G,bu:M,u:d,parent:m,vnode:b}=O,Q=G,Z;NE(O,!1),G?(G.el=b.el,X(O,G,D)):G=b,M&&Et(M),(Z=G.props&&G.props.onVnodeBeforeUpdate)&&ze(Z,m,G,b),NE(O,!0);const Ae=St(O),pe=O.subTree;O.subTree=Ae,W(pe,Ae,U(pe.el),x(pe),O,I,u),G.el=Ae.el,Q===null&&sO(O,Ae.el),d&&Ye(d,I),(Z=G.props&&G.props.onVnodeUpdated)&&Ye(()=>ze(Z,m,G,b),I)}else{let G;const{el:M,props:d}=s,{bm:m,m:b,parent:Q}=O,Z=$E(s);if(NE(O,!1),m&&Et(m),!Z&&(G=d&&d.onVnodeBeforeMount)&&ze(G,Q,s),NE(O,!0),M&&fe){const Ae=()=>{O.subTree=St(O),fe(M,O.subTree,O,I,null)};Z?s.type.__asyncLoader().then(()=>!O.isUnmounted&&Ae()):Ae()}else{const Ae=O.subTree=St(O);W(null,Ae,l,a,O,I,u),s.el=Ae.el}if(b&&Ye(b,I),!Z&&(G=d&&d.onVnodeMounted)){const Ae=s;Ye(()=>ze(G,Q,Ae),I)}(s.shapeFlag&256||Q&&$E(Q.vnode)&&Q.vnode.shapeFlag&256)&&O.a&&Ye(O.a,I),O.isMounted=!0,s=l=a=null}},f=O.effect=new yt(c,()=>dn(T),O.scope),T=O.update=()=>f.run();T.id=O.uid,NE(O,!0),T()},X=(O,s,l)=>{s.component=O;const a=O.vnode.props;O.vnode=s,O.next=null,gO(O,s.props,a,l),vO(O,s.children,l),VE(),kS(void 0,O.update),wE()},De=(O,s,l,a,I,u,D,c,f=!1)=>{const T=O&&O.children,G=O?O.shapeFlag:0,M=s.children,{patchFlag:d,shapeFlag:m}=s;if(d>0){if(d&128){qe(T,M,l,a,I,u,D,c,f);return}else if(d&256){Je(T,M,l,a,I,u,D,c,f);return}}m&8?(G&16&&H(T,I,u),M!==T&&L(l,M)):G&16?m&16?qe(T,M,l,a,I,u,D,c,f):H(T,I,u,!0):(G&8&&L(l,""),m&16&&j(M,l,a,I,u,D,c,f))},Je=(O,s,l,a,I,u,D,c,f)=>{O=O||mE,s=s||mE;const T=O.length,G=s.length,M=Math.min(T,G);let d;for(d=0;d<M;d++){const m=s[d]=f?lE(s[d]):Qe(s[d]);W(O[d],m,l,null,I,u,D,c,f)}T>G?H(O,I,u,!0,!1,M):j(s,l,a,I,u,D,c,f,M)},qe=(O,s,l,a,I,u,D,c,f)=>{let T=0;const G=s.length;let M=O.length-1,d=G-1;for(;T<=M&&T<=d;){const m=O[T],b=s[T]=f?lE(s[T]):Qe(s[T]);if(fE(m,b))W(m,b,l,null,I,u,D,c,f);else break;T++}for(;T<=M&&T<=d;){const m=O[M],b=s[d]=f?lE(s[d]):Qe(s[d]);if(fE(m,b))W(m,b,l,null,I,u,D,c,f);else break;M--,d--}if(T>M){if(T<=d){const m=d+1,b=m<G?s[m].el:a;for(;T<=d;)W(null,s[T]=f?lE(s[T]):Qe(s[T]),l,b,I,u,D,c,f),T++}}else if(T>d)for(;T<=M;)Ke(O[T],I,u,!0),T++;else{const m=T,b=T,Q=new Map;for(T=b;T<=d;T++){const Ce=s[T]=f?lE(s[T]):Qe(s[T]);Ce.key!=null&&Q.set(Ce.key,T)}let Z,Ae=0;const pe=d-b+1;let AE=!1,RS=0;const Xe=new Array(pe);for(T=0;T<pe;T++)Xe[T]=0;for(T=m;T<=M;T++){const Ce=O[T];if(Ae>=pe){Ke(Ce,I,u,!0);continue}let me;if(Ce.key!=null)me=Q.get(Ce.key);else for(Z=b;Z<=d;Z++)if(Xe[Z-b]===0&&fE(Ce,s[Z])){me=Z;break}me===void 0?Ke(Ce,I,u,!0):(Xe[me-b]=T+1,me>=RS?RS=me:AE=!0,W(Ce,s[me],l,null,I,u,D,c,f),Ae++)}const lS=AE?_O(Xe):mE;for(Z=lS.length-1,T=pe-1;T>=0;T--){const Ce=b+T,me=s[Ce],iS=Ce+1<G?s[Ce+1].el:a;Xe[T]===0?W(null,me,l,iS,I,u,D,c,f):AE&&(Z<0||T!==lS[Z]?Ge(me,l,iS,2):Z--)}}},Ge=(O,s,l,a,I=null)=>{const{el:u,type:D,transition:c,children:f,shapeFlag:T}=O;if(T&6){Ge(O.component.subTree,s,l,a);return}if(T&128){O.suspense.move(s,l,a);return}if(T&64){D.move(O,s,l,Te);return}if(D===ie){t(u,s,l);for(let M=0;M<f.length;M++)Ge(f[M],s,l,a);t(O.anchor,s,l);return}if(D===nt){v(O,s,l);return}if(a!==2&&T&1&&c)if(a===0)c.beforeEnter(u),t(u,s,l),Ye(()=>c.enter(u),I);else{const{leave:M,delayLeave:d,afterLeave:m}=c,b=()=>t(u,s,l),Q=()=>{M(u,()=>{b(),m&&m()})};d?d(u,b,Q):Q()}else t(u,s,l)},Ke=(O,s,l,a=!1,I=!1)=>{const{type:u,props:D,ref:c,children:f,dynamicChildren:T,shapeFlag:G,patchFlag:M,dirs:d}=O;if(c!=null&&dt(c,null,l,O,!0),G&256){s.ctx.deactivate(O);return}const m=G&1&&d,b=!$E(O);let Q;if(b&&(Q=D&&D.onVnodeBeforeUnmount)&&ze(Q,s,O),G&6)KE(O.component,l,a);else{if(G&128){O.suspense.unmount(l,a);return}m&&uE(O,null,s,"beforeUnmount"),G&64?O.type.remove(O,s,l,I,Te,a):T&&(u!==ie||M>0&&M&64)?H(T,s,l,!1,!0):(u===ie&&M&384||!I&&G&16)&&H(f,s,l),a&&ve(O)}(b&&(Q=D&&D.onVnodeUnmounted)||m)&&Ye(()=>{Q&&ze(Q,s,O),m&&uE(O,null,s,"unmounted")},l)},ve=O=>{const{type:s,el:l,anchor:a,transition:I}=O;if(s===ie){GE(l,a);return}if(s===nt){Se(O);return}const u=()=>{A(l),I&&!I.persisted&&I.afterLeave&&I.afterLeave()};if(O.shapeFlag&1&&I&&!I.persisted){const{leave:D,delayLeave:c}=I,f=()=>D(l,u);c?c(O.el,u,f):f()}else u()},GE=(O,s)=>{let l;for(;O!==s;)l=N(O),A(O),O=l;A(s)},KE=(O,s,l)=>{const{bum:a,scope:I,update:u,subTree:D,um:c}=O;a&&Et(a),I.stop(),u&&(u.active=!1,Ke(D,O,s,l)),c&&Ye(c,s),Ye(()=>{O.isUnmounted=!0},s),s&&s.pendingBranch&&!s.isUnmounted&&O.asyncDep&&!O.asyncResolved&&O.suspenseId===s.pendingId&&(s.deps--,s.deps===0&&s.resolve())},H=(O,s,l,a=!1,I=!1,u=0)=>{for(let D=u;D<O.length;D++)Ke(O[D],s,l,a,I)},x=O=>O.shapeFlag&6?x(O.component.subTree):O.shapeFlag&128?O.suspense.next():N(O.anchor||O.el),ee=(O,s,l)=>{O==null?s._vnode&&Ke(s._vnode,null,null,!0):W(s._vnode||null,O,s,null,null,null,l),Bn(),s._vnode=O},Te={p:W,um:Ke,m:Ge,r:ve,mt:Ue,mc:j,pc:De,pbc:oe,n:x,o:e};let be,fe;return E&&([be,fe]=E(Te)),{render:ee,hydrate:be,createApp:VO(ee,be)}}function NE({effect:e,update:E},S){e.allowRecurse=E.allowRecurse=S}function Qn(e,E,S=!1){const t=e.children,A=E.children;if(y(t)&&y(A))for(let n=0;n<t.length;n++){const r=t[n];let o=A[n];o.shapeFlag&1&&!o.dynamicChildren&&((o.patchFlag<=0||o.patchFlag===32)&&(o=A[n]=lE(A[n]),o.el=r.el),S||Qn(r,o))}}function _O(e){const E=e.slice(),S=[0];let t,A,n,r,o;const R=e.length;for(t=0;t<R;t++){const i=e[t];if(i!==0){if(A=S[S.length-1],e[A]<i){E[t]=A,S.push(t);continue}for(n=0,r=S.length-1;n<r;)o=n+r>>1,e[S[o]]<i?n=o+1:r=o;i<e[S[n]]&&(n>0&&(E[t]=S[n-1]),S[n]=t)}}for(n=S.length,r=S[n-1];n-- >0;)S[n]=r,r=E[r];return S}const xO=e=>e.__isTeleport,ie=Symbol(void 0),zt=Symbol(void 0),ye=Symbol(void 0),nt=Symbol(void 0),qE=[];let _e=null;function Ee(e=!1){qE.push(_e=e?null:[])}function kO(){qE.pop(),_e=qE[qE.length-1]||null}let OS=1;function dA(e){OS+=e}function $n(e){return e.dynamicChildren=OS>0?_e||mE:null,kO(),OS>0&&_e&&_e.push(e),e}function xe(e,E,S,t,A,n){return $n(B(e,E,S,t,A,n,!0))}function Ie(e,E,S,t,A){return $n(k(e,E,S,t,A,!0))}function mS(e){return e?e.__v_isVNode===!0:!1}function fE(e,E){return e.type===E.type&&e.key===E.key}const QS="__vInternal",qn=({key:e})=>e!=null?e:null,YS=({ref:e,ref_key:E,ref_for:S})=>e!=null?le(e)||re(e)||V(e)?{i:ce,r:e,k:E,f:!!S}:e:null;function B(e,E=null,S=null,t=0,A=null,n=e===ie?0:1,r=!1,o=!1){const R={__v_isVNode:!0,__v_skip:!0,type:e,props:E,key:E&&qn(E),ref:E&&YS(E),scopeId:XS,slotScopeIds:null,children:S,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:n,patchFlag:t,dynamicProps:A,dynamicChildren:null,appContext:null};return o?(jt(R,S),n&128&&e.normalize(R)):S&&(R.shapeFlag|=le(S)?8:16),OS>0&&!r&&_e&&(R.patchFlag>0||n&6)&&R.patchFlag!==32&&_e.push(R),R}const k=JO;function JO(e,E=null,S=null,t=0,A=null,n=!1){if((!e||e===Vn)&&(e=ye),mS(e)){const o=TE(e,E,!0);return S&&jt(o,S),OS>0&&!n&&_e&&(o.shapeFlag&6?_e[_e.indexOf(e)]=o:_e.push(o)),o.patchFlag|=-2,o}if(Ao(e)&&(e=e.__vccOpts),E){E=XO(E);let{class:o,style:R}=E;o&&!le(o)&&(E.class=ue(o)),se(R)&&(Un(R)&&!y(R)&&(R=Ne({},R)),E.style=pt(R))}const r=le(e)?1:RO(e)?128:xO(e)?64:se(e)?4:V(e)?2:0;return B(e,E,S,t,A,r,n,!0)}function XO(e){return e?Un(e)||QS in e?Ne({},e):e:null}function TE(e,E,S=!1){const{props:t,ref:A,patchFlag:n,children:r}=e,o=E?oS(t||{},E):t;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:o,key:o&&qn(o),ref:E&&E.ref?S&&A?y(A)?A.concat(YS(E)):[A,YS(E)]:YS(E):A,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:r,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:E&&e.type!==ie?n===-1?16:n|16:n,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&TE(e.ssContent),ssFallback:e.ssFallback&&TE(e.ssFallback),el:e.el,anchor:e.anchor}}function FE(e=" ",E=0){return k(zt,null,e,E)}function eS(e="",E=!1){return E?(Ee(),Ie(ye,null,e)):k(ye,null,e)}function Qe(e){return e==null||typeof e=="boolean"?k(ye):y(e)?k(ie,null,e.slice()):typeof e=="object"?lE(e):k(zt,null,String(e))}function lE(e){return e.el===null||e.memo?e:TE(e)}function jt(e,E){let S=0;const{shapeFlag:t}=e;if(E==null)E=null;else if(y(E))S=16;else if(typeof E=="object")if(t&65){const A=E.default;A&&(A._c&&(A._d=!1),jt(e,A()),A._c&&(A._d=!0));return}else{S=32;const A=E._;!A&&!(QS in E)?E._ctx=ce:A===3&&ce&&(ce.slots._===1?E._=1:(E._=2,e.patchFlag|=1024))}else V(E)?(E={default:E,_ctx:ce},S=32):(E=String(E),t&64?(S=16,E=[FE(E)]):S=8);e.children=E,e.shapeFlag|=S}function oS(...e){const E={};for(let S=0;S<e.length;S++){const t=e[S];for(const A in t)if(A==="class")E.class!==t.class&&(E.class=ue([E.class,t.class]));else if(A==="style")E.style=pt([E.style,t.style]);else if(vS(A)){const n=E[A],r=t[A];r&&n!==r&&!(y(n)&&n.includes(r))&&(E[A]=n?[].concat(n,r):r)}else A!==""&&(E[A]=t[A])}return E}function ze(e,E,S,t=null){We(e,E,7,[S,t])}const zO=jn();let jO=0;function QO(e,E,S){const t=e.type,A=(E?E.appContext:e.appContext)||zO,n={uid:jO++,vnode:e,type:t,parent:E,appContext:A,root:null,next:null,subTree:null,effect:null,update:null,scope:new Dr(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:E?E.provides:Object.create(A.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:kn(t,A),emitsOptions:Kn(t,A),emit:null,emitted:null,propsDefaults:ne,inheritAttrs:t.inheritAttrs,ctx:ne,data:ne,props:ne,attrs:ne,slots:ne,refs:ne,setupState:ne,setupContext:null,suspense:S,suspenseId:S?S.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return n.ctx={_:n},n.root=E?E.root:n,n.emit=AO.bind(null,n),e.ce&&e.ce(n),n}let ae=null;const $O=()=>ae||ce,bE=e=>{ae=e,e.scope.on()},dE=()=>{ae&&ae.scope.off(),ae=null};function er(e){return e.vnode.shapeFlag&4}let sS=!1;function qO(e,E=!1){sS=E;const{props:S,children:t}=e.vnode,A=er(e);mO(e,S,A,E),yO(e,t);const n=A?eo(e,E):void 0;return sS=!1,n}function eo(e,E){const S=e.type;e.accessCache=Object.create(null),e.proxy=Dn(new Proxy(e.ctx,BO));const{setup:t}=S;if(t){const A=e.setupContext=t.length>1?So(e):null;bE(e),VE();const n=aE(t,e,0,[e.props,A]);if(wE(),dE(),An(n)){if(n.then(dE,dE),E)return n.then(r=>{YA(e,r,E)}).catch(r=>{xS(r,e,0)});e.asyncDep=n}else YA(e,n,E)}else Er(e,E)}function YA(e,E,S){V(E)?e.type.__ssrInlineRender?e.ssrRender=E:e.render=E:se(E)&&(e.setupState=Pn(E)),Er(e,S)}let HA;function Er(e,E,S){const t=e.type;if(!e.render){if(!E&&HA&&!t.render){const A=t.template;if(A){const{isCustomElement:n,compilerOptions:r}=e.appContext.config,{delimiters:o,compilerOptions:R}=t,i=Ne(Ne({isCustomElement:n,delimiters:o},r),R);t.render=HA(A,i)}}e.render=t.render||ke}bE(e),VE(),GO(e),wE(),dE()}function Eo(e){return new Proxy(e.attrs,{get(E,S){return Fe(e,"get","$attrs"),E[S]}})}function So(e){const E=t=>{e.exposed=t||{}};let S;return{get attrs(){return S||(S=Eo(e))},slots:e.slots,emit:e.emit,expose:E}}function $S(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Pn(Dn(e.exposed)),{get(E,S){if(S in E)return E[S];if(S in hS)return hS[S](e)}}))}function to(e){return V(e)&&e.displayName||e.name}function Ao(e){return V(e)&&"__vccOpts"in e}const Me=(e,E)=>$r(e,E,sS);function no(e,E,S){const t=arguments.length;return t===2?se(E)&&!y(E)?mS(E)?k(e,null,[E]):k(e,E):k(e,null,E):(t>3?S=Array.prototype.slice.call(arguments,2):t===3&&mS(S)&&(S=[S]),k(e,E,S))}const ro="3.2.36",Oo="http://www.w3.org/2000/svg",CE=typeof document!="undefined"?document:null,BA=CE&&CE.createElement("template"),oo={insert:(e,E,S)=>{E.insertBefore(e,S||null)},remove:e=>{const E=e.parentNode;E&&E.removeChild(e)},createElement:(e,E,S,t)=>{const A=E?CE.createElementNS(Oo,e):CE.createElement(e,S?{is:S}:void 0);return e==="select"&&t&&t.multiple!=null&&A.setAttribute("multiple",t.multiple),A},createText:e=>CE.createTextNode(e),createComment:e=>CE.createComment(e),setText:(e,E)=>{e.nodeValue=E},setElementText:(e,E)=>{e.textContent=E},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>CE.querySelector(e),setScopeId(e,E){e.setAttribute(E,"")},cloneNode(e){const E=e.cloneNode(!0);return"_value"in e&&(E._value=e._value),E},insertStaticContent(e,E,S,t,A,n){const r=S?S.previousSibling:E.lastChild;if(A&&(A===n||A.nextSibling))for(;E.insertBefore(A.cloneNode(!0),S),!(A===n||!(A=A.nextSibling)););else{BA.innerHTML=t?`<svg>${e}</svg>`:e;const o=BA.content;if(t){const R=o.firstChild;for(;R.firstChild;)o.appendChild(R.firstChild);o.removeChild(R)}E.insertBefore(o,S)}return[r?r.nextSibling:E.firstChild,S?S.previousSibling:E.lastChild]}};function so(e,E,S){const t=e._vtc;t&&(E=(E?[E,...t]:[...t]).join(" ")),E==null?e.removeAttribute("class"):S?e.setAttribute("class",E):e.className=E}function Ro(e,E,S){const t=e.style,A=le(S);if(S&&!A){for(const n in S)Yt(t,n,S[n]);if(E&&!le(E))for(const n in E)S[n]==null&&Yt(t,n,"")}else{const n=t.display;A?E!==S&&(t.cssText=S):E&&e.removeAttribute("style"),"_vod"in e&&(t.display=n)}}const GA=/\s*!important$/;function Yt(e,E,S){if(y(S))S.forEach(t=>Yt(e,E,t));else if(S==null&&(S=""),E.startsWith("--"))e.setProperty(E,S);else{const t=lo(e,E);GA.test(S)?e.setProperty(BE(t),S.replace(GA,""),"important"):e[t]=S}}const KA=["Webkit","Moz","ms"],rt={};function lo(e,E){const S=rt[E];if(S)return S;let t=$e(E);if(t!=="filter"&&t in e)return rt[E]=t;t=wS(t);for(let A=0;A<KA.length;A++){const n=KA[A]+t;if(n in e)return rt[E]=n}return E}const pA="http://www.w3.org/1999/xlink";function io(e,E,S,t,A){if(t&&E.startsWith("xlink:"))S==null?e.removeAttributeNS(pA,E.slice(6,E.length)):e.setAttributeNS(pA,E,S);else{const n=Rr(E);S==null||n&&!En(S)?e.removeAttribute(E):e.setAttribute(E,n?"":S)}}function Io(e,E,S,t,A,n,r){if(E==="innerHTML"||E==="textContent"){t&&r(t,A,n),e[E]=S==null?"":S;return}if(E==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=S;const R=S==null?"":S;(e.value!==R||e.tagName==="OPTION")&&(e.value=R),S==null&&e.removeAttribute(E);return}let o=!1;if(S===""||S==null){const R=typeof e[E];R==="boolean"?S=En(S):S==null&&R==="string"?(S="",o=!0):R==="number"&&(S=0,o=!0)}try{e[E]=S}catch{}o&&e.removeAttribute(E)}const[Sr,ao]=(()=>{let e=Date.now,E=!1;if(typeof window!="undefined"){Date.now()>document.createEvent("Event").timeStamp&&(e=performance.now.bind(performance));const S=navigator.userAgent.match(/firefox\/(\d+)/i);E=!!(S&&Number(S[1])<=53)}return[e,E]})();let Ht=0;const Lo=Promise.resolve(),To=()=>{Ht=0},uo=()=>Ht||(Lo.then(To),Ht=Sr());function No(e,E,S,t){e.addEventListener(E,S,t)}function co(e,E,S,t){e.removeEventListener(E,S,t)}function Uo(e,E,S,t,A=null){const n=e._vei||(e._vei={}),r=n[E];if(t&&r)r.value=t;else{const[o,R]=Do(E);if(t){const i=n[E]=fo(t,A);No(e,o,i,R)}else r&&(co(e,o,r,R),n[E]=void 0)}}const hA=/(?:Once|Passive|Capture)$/;function Do(e){let E;if(hA.test(e)){E={};let S;for(;S=e.match(hA);)e=e.slice(0,e.length-S[0].length),E[S[0].toLowerCase()]=!0}return[BE(e.slice(2)),E]}function fo(e,E){const S=t=>{const A=t.timeStamp||Sr();(ao||A>=S.attached-1)&&We(Co(t,S.value),E,5,[t])};return S.value=e,S.attached=uo(),S}function Co(e,E){if(y(E)){const S=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{S.call(e),e._stopped=!0},E.map(t=>A=>!A._stopped&&t&&t(A))}else return E}const FA=/^on[a-z]/,Po=(e,E,S,t,A=!1,n,r,o,R)=>{E==="class"?so(e,t,A):E==="style"?Ro(e,S,t):vS(E)?ht(E)||Uo(e,E,S,t,r):(E[0]==="."?(E=E.slice(1),!0):E[0]==="^"?(E=E.slice(1),!1):Mo(e,E,t,A))?Io(e,E,t,n,r,o,R):(E==="true-value"?e._trueValue=t:E==="false-value"&&(e._falseValue=t),io(e,E,t,A))};function Mo(e,E,S,t){return t?!!(E==="innerHTML"||E==="textContent"||E in e&&FA.test(E)&&V(S)):E==="spellcheck"||E==="draggable"||E==="translate"||E==="form"||E==="list"&&e.tagName==="INPUT"||E==="type"&&e.tagName==="TEXTAREA"||FA.test(E)&&le(S)?!1:E in e}const oE="transition",ZE="animation",gS=(e,{slots:E})=>no(gn,Yo(e),E);gS.displayName="Transition";const tr={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};gS.props=Ne({},gn.props,tr);const cE=(e,E=[])=>{y(e)?e.forEach(S=>S(...E)):e&&e(...E)},mA=e=>e?y(e)?e.some(E=>E.length>1):e.length>1:!1;function Yo(e){const E={};for(const h in e)h in tr||(E[h]=e[h]);if(e.css===!1)return E;const{name:S="v",type:t,duration:A,enterFromClass:n=`${S}-enter-from`,enterActiveClass:r=`${S}-enter-active`,enterToClass:o=`${S}-enter-to`,appearFromClass:R=n,appearActiveClass:i=r,appearToClass:L=o,leaveFromClass:U=`${S}-leave-from`,leaveActiveClass:N=`${S}-leave-active`,leaveToClass:C=`${S}-leave-to`}=e,F=Ho(A),K=F&&F[0],W=F&&F[1],{onBeforeEnter:p,onEnter:Y,onEnterCancelled:g,onLeave:v,onLeaveCancelled:Se,onBeforeAppear:Le=p,onAppear:Be=Y,onAppearCancelled:w=g}=E,j=(h,q,Re)=>{UE(h,q?L:o),UE(h,q?i:r),Re&&Re()},$=(h,q)=>{h._isLeaving=!1,UE(h,U),UE(h,C),UE(h,N),q&&q()},oe=h=>(q,Re)=>{const Ue=h?Be:Y,Oe=()=>j(q,h,Re);cE(Ue,[q,Oe]),gA(()=>{UE(q,h?R:n),sE(q,h?L:o),mA(Ue)||WA(q,t,K,Oe)})};return Ne(E,{onBeforeEnter(h){cE(p,[h]),sE(h,n),sE(h,r)},onBeforeAppear(h){cE(Le,[h]),sE(h,R),sE(h,i)},onEnter:oe(!1),onAppear:oe(!0),onLeave(h,q){h._isLeaving=!0;const Re=()=>$(h,q);sE(h,U),Ko(),sE(h,N),gA(()=>{!h._isLeaving||(UE(h,U),sE(h,C),mA(v)||WA(h,t,W,Re))}),cE(v,[h,Re])},onEnterCancelled(h){j(h,!1),cE(g,[h])},onAppearCancelled(h){j(h,!0),cE(w,[h])},onLeaveCancelled(h){$(h),cE(Se,[h])}})}function Ho(e){if(e==null)return null;if(se(e))return[Ot(e.enter),Ot(e.leave)];{const E=Ot(e);return[E,E]}}function Ot(e){return On(e)}function sE(e,E){E.split(/\s+/).forEach(S=>S&&e.classList.add(S)),(e._vtc||(e._vtc=new Set)).add(E)}function UE(e,E){E.split(/\s+/).forEach(t=>t&&e.classList.remove(t));const{_vtc:S}=e;S&&(S.delete(E),S.size||(e._vtc=void 0))}function gA(e){requestAnimationFrame(()=>{requestAnimationFrame(e)})}let Bo=0;function WA(e,E,S,t){const A=e._endId=++Bo,n=()=>{A===e._endId&&t()};if(S)return setTimeout(n,S);const{type:r,timeout:o,propCount:R}=Go(e,E);if(!r)return t();const i=r+"end";let L=0;const U=()=>{e.removeEventListener(i,N),n()},N=C=>{C.target===e&&++L>=R&&U()};setTimeout(()=>{L<R&&U()},o+1),e.addEventListener(i,N)}function Go(e,E){const S=window.getComputedStyle(e),t=F=>(S[F]||"").split(", "),A=t(oE+"Delay"),n=t(oE+"Duration"),r=yA(A,n),o=t(ZE+"Delay"),R=t(ZE+"Duration"),i=yA(o,R);let L=null,U=0,N=0;E===oE?r>0&&(L=oE,U=r,N=n.length):E===ZE?i>0&&(L=ZE,U=i,N=R.length):(U=Math.max(r,i),L=U>0?r>i?oE:ZE:null,N=L?L===oE?n.length:R.length:0);const C=L===oE&&/\b(transform|all)(,|$)/.test(S[oE+"Property"]);return{type:L,timeout:U,propCount:N,hasTransform:C}}function yA(e,E){for(;e.length<E.length;)e=e.concat(e);return Math.max(...E.map((S,t)=>vA(S)+vA(e[t])))}function vA(e){return Number(e.slice(0,-1).replace(",","."))*1e3}function Ko(){return document.body.offsetHeight}const po=["ctrl","shift","alt","meta"],ho={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>"button"in e&&e.button!==0,middle:e=>"button"in e&&e.button!==1,right:e=>"button"in e&&e.button!==2,exact:(e,E)=>po.some(S=>e[`${S}Key`]&&!E.includes(S))},bA=(e,E)=>(S,...t)=>{for(let A=0;A<E.length;A++){const n=ho[E[A]];if(n&&n(S,E))return}return e(S,...t)},Fo={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},mo=(e,E)=>S=>{if(!("key"in S))return;const t=BE(S.key);if(E.some(A=>A===t||Fo[A]===t))return e(S)},VA={beforeMount(e,{value:E},{transition:S}){e._vod=e.style.display==="none"?"":e.style.display,S&&E?S.beforeEnter(e):_E(e,E)},mounted(e,{value:E},{transition:S}){S&&E&&S.enter(e)},updated(e,{value:E,oldValue:S},{transition:t}){!E!=!S&&(t?E?(t.beforeEnter(e),_E(e,!0),t.enter(e)):t.leave(e,()=>{_E(e,!1)}):_E(e,E))},beforeUnmount(e,{value:E}){_E(e,E)}};function _E(e,E){e.style.display=E?e._vod:"none"}const go=Ne({patchProp:Po},oo);let wA;function Wo(){return wA||(wA=wO(go))}const yo=(...e)=>{const E=Wo().createApp(...e),{mount:S}=E;return E.mount=t=>{const A=vo(t);if(!A)return;const n=E._component;!V(n)&&!n.render&&!n.template&&(n.template=A.innerHTML),A.innerHTML="";const r=S(A,!1,A instanceof SVGElement);return A instanceof Element&&(A.removeAttribute("v-cloak"),A.setAttribute("data-v-app","")),r},E};function vo(e){return le(e)?document.querySelector(e):e}var bo="/gauntletle/assets/green_clue.39e793d3.png",Vo="/gauntletle/assets/yellow_clue.3e659cd2.png",wo="/gauntletle/assets/grey_clue.c7f72435.png";function Qt(e){return(Qt=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(E){return typeof E}:function(E){return E&&typeof Symbol=="function"&&E.constructor===Symbol&&E!==Symbol.prototype?"symbol":typeof E})(e)}function ZA(e,E,S,t,A,n,r){try{var o=e[n](r),R=o.value}catch(i){return void S(i)}o.done?E(R):Promise.resolve(R).then(t,A)}function Zo(e,E){for(var S=0;S<E.length;S++){var t=E[S];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function vE(e,E,S){return E in e?Object.defineProperty(e,E,{value:S,enumerable:!0,configurable:!0,writable:!0}):e[E]=S,e}function _A(e,E){var S=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);E&&(t=t.filter(function(A){return Object.getOwnPropertyDescriptor(e,A).enumerable})),S.push.apply(S,t)}return S}function He(e){for(var E=1;E<arguments.length;E++){var S=arguments[E]!=null?arguments[E]:{};E%2?_A(Object(S),!0).forEach(function(t){vE(e,t,S[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(S)):_A(Object(S)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(S,t))})}return e}function YE(e){return function(E){if(Array.isArray(E))return ot(E)}(e)||function(E){if(typeof Symbol!="undefined"&&Symbol.iterator in Object(E))return Array.from(E)}(e)||function(E,S){if(!!E){if(typeof E=="string")return ot(E,S);var t=Object.prototype.toString.call(E).slice(8,-1);if(t==="Object"&&E.constructor&&(t=E.constructor.name),t==="Map"||t==="Set")return Array.from(E);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return ot(E,S)}}(e)||function(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}()}function ot(e,E){(E==null||E>e.length)&&(E=e.length);for(var S=0,t=new Array(E);S<E;S++)t[S]=e[S];return t}var _o=function(e){return function(E,S){return YE(E.querySelectorAll(S)||[])}(e,'button:not([disabled]), select:not([disabled]), a[href]:not([disabled]), area[href]:not([disabled]), [contentEditable=""]:not([disabled]), [contentEditable="true"]:not([disabled]), [contentEditable="TRUE"]:not([disabled]), textarea:not([disabled]), iframe:not([disabled]), input:not([disabled]), summary:not([disabled]), [tabindex]:not([tabindex="-1"])')},xA=function(e){return e==document.activeElement},xo=function(){function e(){(function(t,A){if(!(t instanceof A))throw new TypeError("Cannot call a class as a function")})(this,e),this.root=null,this.elements=[],this.onKeyDown=this.onKeyDown.bind(this),this.enable=this.enable.bind(this),this.disable=this.disable.bind(this),this.firstElement=this.firstElement.bind(this),this.lastElement=this.lastElement.bind(this)}var E,S;return E=e,(S=[{key:"lastElement",value:function(){return this.elements[this.elements.length-1]||null}},{key:"firstElement",value:function(){return this.elements[0]||null}},{key:"onKeyDown",value:function(t){if(function(A){return A.key==="Tab"||A.keyCode===9}(t)){if(!t.shiftKey)return!document.activeElement||xA(this.lastElement())?(this.firstElement().focus(),void t.preventDefault()):void 0;xA(this.firstElement())&&(this.lastElement().focus(),t.preventDefault())}}},{key:"enabled",value:function(){return!!this.root}},{key:"enable",value:function(t){t&&(this.root=t,this.elements=_o(this.root),this.root.addEventListener("keydown",this.onKeyDown))}},{key:"disable",value:function(){this.root.removeEventListener("keydown",this.onKeyDown),this.root=null}}])&&Zo(E.prototype,S),e}(),kA=function(e){var E=e.targetTouches?e.targetTouches[0]:e;return{x:E.clientX,y:E.clientY}},NS=function(e,E,S){return typeof e!="number"&&(e=Math.min(E,S)||E),typeof S!="number"&&(S=Math.max(E,e)),Math.min(Math.max(E,e),S)},JA=function(e){return e&&Number(e.replace(/px$/,""))||0},WS={down:{pc:"mousedown",m:"touchstart"},move:{pc:"mousemove",m:"touchmove"},up:{pc:"mouseup",m:"touchend"}},cS=function(e,E,S){E&&E.addEventListener(WS[e].pc,S),E&&E.addEventListener(WS[e].m,S,{passive:!1})},US=function(e,E,S){E&&E.removeEventListener(WS[e].pc,S),E&&E.removeEventListener(WS[e].m,S)},$t=!1;if(typeof window!="undefined"){var XA={get passive(){$t=!0}};window.addEventListener("testPassive",null,XA),window.removeEventListener("testPassive",null,XA)}var ES,SS,Ar=typeof window!="undefined"&&window.navigator&&window.navigator.platform&&(/iP(ad|hone|od)/.test(window.navigator.platform)||window.navigator.platform==="MacIntel"&&window.navigator.maxTouchPoints>1),iE=[],yS=!1,HS=0,zA=-1,ko=function(e,E){var S=!1;return function(t){for(var A=[];t;){if(A.push(t),t.classList.contains("vfm"))return A;t=t.parentElement}return A}(e).forEach(function(t){(function(A){if(!A||A.nodeType!==Node.ELEMENT_NODE)return!1;var n=window.getComputedStyle(A);return["auto","scroll"].includes(n.overflowY)&&A.scrollHeight>A.clientHeight})(t)&&function(A,n){return!(A.scrollTop===0&&n<0||A.scrollTop+A.clientHeight+n>=A.scrollHeight&&n>0)}(t,E)&&(S=!0)}),S},nr=function(e){return iE.some(function(){return ko(e,-HS)})},Bt=function(e){var E=e||window.event;return!!nr(E.target)||E.touches.length>1||(E.preventDefault&&E.preventDefault(),!1)},Jo=function(e,E){if(e){if(!iE.some(function(t){return t.targetElement===e})){var S={targetElement:e,options:E||{}};iE=[].concat(YE(iE),[S]),Ar?(e.ontouchstart=function(t){t.targetTouches.length===1&&(zA=t.targetTouches[0].clientY)},e.ontouchmove=function(t){t.targetTouches.length===1&&function(A,n){HS=A.targetTouches[0].clientY-zA,!nr(A.target)&&(n&&n.scrollTop===0&&HS>0||function(r){return!!r&&r.scrollHeight-r.scrollTop<=r.clientHeight}(n)&&HS<0?Bt(A):A.stopPropagation())}(t,e)},yS||(document.addEventListener("touchmove",Bt,$t?{passive:!1}:void 0),yS=!0)):function(t){if(SS===void 0){var A=!!t&&t.reserveScrollBarGap===!0,n=window.innerWidth-document.documentElement.clientWidth;if(A&&n>0){var r=parseInt(getComputedStyle(document.body).getPropertyValue("padding-right"),10);SS=document.body.style.paddingRight,document.body.style.paddingRight="".concat(r+n,"px")}}ES===void 0&&(ES=document.body.style.overflow,document.body.style.overflow="hidden")}(E)}}else console.error("disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.")},st=function(e){e?(iE=iE.filter(function(E){return E.targetElement!==e}),Ar?(e.ontouchstart=null,e.ontouchmove=null,yS&&iE.length===0&&(document.removeEventListener("touchmove",Bt,$t?{passive:!1}:void 0),yS=!1)):iE.length||(SS!==void 0&&(document.body.style.paddingRight=SS,SS=void 0),ES!==void 0&&(document.body.style.overflow=ES,ES=void 0))):console.error("enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.")},DS=function(){},jA="enter",QA="entering",fS="leave",$A="leavng",Xo={t:"ns-resize",tr:"nesw-resize",r:"ew-resize",br:"nwse-resize",b:"ns-resize",bl:"nesw-resize",l:"ew-resize",tl:"nwse-resize"},BS={props:{name:{type:String,default:null},modelValue:{type:Boolean,default:!1},ssr:{type:Boolean,default:!0},classes:{type:[String,Object,Array],default:""},overlayClass:{type:[String,Object,Array],default:""},contentClass:{type:[String,Object,Array],default:""},styles:{type:[Object,Array],default:function(){return{}}},overlayStyle:{type:[Object,Array],default:function(){return{}}},contentStyle:{type:[Object,Array],default:function(){return{}}},lockScroll:{type:Boolean,default:!0},hideOverlay:{type:Boolean,default:!1},clickToClose:{type:Boolean,default:!0},escToClose:{type:Boolean,default:!1},preventClick:{type:Boolean,default:!1},attach:{type:null,default:!1,validator:function(e){var E=Qt(e);return E==="boolean"||E==="string"||e.nodeType===Node.ELEMENT_NODE}},transition:{type:[String,Object],default:"vfm"},overlayTransition:{type:[String,Object],default:"vfm"},keepOverlay:{type:Boolean,default:!1},zIndexAuto:{type:Boolean,default:!0},zIndexBase:{type:[String,Number],default:1e3},zIndex:{type:[Boolean,String,Number],default:!1},focusRetain:{type:Boolean,default:!0},focusTrap:{type:Boolean,default:!1},fitParent:{type:Boolean,default:!0},drag:{type:Boolean,default:!1},dragSelector:{type:String,default:""},keepChangedStyle:{type:Boolean,default:!1},resize:{type:Boolean,default:!1},resizeDirections:{type:Array,default:function(){return["t","tr","r","br","b","bl","l","tl"]},validator:function(e){return["t","tr","r","br","b","bl","l","tl"].filter(function(E){return e.indexOf(E)!==-1}).length===e.length}},minWidth:{type:Number,default:0},minHeight:{type:Number,default:0},maxWidth:{type:Number,default:1/0},maxHeight:{type:Number,default:1/0}},emits:["update:modelValue","click-outside","before-open","opened","before-close","closed","_before-open","_opened","_closed","drag:start","drag:move","drag:end","resize:start","resize:move","resize:end"],setup:function(e,E){var S=E.emit,t=Symbol("vfm"),A=_(null),n=_(null),r=_(null),o=_(null),R=_(null),i=_(null),L=_(null),U=new xo,N=_(!1),C=_S({modal:!1,overlay:!1,resize:!1}),F=_(null),K=_(null),W=_(!1),p=_({}),Y=_({}),g=_(null),v=_(null),Se=DS,Le=DS,Be=Me(function(){return typeof e.overlayTransition=="string"?{name:e.overlayTransition}:He({},e.overlayTransition)}),w=Me(function(){return typeof e.transition=="string"?{name:e.transition}:He({},e.transition)}),j=Me(function(){return(e.hideOverlay||F.value===fS)&&K.value===fS}),$=Me(function(){return e.zIndex===!1?!!e.zIndexAuto&&+e.zIndexBase+2*(L.value||0):e.zIndex}),oe=Me(function(){return He({},$.value!==!1&&{zIndex:$.value})}),h=Me(function(){var H=[Y.value];return Array.isArray(e.contentStyle)?H.push.apply(H,YE(e.contentStyle)):H.push(e.contentStyle),H});function q(){return{uid:t,props:e,emit:S,vfmContainer:n,vfmContent:r,vfmResize:o,vfmOverlayTransition:R,vfmTransition:i,getAttachElement:te,modalStackIndex:L,visibility:C,handleLockScroll:Oe,$focusTrap:U,toggle:qe,params:p}}function Re(){if(e.modelValue){if(S("_before-open",X({type:"_before-open"})),De("before-open",!1))return void Le("show");var H=te();if(H||e.attach===!1){if(e.attach!==!1){if(!A.value)return N.value=!0,void zE(function(){Re()});H.appendChild(A.value)}var x=e.api.openedModals.findIndex(function(ee){return ee.uid===t});x!==-1&&e.api.openedModals.splice(x,1),e.api.openedModals.push(q()),L.value=e.api.openedModals.length-1,Oe(),e.api.openedModals.filter(function(ee){return ee.uid!==t}).forEach(function(ee,Te){ee.getAttachElement()===H&&(ee.modalStackIndex.value=Te,!ee.props.keepOverlay&&(ee.visibility.overlay=!1))}),N.value=!0,C.overlay=!0,C.modal=!0}else H!==!1&&console.warn("Unable to locate target ".concat(e.attach))}}function Ue(){var H=e.api.openedModals.findIndex(function(ee){return ee.uid===t});if(H!==-1&&e.api.openedModals.splice(H,1),e.api.openedModals.length>0){var x=e.api.openedModals[e.api.openedModals.length-1];x.props.focusTrap&&x.$focusTrap.firstElement().focus(),(x.props.focusRetain||x.props.focusTrap)&&x.vfmContainer.value.focus(),!x.props.hideOverlay&&(x.visibility.overlay=!0)}e.drag&&ve(),e.resize&&KE(),g.value=null,C.overlay=!1,C.modal=!1}function Oe(){e.modelValue&&zE(function(){e.lockScroll?Jo(n.value,{reserveScrollBarGap:!0}):st(n.value)})}function te(){return e.attach!==!1&&(typeof e.attach=="string"?!!window&&window.document.querySelector(e.attach):e.attach)}function X(){var H=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return He({ref:q()},H)}function De(H,x){var ee=!1,Te=X({type:H,stop:function(){ee=!0}});return S(H,Te),!!ee&&(W.value=!0,zE(function(){S("update:modelValue",x)}),!0)}function Je(H,x,ee){g.value="".concat(x,":").concat(ee),S(g.value,H)}function qe(H,x){var ee=arguments;return new Promise(function(Te,be){Se=function(O){Te(O),Se=DS},Le=function(O){be(O),Le=DS};var fe=typeof H=="boolean"?H:!e.modelValue;fe&&ee.length===2&&(p.value=x),S("update:modelValue",fe)})}function Ge(H){H.stopPropagation();var x,ee="resize",Te="drag",be=H.target.getAttribute("direction");if(be)x=ee;else{if(!function(d,m,b){return b===""||YE(m.querySelectorAll(b)).includes(d.target)}(H,r.value,e.dragSelector))return;x=Te}Je(H,x,"start");var fe,O,s,l,a=kA(H),I=n.value.getBoundingClientRect(),u=r.value.getBoundingClientRect(),D=window.getComputedStyle(r.value).position==="absolute",c=JA(Y.value.top),f=JA(Y.value.left),T=function(){if(e.fitParent){var d={absolute:function(){return{minTop:0,minLeft:0,maxTop:I.height-u.height,maxLeft:I.width-u.width}},relative:function(){return{minTop:c+I.top-u.top,minLeft:f+I.left-u.left,maxTop:c+I.bottom-u.bottom,maxLeft:f+I.right-u.right}}};return D?d.absolute():d.relative()}return{}}(),G=x===ee&&(fe=document.body,O="cursor",s=Xo[be],l=fe.style[O],fe.style[O]=s,function(){fe.style[O]=l}),M=function(d){d.stopPropagation(),Je(d,x,"move");var m,b,Q=kA(d),Z={x:Q.x-a.x,y:Q.y-a.y};x===ee&&(Z=function(pe,AE,RS,Xe,lS){var Ce=function(de){var Ve,nE=AE[de.axis];nE=e.fitParent?NS(de.min,nE,de.max):nE;var rE=NS(de.minEdge,de.getEdge(nE),de.maxEdge);return nE=de.getOffsetAxis(rE,lS),vE(Ve={},de.edgeName,rE),vE(Ve,de.axis,nE),Ve},me=function(de,Ve,nE,rE){var eA,EA=Xe[Ve],SA=RS[de]-Xe[de],tA=(eA=Ve).charAt(0).toUpperCase()+eA.slice(1);return{axis:nE,edgeName:Ve,min:rE?SA:-EA,max:rE?EA:SA,minEdge:e["min".concat(tA)],maxEdge:e["max".concat(tA)],getEdge:function(et){return Xe[Ve]-et*(rE?1:-1)},getOffsetAxis:function(et,Or){var AA=Xe[Ve]-et;return Or?rE?AA:0:(rE?1:-1)*AA/2}}},iS={t:["top","height","y",!0],b:["bottom","height","y",!1],l:["left","width","x",!0],r:["right","width","x",!1]},qS={x:0,y:0};return pe.split("").forEach(function(de){var Ve=me.apply(void 0,YE(iS[de]));qS=He(He({},qS),Ce(Ve))}),qS}(be,Z,I,u,D)),D?(m=u.top-I.top+Z.y,b=u.left-I.left+Z.x):(m=c+Z.y,b=f+Z.x),x===Te&&e.fitParent&&(m=NS(T.minTop,m,T.maxTop),b=NS(T.minLeft,b,T.maxLeft));var Ae=He(He(He({position:"relative",top:m+"px",left:b+"px",margin:"unset",touchAction:"none"},D&&{position:"absolute",transform:"unset",width:u.width+"px",height:u.height+"px"}),Z.width&&{width:Z.width+"px"}),Z.height&&{height:Z.height+"px"});Y.value=He(He({},Y.value),Ae)};cS("move",document,M),cS("up",document,function d(m){m.stopPropagation(),x===ee&&G&&G(),setTimeout(function(){Je(m,x,"end")}),US("move",document,M),US("up",document,d)})}function Ke(){cS("down",r.value,Ge),Y.value.touchAction="none"}function ve(){US("down",r.value,Ge)}function GE(){C.resize=!0,zE(function(){cS("down",o.value,Ge)})}function KE(){US("down",o.value,Ge),C.resize=!1}return we(function(){return e.modelValue},function(H){if(W.value)W.value=!1;else if(Re(),!H){if(De("before-close",!0))return void Le("hide");Ue()}}),we(function(){return e.lockScroll},Oe),we(function(){return e.hideOverlay},function(H){e.modelValue&&!H&&(C.overlay=!0)}),we(function(){return e.attach},Re),we(j,function(H){H&&(N.value=!1,n.value.style.display="none")},{flush:"post"}),we(function(){return e.drag},function(H){N.value&&(H?Ke():ve())}),we(function(){return e.resize},function(H){N.value&&(H?GE():KE())}),we(function(){return e.keepChangedStyle},function(H){H||(Y.value={})}),e.api.modals.push(q()),xt(function(){Re()}),kt(function(){var H;Ue(),e.lockScroll&&n.value&&st(n.value),A==null||(H=A.value)===null||H===void 0||H.remove();var x=e.api.modals.findIndex(function(ee){return ee.uid===t});e.api.modals.splice(x,1)}),{root:A,vfmContainer:n,vfmContent:r,vfmResize:o,vfmOverlayTransition:R,vfmTransition:i,computedOverlayTransition:Be,computedTransition:w,visible:N,visibility:C,params:p,calculateZIndex:$,bindStyle:oe,bindContentStyle:h,beforeOverlayEnter:function(){F.value=QA},afterOverlayEnter:function(){F.value=jA},beforeOverlayLeave:function(){F.value=$A},afterOverlayLeave:function(){F.value=fS},beforeModalEnter:function(){K.value=QA},afterModalEnter:function(){K.value=jA,(e.focusRetain||e.focusTrap)&&n.value.focus(),e.focusTrap&&U.enable(n.value),e.drag&&Ke(),e.resize&&GE(),S("_opened"),S("opened",X({type:"opened"})),Se("show")},beforeModalLeave:function(){K.value=$A,U.enabled()&&U.disable()},afterModalLeave:function(){K.value=fS,L.value=null,e.lockScroll&&st(n.value),e.keepChangedStyle||(Y.value={});var H=!1,x=X({type:"closed",stop:function(){H=!0}});S("_closed"),S("closed",x),Se("hide"),H||(p.value={})},onMousedown:function(H){v.value=H==null?void 0:H.target},onMouseupContainer:function(){v.value===n.value&&g.value!=="resize:move"&&(S("click-outside",X({type:"click-outside"})),e.clickToClose&&S("update:modelValue",!1))},onEsc:function(){N.value&&e.escToClose&&S("update:modelValue",!1)}}}},Rt=nO();pn("data-v-2836fdb5");var zo={key:0,ref:"vfmResize",class:"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none"};hn();var jo=Rt(function(e,E,S,t,A,n){return S.ssr||t.visible?TA((Ee(),Ie("div",{key:0,ref:"root",style:t.bindStyle,class:["vfm vfm--inset",[S.attach===!1?"vfm--fixed":"vfm--absolute",{"vfm--prevent-none":S.preventClick}]],onKeydown:E[4]||(E[4]=mo(function(){return t.onEsc&&t.onEsc.apply(t,arguments)},["esc"]))},[k(gS,oS(t.computedOverlayTransition,{onBeforeEnter:t.beforeOverlayEnter,onAfterEnter:t.afterOverlayEnter,onBeforeLeave:t.beforeOverlayLeave,onAfterLeave:t.afterOverlayLeave}),{default:Rt(function(){return[!S.hideOverlay&&t.visibility.overlay?(Ee(),Ie("div",{key:0,class:["vfm__overlay vfm--overlay vfm--absolute vfm--inset",S.overlayClass],style:S.overlayStyle},null,6)):eS("v-if",!0)]}),_:1},16,["onBeforeEnter","onAfterEnter","onBeforeLeave","onAfterLeave"]),k(gS,oS(t.computedTransition,{onBeforeEnter:t.beforeModalEnter,onAfterEnter:t.afterModalEnter,onBeforeLeave:t.beforeModalLeave,onAfterLeave:t.afterModalLeave}),{default:Rt(function(){return[TA(k("div",{ref:"vfmContainer",class:["vfm__container vfm--absolute vfm--inset vfm--outline-none",S.classes],style:S.styles,"aria-expanded":t.visibility.modal.toString(),role:"dialog","aria-modal":"true",tabindex:"-1",onMouseup:E[2]||(E[2]=bA(function(){return t.onMouseupContainer&&t.onMouseupContainer.apply(t,arguments)},["self"])),onMousedown:E[3]||(E[3]=bA(function(){return t.onMousedown&&t.onMousedown.apply(t,arguments)},["self"]))},[k("div",{ref:"vfmContent",class:["vfm__content",[S.contentClass,{"vfm--prevent-auto":S.preventClick}]],style:t.bindContentStyle,onMousedown:E[1]||(E[1]=function(r){return t.onMousedown(null)})},[HO(e.$slots,"default",{params:t.params,close:function(){return e.$emit("update:modelValue",!1)}}),t.visibility.resize&&t.visibility.modal?(Ee(),Ie("div",zo,[(Ee(!0),Ie(ie,null,HE(S.resizeDirections,function(r){return Ee(),Ie("div",{key:r,direction:r,class:["vfm--resize-".concat(r),"vfm--absolute vfm--prevent-auto"]},null,10,["direction"])}),128))],512)):eS("v-if",!0)],38)],46,["aria-expanded"]),[[VA,t.visibility.modal]])]}),_:3},16,["onBeforeEnter","onAfterEnter","onBeforeLeave","onAfterLeave"])],38)),[[VA,!S.ssr||t.visible]]):eS("v-if",!0)});(function(e,E){E===void 0&&(E={});var S=E.insertAt;if(e&&typeof document!="undefined"){var t=document.head||document.getElementsByTagName("head")[0],A=document.createElement("style");A.type="text/css",S==="top"&&t.firstChild?t.insertBefore(A,t.firstChild):t.appendChild(A),A.styleSheet?A.styleSheet.cssText=e:A.appendChild(document.createTextNode(e))}})(`
.vfm--fixed[data-v-2836fdb5] {
  position: fixed;
}
.vfm--absolute[data-v-2836fdb5] {
  position: absolute;
}
.vfm--inset[data-v-2836fdb5] {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.vfm--overlay[data-v-2836fdb5] {
  background-color: rgba(0, 0, 0, 0.5);
}
.vfm--prevent-none[data-v-2836fdb5] {
  pointer-events: none;
}
.vfm--prevent-auto[data-v-2836fdb5] {
  pointer-events: auto;
}
.vfm--outline-none[data-v-2836fdb5]:focus {
  outline: none;
}
.vfm-enter-active[data-v-2836fdb5],
.vfm-leave-active[data-v-2836fdb5] {
  transition: opacity 0.2s;
}
.vfm-enter-from[data-v-2836fdb5],
.vfm-leave-to[data-v-2836fdb5] {
  opacity: 0;
}
.vfm--touch-none[data-v-2836fdb5] {
  touch-action: none;
}
.vfm--select-none[data-v-2836fdb5] {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.vfm--resize-tr[data-v-2836fdb5],
.vfm--resize-br[data-v-2836fdb5],
.vfm--resize-bl[data-v-2836fdb5],
.vfm--resize-tl[data-v-2836fdb5] {
  width: 12px;
  height: 12px;
  z-index: 10;
}
.vfm--resize-t[data-v-2836fdb5] {
  top: -6px;
  left: 0;
  width: 100%;
  height: 12px;
  cursor: ns-resize;
}
.vfm--resize-tr[data-v-2836fdb5] {
  top: -6px;
  right: -6px;
  cursor: nesw-resize;
}
.vfm--resize-r[data-v-2836fdb5] {
  top: 0;
  right: -6px;
  width: 12px;
  height: 100%;
  cursor: ew-resize;
}
.vfm--resize-br[data-v-2836fdb5] {
  bottom: -6px;
  right: -6px;
  cursor: nwse-resize;
}
.vfm--resize-b[data-v-2836fdb5] {
  bottom: -6px;
  left: 0;
  width: 100%;
  height: 12px;
  cursor: ns-resize;
}
.vfm--resize-bl[data-v-2836fdb5] {
  bottom: -6px;
  left: -6px;
  cursor: nesw-resize;
}
.vfm--resize-l[data-v-2836fdb5] {
  top: 0;
  left: -6px;
  width: 12px;
  height: 100%;
  cursor: ew-resize;
}
.vfm--resize-tl[data-v-2836fdb5] {
  top: -6px;
  left: -6px;
  cursor: nwse-resize;
}
`),BS.render=jo,BS.__scopeId="data-v-2836fdb5",BS.__file="lib/VueFinalModal.vue";var Gt={props:{},methods:{slice:function(e){this.api.dynamicModals.splice(e,1)},beforeOpen:function(e,E,S){var t,A=this;return(t=function*(){e.ref.params.value=E.params,yield A.$nextTick(),yield A.$nextTick(),E.value||(A.slice(S),E.reject("show"))},function(){var n=this,r=arguments;return new Promise(function(o,R){var i=t.apply(n,r);function L(N){ZA(i,o,R,L,U,"next",N)}function U(N){ZA(i,o,R,L,U,"throw",N)}L(void 0)})})()},isString:function(e){return typeof e=="string"}}},Qo={class:"modals-container"};function qA(e,E){var S=He(He({},e),{},{props:He({},e.props)});return Object.assign(S.props,{api:{type:Object,default:function(){return E}}}),S}Gt.render=function(e,E,S,t,A,n){return Ee(),Ie("div",Qo,[(Ee(!0),Ie(ie,null,HE(e.api.dynamicModals,function(r,o){return Ee(),Ie(uA(r.component),oS({key:r.id},r.bind,{modelValue:r.value,"onUpdate:modelValue":function(R){return r.value=R}},cA(r.on),{on_closed:function(R){return n.slice(o)},on_beforeOpen:function(R){return n.beforeOpen(R,r)},on_opened:r.opened}),YO({_:2},[HE(r.slots,function(R,i){return{name:i,fn:yE(function(){return[eS(" eslint-disable vue/no-v-html "),n.isString(R)?(Ee(),Ie("div",{key:0,innerHTML:R},null,8,["innerHTML"])):(Ee(),Ie(uA(R.component),oS({key:1},R.bind,cA(R.on||{})),null,16))]})}})]),1040,["modelValue","onUpdate:modelValue","on_closed","on_beforeOpen","on_opened"])}),128))])},Gt.__file="lib/ModalsContainer.vue";var $o=function(){var e,E,S=(E=null,{show:function(t){for(var A=this,n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];switch(Qt(t)){case"string":return this.toggle.apply(this,[t,!0].concat(r));case"object":return Promise.allSettled([new Promise(function(R,i){var L={value:!0,id:Symbol("dynamicModal"),component:E,bind:{},slots:{},on:{},params:r[0],reject:i,opened:function(){R("show")}};A.dynamicModals.push(Tt(Object.assign(L,t)))})])}},hide:function(){for(var t=arguments.length,A=new Array(t),n=0;n<t;n++)A[n]=arguments[n];return this.toggle(A,!1)},hideAll:function(){return this.hide.apply(this,YE(this.openedModals.map(function(t){return t.props.name})))},toggle:function(t){for(var A=arguments.length,n=new Array(A>1?A-1:0),r=1;r<A;r++)n[r-1]=arguments[r];var o=Array.isArray(t)?this.get.apply(this,YE(t)):this.get(t);return Promise.allSettled(o.map(function(R){return R.toggle.apply(R,n)}))},get:function(){for(var t=arguments.length,A=new Array(t),n=0;n<t;n++)A[n]=arguments[n];return this.modals.filter(function(r){return A.includes(r.props.name)})},dynamicModals:Tt([]),openedModals:[],modals:[],_setDefaultModal:function(t){E=t}});return vE(e={},"$vfm",S),vE(e,"VueFinalModal",function(t){var A=qA(BS,t);return t._setDefaultModal(A),A}(S)),vE(e,"ModalsContainer",function(t){return qA(Gt,t)}(S)),e},qt=$o();qt.$vfm;var lt=qt.VueFinalModal;qt.ModalsContainer;const qo={class:"letter"},es={name:"Tile",props:{state:{type:Number,default:0},letter:{type:String,default:""},index:Number,keyboard:Boolean,initialized:Boolean,colored:Boolean,guessNotInDictionary:Boolean,currentPosition:Number,currentGuess:Number,guessNumber:Number,wordLength:Number},setup(e){const E=e,S=["empty","unguessed","not-in-word","not-in-place","in-place"];let t=Me(()=>{let n=E.currentPosition;return n==E.wordLength&&n--,E.guessNumber==E.currentGuess&&n==E.index}),A=function(){if(E.keyboard){let n=E.letter;n==="enter"?n="Enter":n==="del"&&(n="Backspace"),window.dispatchEvent(new KeyboardEvent("keyup",{key:n}))}else E.guessNumber==E.currentGuess&&window.dispatchEvent(new CustomEvent("tile-click",{detail:E.index}))};return(n,r)=>(Ee(),xe("div",{class:ue(["tile",[S[e.state],{wide:e.letter.length>1,revealed:e.state>1&&!e.keyboard&&!e.initialized,colored:e.colored,"current-tile":P(t)}]]),onClick:r[0]||(r[0]=(...o)=>P(A)&&P(A)(...o))},[B("div",qo,PS(e.letter),1)],2))}};const rr={name:"Row",props:{letters:Array,keyboard:Boolean,guessNotInDictionary:Boolean,completed:Boolean,guess:Number,currentGuess:Number,currentPosition:Number,wordLength:Number},setup(e){return(E,S)=>(Ee(),xe("div",{class:ue(["row",{current:e.guess==e.currentGuess,"not-word":e.guessNotInDictionary&&e.guess==e.currentGuess}])},[(Ee(!0),xe(ie,null,HE(e.letters,(t,A)=>(Ee(),Ie(es,{letter:t.letter,state:t.state,keyboard:e.keyboard,index:A,initialized:t.initialized,colored:t.colored,guessNotInDictionary:e.guessNotInDictionary,completed:e.completed,currentPosition:e.currentPosition,guessNumber:e.guess,currentGuess:e.currentGuess,wordLength:e.wordLength},null,8,["letter","state","keyboard","index","initialized","colored","guessNotInDictionary","completed","currentPosition","guessNumber","currentGuess","wordLength"]))),256))],2))}};const Es={class:"board",id:"board"},xE={name:"Board",props:{guesses:Array,currentGuess:Number,guessNotInDictionary:Boolean,currentPosition:Number,wordLength:Number},setup(e){return(E,S)=>(Ee(),xe("div",Es,[(Ee(!0),xe(ie,null,HE(e.guesses,(t,A)=>(Ee(),Ie(rr,{letters:t,completed:t.completed,guess:A,currentGuess:e.currentGuess,guessNotInDictionary:e.guessNotInDictionary,currentPosition:e.currentPosition,wordLength:e.wordLength},null,8,["letters","completed","guess","currentGuess","guessNotInDictionary","currentPosition","wordLength"]))),256))]))}};const Ss={class:"keyboard"},ts={name:"Keyboard",props:{rows:Array},setup(e){return(E,S)=>(Ee(),xe("div",Ss,[(Ee(!0),xe(ie,null,HE(e.rows,t=>(Ee(),Ie(rr,{letters:t,keyboard:!0},null,8,["letters"]))),256))]))}};function As(e,E){return Ee(),Ie("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24","stroke-width":"2",stroke:"currentColor","aria-hidden":"true"},[k("path",{"stroke-linecap":"round","stroke-linejoin":"round",d:"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"})])}function ns(e,E){return Ee(),Ie("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24","stroke-width":"2",stroke:"currentColor","aria-hidden":"true"},[k("path",{"stroke-linecap":"round","stroke-linejoin":"round",d:"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"})])}function CS(e,E){return Ee(),Ie("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24","stroke-width":"2",stroke:"currentColor","aria-hidden":"true"},[k("path",{"stroke-linecap":"round","stroke-linejoin":"round",d:"M6 18L18 6M6 6l12 12"})])}const en=["AAHED","AALII","AARGH","AARTI","ABACA","ABACI","ABACK","ABACS","ABAFT","ABAKA","ABAMP","ABAND","ABASE","ABASH","ABASK","ABATE","ABAYA","ABBAS","ABBED","ABBES","ABBEY","ABBOT","ABCEE","ABEAM","ABEAR","ABELE","ABERS","ABETS","ABHOR","ABIDE","ABIES","ABLED","ABLER","ABLES","ABLET","ABLOW","ABMHO","ABODE","ABOHM","ABOIL","ABOMA","ABOON","ABORD","ABORE","ABORT","ABOUT","ABOVE","ABRAM","ABRAY","ABRIM","ABRIN","ABRIS","ABSEY","ABSIT","ABUNA","ABUNE","ABUSE","ABUTS","ABUZZ","ABYES","ABYSM","ABYSS","ACAIS","ACARI","ACCAS","ACCOY","ACERB","ACERS","ACETA","ACHAR","ACHED","ACHES","ACHOO","ACIDS","ACIDY","ACING","ACINI","ACKEE","ACKER","ACMES","ACMIC","ACNED","ACNES","ACOCK","ACOLD","ACORN","ACRED","ACRES","ACRID","ACROS","ACTED","ACTIN","ACTON","ACTOR","ACUTE","ACYLS","ADAGE","ADAPT","ADAWS","ADAYS","ADBOT","ADDAX","ADDED","ADDER","ADDIO","ADDLE","ADEEM","ADEPT","ADHAN","ADIEU","ADIOS","ADITS","ADMAN","ADMEN","ADMIN","ADMIT","ADMIX","ADOBE","ADOBO","ADOPT","ADORE","ADORN","ADOWN","ADOZE","ADRAD","ADRED","ADSUM","ADUKI","ADULT","ADUNC","ADUST","ADVEW","ADYTA","ADZED","ADZES","AECIA","AEDES","AEGIS","AEONS","AERIE","AEROS","AESIR","AFALD","AFARA","AFARS","AFEAR","AFFIX","AFIRE","AFLAJ","AFOOT","AFORE","AFOUL","AFRIT","AFROS","AFTER","AGAIN","AGAMA","AGAMI","AGAPE","AGARS","AGAST","AGATE","AGAVE","AGAZE","AGENE","AGENT","AGERS","AGGER","AGGIE","AGGRI","AGGRO","AGGRY","AGHAS","AGILA","AGILE","AGING","AGIOS","AGISM","AGIST","AGITA","AGLEE","AGLET","AGLEY","AGLOO","AGLOW","AGLUS","AGMAS","AGOGE","AGONE","AGONS","AGONY","AGOOD","AGORA","AGREE","AGRIA","AGRIN","AGROS","AGUED","AGUES","AGUNA","AGUTI","AHEAD","AHEAP","AHENT","AHIGH","AHIND","AHING","AHINT","AHOLD","AHULL","AHURU","AIDAS","AIDED","AIDER","AIDES","AIDOI","AIDOS","AIERY","AIGAS","AIGHT","AILED","AIMED","AIMER","AINEE","AINGA","AIOLI","AIRED","AIRER","AIRNS","AIRTH","AIRTS","AISLE","AITCH","AITUS","AIVER","AIYEE","AIZLE","AJIES","AJIVA","AJUGA","AJWAN","AKEES","AKELA","AKENE","AKING","AKITA","AKKAS","ALAAP","ALACK","ALAMO","ALAND","ALANE","ALANG","ALANS","ALANT","ALAPA","ALAPS","ALARM","ALARY","ALATE","ALAYS","ALBAS","ALBEE","ALBUM","ALCID","ALCOS","ALDEA","ALDER","ALDOL","ALECK","ALECS","ALEFS","ALEFT","ALEPH","ALERT","ALEWS","ALEYE","ALFAS","ALGAE","ALGAL","ALGAS","ALGID","ALGIN","ALGOR","ALGUM","ALIAS","ALIBI","ALIEN","ALIFS","ALIGN","ALIKE","ALINE","ALIST","ALIVE","ALIYA","ALKIE","ALKOS","ALKYD","ALKYL","ALLAY","ALLEE","ALLEL","ALLEY","ALLIS","ALLOD","ALLOT","ALLOW","ALLOY","ALLYL","ALMAH","ALMAS","ALMEH","ALMES","ALMUD","ALMUG","ALODS","ALOED","ALOES","ALOFT","ALOHA","ALOIN","ALONE","ALONG","ALOOF","ALOOS","ALOUD","ALOWE","ALPHA","ALTAR","ALTER","ALTHO","ALTOS","ALULA","ALUMS","ALURE","ALVAR","ALWAY","AMAHS","AMAIN","AMASS","AMATE","AMAUT","AMAZE","AMBAN","AMBER","AMBIT","AMBLE","AMBOS","AMBRY","AMEBA","AMEER","AMEND","AMENE","AMENS","AMENT","AMIAS","AMICE","AMICI","AMIDE","AMIDO","AMIDS","AMIES","AMIGA","AMIGO","AMINE","AMINO","AMINS","AMIRS","AMISS","AMITY","AMLAS","AMMAN","AMMON","AMMOS","AMNIA","AMNIC","AMNIO","AMOKS","AMOLE","AMONG","AMORT","AMOUR","AMOVE","AMOWT","AMPED","AMPLE","AMPLY","AMPUL","AMRIT","AMUCK","AMUSE","AMYLS","ANANA","ANATA","ANCHO","ANCLE","ANCON","ANDRO","ANEAR","ANELE","ANENT","ANGAS","ANGEL","ANGER","ANGLE","ANGLO","ANGRY","ANGST","ANIGH","ANILE","ANILS","ANIMA","ANIME","ANIMI","ANION","ANISE","ANKER","ANKHS","ANKLE","ANKUS","ANLAS","ANNAL","ANNAS","ANNAT","ANNEX","ANNOY","ANNUL","ANOAS","ANODE","ANOLE","ANOMY","ANSAE","ANTAE","ANTAR","ANTAS","ANTED","ANTES","ANTIC","ANTIS","ANTRA","ANTRE","ANTSY","ANURA","ANVIL","ANYON","AORTA","APACE","APAGE","APAID","APART","APAYD","APAYS","APEAK","APEEK","APERS","APERT","APERY","APGAR","APHID","APHIS","APIAN","APING","APIOL","APISH","APISM","APNEA","APODE","APODS","APOOP","APORT","APPAL","APPAY","APPEL","APPLE","APPLY","APPRO","APPUI","APPUY","APRES","APRON","APSES","APSIS","APSOS","APTED","APTER","APTLY","AQUAE","AQUAS","ARABA","ARAKS","ARAME","ARARS","ARBAS","ARBOR","ARCED","ARCHI","ARCOS","ARCUS","ARDEB","ARDOR","ARDRI","AREAD","AREAE","AREAL","AREAR","AREAS","ARECA","AREDD","AREDE","AREFY","AREIC","ARENA","ARENE","AREPA","ARERE","ARETE","ARETS","ARETT","ARGAL","ARGAN","ARGIL","ARGLE","ARGOL","ARGON","ARGOT","ARGUE","ARGUS","ARHAT","ARIAS","ARIEL","ARIKI","ARILS","ARIOT","ARISE","ARISH","ARKED","ARLED","ARLES","ARMED","ARMER","ARMET","ARMIL","ARMOR","ARNAS","ARNUT","AROBA","AROHA","AROID","AROMA","AROSE","ARPAS","ARPEN","ARRAH","ARRAS","ARRAY","ARRET","ARRIS","ARROW","ARROZ","ARSED","ARSES","ARSEY","ARSIS","ARSON","ARTAL","ARTEL","ARTIC","ARTIS","ARTSY","ARUHE","ARUMS","ARVAL","ARVEE","ARVOS","ARYLS","ASANA","ASCON","ASCOT","ASCUS","ASDIC","ASHED","ASHEN","ASHES","ASHET","ASIDE","ASKED","ASKER","ASKEW","ASKOI","ASKOS","ASPEN","ASPER","ASPIC","ASPIS","ASPRO","ASSAI","ASSAM","ASSAY","ASSES","ASSET","ASSEZ","ASSOT","ASTER","ASTIR","ASTUN","ASURA","ASWAY","ASWIM","ASYLA","ATAPS","ATAXY","ATIGI","ATILT","ATIMY","ATLAS","ATMAN","ATMAS","ATMOS","ATOCS","ATOKE","ATOKS","ATOLL","ATOMS","ATOMY","ATONE","ATONY","ATOPY","ATRIA","ATRIP","ATTAP","ATTAR","ATTIC","ATUAS","AUDAD","AUDIO","AUDIT","AUGER","AUGHT","AUGUR","AULAS","AULIC","AULOI","AULOS","AUMIL","AUNES","AUNTS","AUNTY","AURAE","AURAL","AURAR","AURAS","AUREI","AURES","AURIC","AURIS","AURUM","AUTOS","AUXIN","AVAIL","AVALE","AVANT","AVAST","AVELS","AVENS","AVERS","AVERT","AVGAS","AVIAN","AVINE","AVION","AVISE","AVISO","AVIZE","AVOID","AVOWS","AVYZE","AWAIT","AWAKE","AWARD","AWARE","AWARN","AWASH","AWATO","AWAVE","AWAYS","AWDLS","AWEEL","AWETO","AWFUL","AWING","AWMRY","AWNED","AWNER","AWOKE","AWOLS","AWORK","AXELS","AXIAL","AXILE","AXILS","AXING","AXIOM","AXION","AXITE","AXLED","AXLES","AXMAN","AXMEN","AXOID","AXONE","AXONS","AYAHS","AYAYA","AYELP","AYGRE","AYINS","AYONT","AYRES","AYRIE","AZANS","AZIDE","AZIDO","AZINE","AZLON","AZOIC","AZOLE","AZONS","AZOTE","AZOTH","AZUKI","AZURE","AZURN","AZURY","AZYGY","AZYME","AZYMS","BAAED","BAALS","BABAS","BABEL","BABES","BABKA","BABOO","BABUL","BABUS","BACCA","BACCO","BACCY","BACHA","BACHS","BACKS","BACON","BADDY","BADGE","BADLY","BAELS","BAFFS","BAFFY","BAFTS","BAGEL","BAGGY","BAGHS","BAGIE","BAHTS","BAHUS","BAHUT","BAILS","BAIRN","BAISA","BAITH","BAITS","BAIZA","BAIZE","BAJAN","BAJRA","BAJRI","BAJUS","BAKED","BAKEN","BAKER","BAKES","BALAS","BALDS","BALDY","BALED","BALER","BALES","BALKS","BALKY","BALLS","BALLY","BALMS","BALMY","BALOO","BALSA","BALTI","BALUN","BALUS","BAMBI","BANAK","BANAL","BANCO","BANCS","BANDA","BANDH","BANDS","BANDY","BANED","BANES","BANGS","BANIA","BANJO","BANKS","BANNS","BANTS","BANTY","BANYA","BAPUS","BARBE","BARBS","BARBY","BARCA","BARDE","BARDO","BARDS","BARDY","BARED","BARER","BARES","BARFI","BARFS","BARGE","BARIC","BARKS","BARKY","BARMS","BARMY","BARNS","BARNY","BARON","BARPS","BARRA","BARRE","BARRO","BARRY","BARYE","BASAL","BASAN","BASED","BASEN","BASER","BASES","BASHO","BASIC","BASIJ","BASIL","BASIN","BASIS","BASKS","BASON","BASSE","BASSI","BASSO","BASSY","BASTA","BASTE","BASTI","BASTO","BASTS","BATCH","BATED","BATES","BATHE","BATHS","BATIK","BATON","BATTA","BATTS","BATTU","BATTY","BAUDS","BAUKS","BAULK","BAURS","BAVIN","BAWDS","BAWDY","BAWKS","BAWLS","BAWNS","BAWRS","BAWTY","BAYED","BAYER","BAYES","BAYLE","BAYOU","BAYTS","BAZAR","BAZOO","BEACH","BEADS","BEADY","BEAKS","BEAKY","BEALS","BEAMS","BEAMY","BEANO","BEANS","BEANY","BEARD","BEARE","BEARS","BEAST","BEATH","BEATS","BEATY","BEAUS","BEAUT","BEAUX","BEBOP","BECAP","BECKE","BECKS","BEDAD","BEDEL","BEDES","BEDEW","BEDIM","BEDYE","BEECH","BEEDI","BEEFS","BEEFY","BEEPS","BEERS","BEERY","BEETS","BEFIT","BEFOG","BEGAD","BEGAN","BEGAR","BEGAT","BEGEM","BEGET","BEGIN","BEGOT","BEGUM","BEGUN","BEIGE","BEIGY","BEING","BEINS","BEKAH","BELAH","BELAR","BELAY","BELCH","BELEE","BELGA","BELIE","BELLE","BELLS","BELLY","BELON","BELOW","BELTS","BEMAD","BEMAS","BEMIX","BEMUD","BENCH","BENDS","BENDY","BENES","BENET","BENGA","BENIS","BENNE","BENNI","BENNY","BENTO","BENTS","BENTY","BEPAT","BERAY","BERES","BERET","BERGS","BERKO","BERKS","BERME","BERMS","BEROB","BERRY","BERTH","BERYL","BESAT","BESAW","BESEE","BESES","BESET","BESIT","BESOM","BESOT","BESTI","BESTS","BETAS","BETED","BETEL","BETES","BETHS","BETID","BETON","BETTA","BETTY","BEVEL","BEVER","BEVOR","BEVUE","BEVVY","BEWET","BEWIG","BEZEL","BEZES","BEZIL","BEZZY","BHAIS","BHAJI","BHANG","BHATS","BHELS","BHOOT","BHUNA","BHUTS","BIACH","BIALI","BIALY","BIBBS","BIBES","BIBLE","BICCY","BICEP","BICES","BIDDY","BIDED","BIDER","BIDES","BIDET","BIDIS","BIDON","BIELD","BIERS","BIFFO","BIFFS","BIFFY","BIFID","BIGAE","BIGGS","BIGGY","BIGHA","BIGHT","BIGLY","BIGOS","BIGOT","BIJOU","BIKED","BIKER","BIKES","BIKIE","BILBO","BILBY","BILED","BILES","BILGE","BILGY","BILKS","BILLS","BILLY","BIMAH","BIMAS","BIMBO","BINAL","BINDI","BINDS","BINER","BINES","BINGE","BINGO","BINGS","BINGY","BINIT","BINKS","BIOGS","BIOME","BIONT","BIOTA","BIPED","BIPOD","BIRCH","BIRDS","BIRKS","BIRLE","BIRLS","BIROS","BIRRS","BIRSE","BIRSY","BIRTH","BISES","BISKS","BISOM","BISON","BITCH","BITER","BITES","BITOS","BITOU","BITSY","BITTE","BITTS","BITTY","BIVIA","BIVVY","BIZES","BIZZO","BIZZY","BLABS","BLACK","BLADE","BLADS","BLADY","BLAER","BLAES","BLAFF","BLAGS","BLAHS","BLAIN","BLAME","BLAMS","BLAND","BLANK","BLARE","BLART","BLASE","BLASH","BLAST","BLATE","BLATS","BLATT","BLAUD","BLAWN","BLAWS","BLAYS","BLAZE","BLEAK","BLEAR","BLEAT","BLEBS","BLECH","BLEED","BLEEP","BLEES","BLEND","BLENT","BLERT","BLESS","BLEST","BLETS","BLEYS","BLIMP","BLIMY","BLIND","BLING","BLINI","BLINK","BLINS","BLINY","BLIPS","BLISS","BLIST","BLITE","BLITS","BLITZ","BLIVE","BLOAT","BLOBS","BLOCK","BLOCS","BLOGS","BLOKE","BLOND","BLOOD","BLOOK","BLOOM","BLOOP","BLORE","BLOTS","BLOWN","BLOWS","BLOWY","BLUBS","BLUDE","BLUDS","BLUDY","BLUED","BLUER","BLUES","BLUET","BLUEY","BLUFF","BLUID","BLUME","BLUNK","BLUNT","BLURB","BLURS","BLURT","BLUSH","BLYPE","BOABS","BOAKS","BOARD","BOARS","BOART","BOAST","BOATS","BOBAC","BOBAK","BOBAS","BOBBY","BOBOL","BOBOS","BOCCA","BOCCE","BOCCI","BOCKS","BODED","BODES","BODGE","BODHI","BODLE","BOEPS","BOETS","BOEUF","BOFFO","BOFFS","BOGAN","BOGEY","BOGGY","BOGIE","BOGLE","BOGUE","BOGUS","BOHEA","BOHOS","BOILS","BOING","BOINK","BOITE","BOKED","BOKEH","BOKES","BOKOS","BOLAR","BOLAS","BOLDS","BOLES","BOLIX","BOLLS","BOLOS","BOLTS","BOLUS","BOMAS","BOMBE","BOMBO","BOMBS","BONCE","BONDS","BONED","BONER","BONES","BONEY","BONGO","BONGS","BONIE","BONKS","BONNE","BONNY","BONUS","BONZA","BONZE","BOOAI","BOOAY","BOOBS","BOOBY","BOODY","BOOED","BOOFY","BOOGY","BOOHS","BOOKS","BOOKY","BOOLS","BOOMS","BOOMY","BOONS","BOORD","BOORS","BOOSE","BOOST","BOOTH","BOOTS","BOOTY","BOOZE","BOOZY","BOPPY","BORAK","BORAL","BORAS","BORAX","BORDE","BORDS","BORED","BOREE","BOREL","BORER","BORES","BORGO","BORIC","BORKS","BORMS","BORNA","BORNE","BORON","BORTS","BORTY","BORTZ","BOSIE","BOSKS","BOSKY","BOSOM","BOSON","BOSSY","BOSUN","BOTAS","BOTCH","BOTEL","BOTES","BOTHY","BOTTE","BOTTS","BOTTY","BOUGE","BOUGH","BOUKS","BOULE","BOULT","BOUND","BOUNS","BOURD","BOURG","BOURN","BOUSE","BOUSY","BOUTS","BOVID","BOWAT","BOWED","BOWEL","BOWER","BOWES","BOWET","BOWIE","BOWLS","BOWNE","BOWRS","BOWSE","BOXED","BOXEN","BOXER","BOXES","BOXLA","BOXTY","BOYAR","BOYAU","BOYED","BOYFS","BOYGS","BOYLA","BOYOS","BOYSY","BOZOS","BRAAI","BRACE","BRACH","BRACK","BRACT","BRADS","BRAES","BRAGS","BRAID","BRAIL","BRAIN","BRAKE","BRAKS","BRAKY","BRAME","BRAND","BRANE","BRANK","BRANS","BRANT","BRASH","BRASS","BRAST","BRATS","BRAVA","BRAVE","BRAVI","BRAVO","BRAWL","BRAWN","BRAWS","BRAXY","BRAYS","BRAZA","BRAZE","BREAD","BREAK","BREAM","BREDE","BREDS","BREED","BREEM","BREER","BREES","BREID","BREIS","BREME","BRENS","BRENT","BRERE","BRERS","BREVE","BREWS","BREYS","BRIAR","BRIBE","BRICK","BRIDE","BRIEF","BRIER","BRIES","BRIGS","BRIKI","BRIKS","BRILL","BRIMS","BRINE","BRING","BRINK","BRINS","BRINY","BRIOS","BRISE","BRISK","BRISS","BRITH","BRITS","BRITT","BRIZE","BROAD","BROCH","BROCK","BRODS","BROGH","BROGS","BROIL","BROKE","BROME","BROMO","BRONC","BROND","BROOD","BROOK","BROOL","BROOM","BROOS","BROSE","BROSY","BROTH","BROWN","BROWS","BRUGH","BRUIN","BRUIT","BRULE","BRUME","BRUNG","BRUNT","BRUSH","BRUSK","BRUST","BRUTE","BRUTS","BUATS","BUAZE","BUBAL","BUBAS","BUBBE","BUBBY","BUBUS","BUCHU","BUCKO","BUCKS","BUCKU","BUDAS","BUDDY","BUDGE","BUDIS","BUDOS","BUFFA","BUFFE","BUFFI","BUFFO","BUFFS","BUFFY","BUFOS","BUGGY","BUGLE","BUHLS","BUHRS","BUIKS","BUILD","BUILT","BUIST","BUKES","BULBS","BULGE","BULGY","BULKS","BULKY","BULLA","BULLS","BULLY","BULSE","BUMBO","BUMFS","BUMPH","BUMPS","BUMPY","BUNAS","BUNCE","BUNCH","BUNCO","BUNDE","BUNDH","BUNDS","BUNDT","BUNDU","BUNDY","BUNGS","BUNGY","BUNIA","BUNJE","BUNJY","BUNKO","BUNKS","BUNNS","BUNNY","BUNTS","BUNTY","BUNYA","BUOYS","BUPPY","BURAN","BURAS","BURBS","BURDS","BURET","BURFI","BURGH","BURGS","BURIN","BURKA","BURKE","BURKS","BURLS","BURLY","BURNS","BURNT","BUROO","BURPS","BURQA","BURRO","BURRS","BURRY","BURSA","BURSE","BURST","BUSBY","BUSED","BUSES","BUSHY","BUSKS","BUSKY","BUSSU","BUSTI","BUSTS","BUSTY","BUTCH","BUTEO","BUTES","BUTLE","BUTOH","BUTTE","BUTTS","BUTTY","BUTUT","BUTYL","BUXOM","BUYER","BUZZY","BWANA","BWAZI","BYDED","BYDES","BYKED","BYKES","BYLAW","BYRES","BYRLS","BYSSI","BYTES","BYWAY","CAAED","CABAL","CABAS","CABBY","CABER","CABIN","CABLE","CABOB","CABOC","CABRE","CACAO","CACAS","CACHE","CACKS","CACKY","CACTI","CADDY","CADEE","CADES","CADET","CADGE","CADGY","CADIE","CADIS","CADRE","CAECA","CAESE","CAFES","CAFFS","CAGED","CAGER","CAGES","CAGEY","CAGOT","CAHOW","CAIDS","CAINS","CAIRD","CAIRN","CAJON","CAJUN","CAKED","CAKES","CAKEY","CALFS","CALID","CALIF","CALIX","CALKS","CALLA","CALLS","CALMS","CALMY","CALOS","CALPA","CALPS","CALVE","CALYX","CAMAN","CAMAS","CAMEL","CAMEO","CAMES","CAMIS","CAMOS","CAMPI","CAMPO","CAMPS","CAMPY","CAMUS","CANAL","CANDY","CANED","CANEH","CANER","CANES","CANGS","CANID","CANNA","CANNS","CANNY","CANOE","CANON","CANSO","CANST","CANTO","CANTS","CANTY","CAPAS","CAPED","CAPER","CAPES","CAPEX","CAPHS","CAPIZ","CAPLE","CAPON","CAPOS","CAPOT","CAPRI","CAPUL","CAPUT","CARAP","CARAT","CARBO","CARBS","CARBY","CARDI","CARDS","CARDY","CARED","CARER","CARES","CARET","CAREX","CARGO","CARKS","CARLE","CARLS","CARNS","CARNY","CAROB","CAROL","CAROM","CARON","CARPI","CARPS","CARRS","CARRY","CARSE","CARTA","CARTE","CARTS","CARVE","CARVY","CASAS","CASCO","CASED","CASES","CASKS","CASKY","CASTE","CASTS","CASUS","CATCH","CATER","CATES","CATTY","CAUDA","CAUKS","CAULD","CAULK","CAULS","CAUMS","CAUPS","CAURI","CAUSA","CAUSE","CAVAS","CAVED","CAVEL","CAVER","CAVES","CAVIE","CAVIL","CAWED","CAWKS","CAXON","CEASE","CEAZE","CEBID","CECAL","CECUM","CEDAR","CEDED","CEDER","CEDES","CEDIS","CEIBA","CEILI","CEILS","CELEB","CELLA","CELLI","CELLO","CELLS","CELOM","CELTS","CENSE","CENTO","CENTS","CENTU","CEORL","CEPES","CERCI","CERED","CERES","CERGE","CERIA","CERIC","CERNE","CEROC","CEROS","CERTS","CERTY","CESSE","CESTA","CESTI","CETES","CETYL","CEZVE","CHACE","CHACK","CHACO","CHADO","CHADS","CHAFE","CHAFF","CHAFT","CHAIN","CHAIR","CHAIS","CHALK","CHALS","CHAMP","CHAMS","CHANA","CHANG","CHANK","CHANT","CHAOS","CHAPE","CHAPS","CHAPT","CHARA","CHARD","CHARE","CHARK","CHARM","CHARR","CHARS","CHART","CHARY","CHASE","CHASM","CHATS","CHAVE","CHAVS","CHAWK","CHAWS","CHAYA","CHAYS","CHEAP","CHEAT","CHECK","CHEEK","CHEEP","CHEER","CHEFS","CHEKA","CHELA","CHELP","CHEMO","CHEMS","CHERE","CHERT","CHESS","CHEST","CHETH","CHEVY","CHEWS","CHEWY","CHIAO","CHIAS","CHIBS","CHICA","CHICH","CHICK","CHICO","CHICS","CHIDE","CHIEF","CHIEL","CHIKS","CHILD","CHILE","CHILI","CHILL","CHIMB","CHIME","CHIMO","CHIMP","CHINA","CHINE","CHING","CHINK","CHINO","CHINS","CHIPS","CHIRK","CHIRL","CHIRM","CHIRO","CHIRP","CHIRR","CHIRT","CHIRU","CHITS","CHIVE","CHIVS","CHIVY","CHIZZ","CHOCK","CHOCO","CHOCS","CHODE","CHOGS","CHOIL","CHOIR","CHOKE","CHOKO","CHOKY","CHOLA","CHOLI","CHOMP","CHONS","CHOOF","CHOOK","CHOOM","CHOON","CHOPS","CHORD","CHORE","CHOSE","CHOTA","CHOTT","CHOUT","CHOUX","CHOWK","CHOWS","CHUBS","CHUCK","CHUFA","CHUFF","CHUGS","CHUMP","CHUMS","CHUNK","CHURL","CHURN","CHURR","CHUSE","CHUTE","CHUTS","CHYLE","CHYME","CHYND","CIBOL","CIDED","CIDER","CIDES","CIELS","CIGAR","CIGGY","CILIA","CILLS","CIMAR","CIMEX","CINCH","CINCT","CINES","CINQS","CIONS","CIPPI","CIRCA","CIRCS","CIRES","CIRLS","CIRRI","CISCO","CISSY","CISTS","CITAL","CITED","CITER","CITES","CIVES","CIVET","CIVIC","CIVIE","CIVIL","CIVVY","CLACH","CLACK","CLADE","CLADS","CLAES","CLAGS","CLAIM","CLAME","CLAMP","CLAMS","CLANG","CLANK","CLANS","CLAPS","CLAPT","CLARO","CLART","CLARY","CLASH","CLASP","CLASS","CLAST","CLATS","CLAUT","CLAVE","CLAVI","CLAWS","CLAYS","CLEAN","CLEAR","CLEAT","CLECK","CLEEK","CLEEP","CLEFS","CLEFT","CLEGS","CLEIK","CLEMS","CLEPE","CLEPT","CLERK","CLEVE","CLEWS","CLICK","CLIED","CLIES","CLIFF","CLIFT","CLIMB","CLIME","CLINE","CLING","CLINK","CLINT","CLIPE","CLIPS","CLIPT","CLITS","CLOAK","CLOAM","CLOCK","CLODS","CLOFF","CLOGS","CLOKE","CLOMB","CLOMP","CLONE","CLONK","CLONS","CLOOP","CLOOT","CLOPS","CLOSE","CLOTE","CLOTH","CLOTS","CLOUD","CLOUR","CLOUS","CLOUT","CLOVE","CLOWN","CLOWS","CLOYE","CLOYS","CLOZE","CLUBS","CLUCK","CLUED","CLUES","CLUEY","CLUMP","CLUNG","CLUNK","CLYPE","CNIDA","COACH","COACT","COADY","COALA","COALS","COALY","COAPT","COARB","COAST","COATE","COATI","COATS","COBBS","COBBY","COBIA","COBLE","COBRA","COBZA","COCAS","COCCI","COCCO","COCKS","COCKY","COCOA","COCOS","CODAS","CODEC","CODED","CODEN","CODER","CODES","CODEX","CODON","COEDS","COFFS","COGIE","COGON","COGUE","COHAB","COHEN","COHOE","COHOG","COHOS","COIFS","COIGN","COILS","COINS","COIRS","COITS","COKED","COKES","COLAS","COLBY","COLDS","COLED","COLES","COLEY","COLIC","COLIN","COLLS","COLLY","COLOG","COLON","COLOR","COLTS","COLZA","COMAE","COMAL","COMAS","COMBE","COMBI","COMBO","COMBS","COMBY","COMER","COMES","COMET","COMFY","COMIC","COMIX","COMMA","COMMO","COMMS","COMMY","COMPO","COMPS","COMPT","COMTE","COMUS","CONCH","CONDO","CONED","CONES","CONEY","CONFS","CONGA","CONGE","CONGO","CONIA","CONIC","CONIN","CONKS","CONKY","CONNE","CONNS","CONTE","CONTO","CONUS","CONVO","COOCH","COOED","COOEE","COOER","COOEY","COOFS","COOKS","COOKY","COOLS","COOMB","COOMS","COOMY","COONS","COOPS","COOPT","COOST","COOTS","COOZE","COPAL","COPAY","COPED","COPEN","COPER","COPES","COPPY","COPRA","COPSE","COPSY","COQUI","CORAL","CORAM","CORBE","CORBY","CORDS","CORED","CORER","CORES","COREY","CORGI","CORIA","CORKS","CORKY","CORMS","CORNI","CORNO","CORNS","CORNU","CORNY","CORPS","CORSE","CORSO","COSEC","COSED","COSES","COSET","COSEY","COSIE","COSTA","COSTE","COSTS","COTAN","COTED","COTES","COTHS","COTTA","COTTS","COUCH","COUDE","COUGH","COULD","COUNT","COUPE","COUPS","COURB","COURD","COURE","COURS","COURT","COUTA","COUTH","COVED","COVEN","COVER","COVES","COVET","COVEY","COVIN","COWAL","COWAN","COWED","COWER","COWKS","COWLS","COWPS","COWRY","COXAE","COXAL","COXED","COXES","COXIB","COYAU","COYED","COYER","COYLY","COYPU","COZED","COZEN","COZES","COZEY","COZIE","CRAAL","CRABS","CRACK","CRAFT","CRAGS","CRAIC","CRAIG","CRAKE","CRAME","CRAMP","CRAMS","CRANE","CRANK","CRANS","CRAPE","CRAPS","CRAPY","CRARE","CRASH","CRASS","CRATE","CRAVE","CRAWL","CRAWS","CRAYS","CRAZE","CRAZY","CREAK","CREAM","CREDO","CREDS","CREED","CREEK","CREEL","CREEP","CREES","CREME","CREMS","CRENA","CREPE","CREPS","CREPT","CREPY","CRESS","CREST","CREWE","CREWS","CRIAS","CRIBS","CRICK","CRIED","CRIER","CRIES","CRIME","CRIMP","CRIMS","CRINE","CRIOS","CRIPE","CRISE","CRISP","CRITH","CRITS","CROAK","CROCI","CROCK","CROCS","CROFT","CROGS","CROMB","CROME","CRONE","CRONK","CRONS","CRONY","CROOK","CROOL","CROON","CROPS","CRORE","CROSS","CROST","CROUP","CROUT","CROWD","CROWN","CROWS","CROZE","CRUCK","CRUDE","CRUDO","CRUDS","CRUDY","CRUEL","CRUES","CRUET","CRUFT","CRUMB","CRUMP","CRUNK","CRUOR","CRURA","CRUSE","CRUSH","CRUST","CRUSY","CRUVE","CRWTH","CRYER","CRYPT","CTENE","CUBBY","CUBEB","CUBED","CUBER","CUBES","CUBIC","CUBIT","CUDDY","CUFFO","CUFFS","CUIFS","CUING","CUISH","CUITS","CUKES","CULCH","CULET","CULEX","CULLS","CULLY","CULMS","CULPA","CULTI","CULTS","CULTY","CUMEC","CUMIN","CUNDY","CUNEI","CUNIT","CUNTS","CUPEL","CUPID","CUPPA","CUPPY","CURAT","CURBS","CURCH","CURDS","CURDY","CURED","CURER","CURES","CURET","CURFS","CURIA","CURIE","CURIO","CURLI","CURLS","CURLY","CURNS","CURNY","CURRS","CURRY","CURSE","CURSI","CURST","CURVE","CURVY","CUSEC","CUSHY","CUSKS","CUSPS","CUSPY","CUSSO","CUSUM","CUTCH","CUTER","CUTES","CUTEY","CUTIE","CUTIN","CUTIS","CUTTO","CUTTY","CUTUP","CUVEE","CUZES","CWTCH","CYANO","CYANS","CYBER","CYCAD","CYCAS","CYCLE","CYCLO","CYDER","CYLIX","CYMAE","CYMAR","CYMAS","CYMES","CYMOL","CYNIC","CYSTS","CYTES","CYTON","CZARS","DAALS","DABBA","DACES","DACHA","DACKS","DADAH","DADAS","DADDY","DADOS","DAFFS","DAFFY","DAGGA","DAGGY","DAHLS","DAIKO","DAILY","DAINE","DAINT","DAIRY","DAISY","DAKER","DALED","DALES","DALIS","DALLE","DALLY","DALTS","DAMAN","DAMAR","DAMES","DAMME","DAMNS","DAMPS","DAMPY","DANCE","DANCY","DANDY","DANGS","DANIO","DANKS","DANNY","DANTS","DARAF","DARBS","DARCY","DARED","DARER","DARES","DARGA","DARGS","DARIC","DARIS","DARKS","DARNS","DARRE","DARTS","DARZI","DASHI","DASHY","DATAL","DATED","DATER","DATES","DATOS","DATTO","DATUM","DAUBE","DAUBS","DAUBY","DAUDS","DAULT","DAUNT","DAURS","DAUTS","DAVEN","DAVIT","DAWAH","DAWDS","DAWED","DAWEN","DAWKS","DAWNS","DAWTS","DAYAN","DAYCH","DAYNT","DAZED","DAZER","DAZES","DEADS","DEAIR","DEALS","DEALT","DEANS","DEARE","DEARN","DEARS","DEARY","DEASH","DEATH","DEAVE","DEAWS","DEAWY","DEBAG","DEBAR","DEBBY","DEBEL","DEBES","DEBIT","DEBTS","DEBUD","DEBUG","DEBUR","DEBUS","DEBUT","DEBYE","DECAD","DECAF","DECAL","DECAN","DECAY","DECKO","DECKS","DECOR","DECOS","DECOY","DECRY","DEDAL","DEEDS","DEEDY","DEELY","DEEMS","DEENS","DEEPS","DEERE","DEERS","DEETS","DEEVE","DEEVS","DEFAT","DEFER","DEFFO","DEFIS","DEFOG","DEGAS","DEGUM","DEGUS","DEICE","DEIDS","DEIFY","DEIGN","DEILS","DEISM","DEIST","DEITY","DEKED","DEKES","DEKKO","DELAY","DELED","DELES","DELFS","DELFT","DELIS","DELLS","DELLY","DELOS","DELPH","DELTA","DELTS","DELVE","DEMAN","DEMES","DEMIC","DEMIT","DEMOB","DEMOI","DEMON","DEMOS","DEMPT","DEMUR","DENAR","DENAY","DENCH","DENES","DENET","DENIM","DENIS","DENSE","DENTS","DEOXY","DEPOT","DEPTH","DERAT","DERAY","DERBY","DERED","DERES","DERIG","DERMA","DERMS","DERNS","DERNY","DEROS","DERRO","DERRY","DERTH","DERVS","DESEX","DESHI","DESIS","DESKS","DESSE","DETER","DETOX","DEUCE","DEVAS","DEVEL","DEVIL","DEVIS","DEVON","DEVOS","DEVOT","DEWAN","DEWAR","DEWAX","DEWED","DEXES","DEXIE","DHABA","DHAKS","DHALS","DHIKR","DHOBI","DHOLE","DHOLL","DHOLS","DHOTI","DHOWS","DHUTI","DIACT","DIALS","DIANE","DIARY","DIAZO","DIBBS","DICED","DICER","DICES","DICEY","DICHT","DICKS","DICKY","DICOT","DICTA","DICTS","DICTY","DIDDY","DIDIE","DIDOS","DIDST","DIEBS","DIELS","DIENE","DIETS","DIFFS","DIGHT","DIGIT","DIKAS","DIKED","DIKER","DIKES","DILDO","DILLI","DILLS","DILLY","DIMBO","DIMER","DIMES","DIMLY","DIMPS","DINAR","DINED","DINER","DINES","DINGE","DINGO","DINGS","DINGY","DINIC","DINKS","DINKY","DINNA","DINOS","DINTS","DIODE","DIOLS","DIOTA","DIPPY","DIPSO","DIRAM","DIRER","DIRGE","DIRKE","DIRKS","DIRLS","DIRTS","DIRTY","DISAS","DISCI","DISCO","DISCS","DISHY","DISKS","DISME","DITAL","DITAS","DITCH","DITED","DITES","DITSY","DITTO","DITTS","DITTY","DITZY","DIVAN","DIVAS","DIVED","DIVER","DIVES","DIVIS","DIVNA","DIVOS","DIVOT","DIVVY","DIWAN","DIXIE","DIXIT","DIYAS","DIZEN","DIZZY","DJINN","DJINS","DOABS","DOATS","DOBBY","DOBES","DOBIE","DOBLA","DOBRA","DOBRO","DOCHT","DOCKS","DOCOS","DOCUS","DODDY","DODGE","DODGY","DODOS","DOEKS","DOERS","DOEST","DOETH","DOFFS","DOGES","DOGEY","DOGGO","DOGGY","DOGIE","DOGMA","DOHYO","DOILT","DOILY","DOING","DOITS","DOJOS","DOLCE","DOLCI","DOLED","DOLES","DOLIA","DOLLS","DOLLY","DOLMA","DOLOR","DOLOS","DOLTS","DOMAL","DOMED","DOMES","DOMIC","DONAH","DONAS","DONEE","DONER","DONGA","DONGS","DONKO","DONNA","DONNE","DONNY","DONOR","DONSY","DONUT","DOOBS","DOOCE","DOODY","DOOKS","DOOLE","DOOLS","DOOLY","DOOMS","DOOMY","DOONA","DOORN","DOORS","DOOZY","DOPAS","DOPED","DOPER","DOPES","DOPEY","DORAD","DORBA","DORBS","DOREE","DORES","DORIC","DORIS","DORKS","DORKY","DORMS","DORMY","DORPS","DORRS","DORSA","DORSE","DORTS","DORTY","DOSAI","DOSAS","DOSED","DOSEH","DOSER","DOSES","DOSHA","DOTAL","DOTED","DOTER","DOTES","DOTTY","DOUAR","DOUBT","DOUCE","DOUCS","DOUGH","DOUKS","DOULA","DOUMA","DOUMS","DOUPS","DOURA","DOUSE","DOUTS","DOVED","DOVEN","DOVER","DOVES","DOVIE","DOWAR","DOWDS","DOWDY","DOWED","DOWEL","DOWER","DOWIE","DOWLE","DOWLS","DOWLY","DOWNA","DOWNS","DOWNY","DOWPS","DOWRY","DOWSE","DOWTS","DOXED","DOXES","DOXIE","DOYEN","DOYLY","DOZED","DOZEN","DOZER","DOZES","DRABS","DRACK","DRACO","DRAFF","DRAFT","DRAGS","DRAIL","DRAIN","DRAKE","DRAMA","DRAMS","DRANK","DRANT","DRAPE","DRAPS","DRATS","DRAVE","DRAWL","DRAWN","DRAWS","DRAYS","DREAD","DREAM","DREAR","DRECK","DREED","DREER","DREES","DREGS","DREKS","DRENT","DRERE","DRESS","DREST","DREYS","DRIBS","DRICE","DRIED","DRIER","DRIES","DRIFT","DRILL","DRILY","DRINK","DRIPS","DRIPT","DRIVE","DROID","DROIL","DROIT","DROKE","DROLE","DROLL","DROME","DRONE","DRONY","DROOB","DROOG","DROOK","DROOL","DROOP","DROPS","DROPT","DROSS","DROUK","DROVE","DROWN","DROWS","DRUBS","DRUGS","DRUID","DRUMS","DRUNK","DRUPE","DRUSE","DRUSY","DRUXY","DRYAD","DRYAS","DRYER","DRYLY","DSOBO","DSOMO","DUADS","DUALS","DUANS","DUARS","DUBBO","DUCAL","DUCAT","DUCES","DUCHY","DUCKS","DUCKY","DUCTS","DUDDY","DUDED","DUDES","DUELS","DUETS","DUETT","DUFFS","DUFUS","DUING","DUITS","DUKAS","DUKED","DUKES","DUKKA","DULCE","DULES","DULIA","DULLS","DULLY","DULSE","DUMAS","DUMBO","DUMBS","DUMKA","DUMKY","DUMMY","DUMPS","DUMPY","DUNAM","DUNCE","DUNCH","DUNES","DUNGS","DUNGY","DUNKS","DUNNO","DUNNY","DUNSH","DUNTS","DUOMI","DUOMO","DUPED","DUPER","DUPES","DUPLE","DUPLY","DUPPY","DURAL","DURAS","DURED","DURES","DURGY","DURNS","DUROC","DUROS","DUROY","DURRA","DURRS","DURRY","DURST","DURUM","DURZI","DUSKS","DUSKY","DUSTS","DUSTY","DUTCH","DUVET","DUXES","DWAAL","DWALE","DWALM","DWAMS","DWANG","DWARF","DWAUM","DWEEB","DWELL","DWELT","DWILE","DWINE","DYADS","DYERS","DYING","DYKED","DYKES","DYKON","DYNEL","DYNES","DZHOS","EAGER","EAGLE","EAGRE","EALED","EALES","EANED","EARDS","EARED","EARLS","EARLY","EARNS","EARNT","EARST","EARTH","EASED","EASEL","EASER","EASES","EASLE","EASTS","EATEN","EATER","EATHE","EAVED","EAVES","EBBED","EBBET","EBONS","EBONY","EBOOK","ECADS","ECHED","ECHES","ECHOS","ECLAT","ECRUS","EDEMA","EDGED","EDGER","EDGES","EDICT","EDIFY","EDILE","EDITS","EDUCE","EDUCT","EEJIT","EENSY","EERIE","EEVEN","EEVNS","EFFED","EGADS","EGERS","EGEST","EGGAR","EGGED","EGGER","EGMAS","EGRET","EHING","EIDER","EIDOS","EIGHT","EIGNE","EIKED","EIKON","EILDS","EISEL","EJECT","EJIDO","EKING","EKKAS","ELAIN","ELAND","ELANS","ELATE","ELBOW","ELCHI","ELDER","ELDIN","ELECT","ELEGY","ELEMI","ELFED","ELFIN","ELIAD","ELIDE","ELINT","ELITE","ELMEN","ELOGE","ELOGY","ELOIN","ELOPE","ELOPS","ELPEE","ELSIN","ELUDE","ELUTE","ELVAN","ELVEN","ELVER","ELVES","EMACS","EMAIL","EMBAR","EMBAY","EMBED","EMBER","EMBOG","EMBOW","EMBOX","EMBUS","EMCEE","EMEER","EMEND","EMERG","EMERY","EMEUS","EMICS","EMIRS","EMITS","EMMAS","EMMER","EMMET","EMMEW","EMMYS","EMOJI","EMONG","EMOTE","EMOVE","EMPTS","EMPTY","EMULE","EMURE","EMYDE","EMYDS","ENACT","ENARM","ENATE","ENDED","ENDER","ENDEW","ENDOW","ENDUE","ENEMA","ENEMY","ENEWS","ENFIX","ENIAC","ENJOY","ENLIT","ENMEW","ENNOG","ENNUI","ENOKI","ENOLS","ENORM","ENOWS","ENROL","ENSEW","ENSKY","ENSUE","ENTER","ENTIA","ENTRY","ENURE","ENURN","ENVOI","ENVOY","ENZYM","EORLS","EOSIN","EPACT","EPEES","EPHAH","EPHAS","EPHOD","EPHOR","EPICS","EPOCH","EPODE","EPOPT","EPOXY","EPRIS","EQUAL","EQUES","EQUID","EQUIP","ERASE","ERBIA","ERECT","EREVS","ERGON","ERGOS","ERGOT","ERHUS","ERICA","ERICK","ERICS","ERING","ERNED","ERNES","ERODE","EROSE","ERRED","ERROR","ERSES","ERUCT","ERUGO","ERUPT","ERUVS","ERVEN","ERVIL","ESCAR","ESCOT","ESILE","ESKAR","ESKER","ESNES","ESSAY","ESSES","ESTER","ESTOC","ESTOP","ESTRO","ETAGE","ETAPE","ETATS","ETENS","ETHAL","ETHER","ETHIC","ETHNE","ETHOS","ETHYL","ETICS","ETNAS","ETTIN","ETTLE","ETUDE","ETUIS","ETWEE","ETYMA","EUGHS","EUKED","EUPAD","EUROS","EUSOL","EVADE","EVENS","EVENT","EVERT","EVERY","EVETS","EVHOE","EVICT","EVILS","EVITE","EVOHE","EVOKE","EWERS","EWEST","EWHOW","EWKED","EXACT","EXALT","EXAMS","EXCEL","EXEAT","EXECS","EXEEM","EXEME","EXERT","EXFIL","EXIES","EXILE","EXINE","EXING","EXIST","EXITS","EXODE","EXOME","EXONS","EXPAT","EXPEL","EXPOS","EXTOL","EXTRA","EXUDE","EXULS","EXULT","EXURB","EYASS","EYERS","EYING","EYOTS","EYRAS","EYRES","EYRIE","EYRIR","EZINE","FABBY","FABLE","FACED","FACER","FACES","FACET","FACIA","FACTA","FACTS","FADDY","FADED","FADER","FADES","FADGE","FADOS","FAENA","FAERY","FAFFS","FAFFY","FAGIN","FAGOT","FAIKS","FAILS","FAINE","FAINS","FAINT","FAIRS","FAIRY","FAITH","FAKED","FAKER","FAKES","FAKEY","FAKIE","FAKIR","FALAJ","FALLS","FALSE","FAMED","FAMES","FANAL","FANCY","FANDS","FANES","FANGA","FANGO","FANGS","FANKS","FANNY","FANON","FANOS","FANUM","FAQIR","FARAD","FARCE","FARCI","FARCY","FARDS","FARED","FARER","FARES","FARLE","FARLS","FARMS","FAROS","FARRO","FARSE","FARTS","FASCI","FASTI","FASTS","FATAL","FATED","FATES","FATLY","FATSO","FATTY","FATWA","FAUGH","FAULD","FAULT","FAUNA","FAUNS","FAURD","FAUTS","FAUVE","FAVAS","FAVEL","FAVER","FAVES","FAVOR","FAVUS","FAWNS","FAWNY","FAXED","FAXES","FAYED","FAYER","FAYNE","FAYRE","FAZED","FAZES","FEALS","FEARE","FEARS","FEART","FEASE","FEAST","FEATS","FEAZE","FECAL","FECES","FECHT","FECIT","FECKS","FEDEX","FEEBS","FEEDS","FEELS","FEENS","FEERS","FEESE","FEEZE","FEHME","FEIGN","FEINT","FEIST","FELCH","FELID","FELLA","FELLS","FELLY","FELON","FELTS","FELTY","FEMAL","FEMES","FEMME","FEMMY","FEMUR","FENCE","FENDS","FENDY","FENIS","FENKS","FENNY","FENTS","FEODS","FEOFF","FERAL","FERER","FERES","FERIA","FERLY","FERMI","FERMS","FERNS","FERNY","FERRY","FESSE","FESTA","FESTS","FESTY","FETAL","FETAS","FETCH","FETED","FETES","FETID","FETOR","FETTA","FETTS","FETUS","FETWA","FEUAR","FEUDS","FEUED","FEVER","FEWER","FEYED","FEYER","FEYLY","FEZES","FEZZY","FIARS","FIATS","FIBER","FIBRE","FIBRO","FICES","FICHE","FICHU","FICIN","FICOS","FICUS","FIDES","FIDGE","FIDOS","FIEFS","FIELD","FIEND","FIENT","FIERE","FIERS","FIERY","FIEST","FIFED","FIFER","FIFES","FIFIS","FIFTH","FIFTY","FIGGY","FIGHT","FIGOS","FIKED","FIKES","FILAR","FILCH","FILED","FILER","FILES","FILET","FILII","FILKS","FILLE","FILLO","FILLS","FILLY","FILMI","FILMS","FILMY","FILOS","FILTH","FILUM","FINAL","FINCA","FINCH","FINDS","FINED","FINER","FINES","FINIS","FINKS","FINNY","FINOS","FIORD","FIQHS","FIQUE","FIRED","FIRER","FIRES","FIRIE","FIRKS","FIRMS","FIRNS","FIRRY","FIRST","FIRTH","FISCS","FISHY","FISKS","FISTS","FISTY","FITCH","FITLY","FITNA","FITTE","FITTS","FIVER","FIVES","FIXED","FIXER","FIXES","FIXIT","FIZZY","FJELD","FJORD","FLABS","FLACK","FLAFF","FLAGS","FLAIL","FLAIR","FLAKE","FLAKS","FLAKY","FLAME","FLAMM","FLAMS","FLAMY","FLANE","FLANK","FLANS","FLAPS","FLARE","FLARY","FLASH","FLASK","FLATS","FLAVA","FLAWN","FLAWS","FLAWY","FLAXY","FLAYS","FLEAM","FLEAS","FLECK","FLEEK","FLEER","FLEES","FLEET","FLEGS","FLEME","FLESH","FLEUR","FLEWS","FLEXI","FLEXO","FLEYS","FLICK","FLICS","FLIED","FLIER","FLIES","FLIMP","FLIMS","FLING","FLINT","FLIPS","FLIRS","FLIRT","FLISK","FLITE","FLITS","FLITT","FLOAT","FLOBS","FLOCK","FLOCS","FLOES","FLOGS","FLONG","FLOOD","FLOOR","FLOPS","FLORA","FLORS","FLORY","FLOSH","FLOSS","FLOTA","FLOTE","FLOUR","FLOUT","FLOWN","FLOWS","FLUBS","FLUED","FLUES","FLUEY","FLUFF","FLUID","FLUKE","FLUKY","FLUME","FLUMP","FLUNG","FLUNK","FLUOR","FLURR","FLUSH","FLUTE","FLUTY","FLUYT","FLYBY","FLYER","FLYPE","FLYTE","FOALS","FOAMS","FOAMY","FOCAL","FOCUS","FOEHN","FOGEY","FOGGY","FOGIE","FOGLE","FOGOU","FOHNS","FOIDS","FOILS","FOINS","FOIST","FOLDS","FOLEY","FOLIA","FOLIC","FOLIE","FOLIO","FOLKS","FOLKY","FOLLY","FOMES","FONDA","FONDS","FONDU","FONES","FONLY","FONTS","FOODS","FOODY","FOOLS","FOOTS","FOOTY","FORAM","FORAY","FORBS","FORBY","FORCE","FORDO","FORDS","FOREL","FORES","FOREX","FORGE","FORGO","FORKS","FORKY","FORME","FORMS","FORTE","FORTH","FORTS","FORTY","FORUM","FORZA","FORZE","FOSSA","FOSSE","FOUAT","FOUDS","FOUER","FOUET","FOULE","FOULS","FOUND","FOUNT","FOURS","FOUTH","FOVEA","FOWLS","FOWTH","FOXED","FOXES","FOXIE","FOYER","FOYLE","FOYNE","FRABS","FRACK","FRACT","FRAGS","FRAIL","FRAIM","FRAME","FRANC","FRANK","FRAPE","FRAPS","FRASS","FRATE","FRATI","FRATS","FRAUD","FRAUS","FRAYS","FREAK","FREED","FREER","FREES","FREET","FREIT","FREMD","FRENA","FREON","FRERE","FRESH","FRETS","FRIAR","FRIBS","FRIED","FRIER","FRIES","FRIGS","FRILL","FRISE","FRISK","FRIST","FRITH","FRITS","FRITT","FRITZ","FRIZE","FRIZZ","FROCK","FROES","FROGS","FROND","FRONS","FRONT","FRORE","FRORN","FRORY","FROSH","FROST","FROTH","FROWN","FROWS","FROWY","FROZE","FRUGS","FRUIT","FRUMP","FRUSH","FRUST","FRYER","FUBAR","FUBBY","FUBSY","FUCKS","FUCUS","FUDDY","FUDGE","FUDGY","FUELS","FUERO","FUFFS","FUFFY","FUGAL","FUGGY","FUGIE","FUGIO","FUGLE","FUGLY","FUGUE","FUGUS","FUJIS","FULLS","FULLY","FUMED","FUMER","FUMES","FUMET","FUNDI","FUNDS","FUNDY","FUNGI","FUNGO","FUNGS","FUNKS","FUNKY","FUNNY","FURAL","FURAN","FURCA","FURLS","FUROL","FUROR","FURRS","FURRY","FURTH","FURZE","FURZY","FUSED","FUSEE","FUSEL","FUSES","FUSIL","FUSKS","FUSSY","FUSTS","FUSTY","FUTON","FUZED","FUZEE","FUZES","FUZIL","FUZZY","FYCES","FYKED","FYKES","FYLES","FYRDS","FYTTE","GABBA","GABBY","GABLE","GADDI","GADES","GADGE","GADID","GADIS","GADJE","GADJO","GADSO","GAFFE","GAFFS","GAGED","GAGER","GAGES","GAIDS","GAILY","GAINS","GAIRS","GAITA","GAITS","GAITT","GAJOS","GALAH","GALAS","GALAX","GALEA","GALED","GALES","GALLS","GALLY","GALOP","GALUT","GALVO","GAMAS","GAMAY","GAMBA","GAMBE","GAMBO","GAMBS","GAMED","GAMER","GAMES","GAMEY","GAMIC","GAMIN","GAMMA","GAMME","GAMMY","GAMPS","GAMUT","GANCH","GANDY","GANEF","GANEV","GANGS","GANJA","GANOF","GANTS","GAOLS","GAPED","GAPER","GAPES","GAPOS","GAPPY","GARBE","GARBO","GARBS","GARDA","GARES","GARIS","GARMS","GARNI","GARRE","GARTH","GARUM","GASES","GASPS","GASPY","GASSY","GASTS","GATCH","GATED","GATER","GATES","GATHS","GATOR","GAUCH","GAUCY","GAUDS","GAUDY","GAUGE","GAUJE","GAULT","GAUMS","GAUMY","GAUNT","GAUPS","GAURS","GAUSS","GAUZE","GAUZY","GAVEL","GAVOT","GAWCY","GAWDS","GAWKS","GAWKY","GAWPS","GAWSY","GAYAL","GAYER","GAYLY","GAZAL","GAZAR","GAZED","GAZER","GAZES","GAZON","GAZOO","GEALS","GEANS","GEARE","GEARS","GEATS","GEBUR","GECKO","GECKS","GEEKS","GEEKY","GEEPS","GEESE","GEEST","GEIST","GEITS","GELDS","GELEE","GELID","GELLY","GELTS","GEMEL","GEMMA","GEMMY","GEMOT","GENAL","GENAS","GENES","GENET","GENIC","GENIE","GENII","GENIP","GENNY","GENOA","GENOM","GENRE","GENRO","GENTS","GENTY","GENUA","GENUS","GEODE","GEOID","GERAH","GERBE","GERES","GERLE","GERMS","GERMY","GERNE","GESSE","GESSO","GESTE","GESTS","GETAS","GETUP","GEUMS","GEYAN","GEYER","GHAST","GHATS","GHAUT","GHAZI","GHEES","GHEST","GHOST","GHOUL","GHYLL","GIANT","GIBED","GIBEL","GIBER","GIBES","GIBLI","GIBUS","GIDDY","GIFTS","GIGAS","GIGHE","GIGOT","GIGUE","GILAS","GILDS","GILET","GILLS","GILLY","GILPY","GILTS","GIMEL","GIMME","GIMPS","GIMPY","GINCH","GINGE","GINGS","GINKS","GINNY","GIPON","GIPPY","GIPSY","GIRDS","GIRLS","GIRLY","GIRNS","GIRON","GIROS","GIRRS","GIRSH","GIRTH","GIRTS","GISMO","GISMS","GISTS","GITCH","GITES","GIUST","GIVED","GIVEN","GIVER","GIVES","GIZMO","GLACE","GLADE","GLADS","GLADY","GLAIK","GLAIR","GLAMS","GLAND","GLANS","GLARE","GLARY","GLASS","GLAUM","GLAUR","GLAZE","GLAZY","GLEAM","GLEAN","GLEBA","GLEBE","GLEBY","GLEDE","GLEDS","GLEED","GLEEK","GLEES","GLEET","GLEIS","GLENS","GLENT","GLEYS","GLIAL","GLIAS","GLIBS","GLIDE","GLIFF","GLIFT","GLIKE","GLIME","GLIMS","GLINT","GLISK","GLITS","GLITZ","GLOAM","GLOAT","GLOBE","GLOBI","GLOBS","GLOBY","GLODE","GLOGG","GLOMS","GLOOM","GLOOP","GLOPS","GLORY","GLOSS","GLOST","GLOUT","GLOVE","GLOWS","GLOZE","GLUED","GLUER","GLUES","GLUEY","GLUGS","GLUME","GLUMS","GLUON","GLUTE","GLUTS","GLYPH","GNARL","GNARR","GNARS","GNASH","GNATS","GNAWN","GNAWS","GNOME","GNOWS","GOADS","GOAFS","GOALS","GOARY","GOATS","GOATY","GOBAN","GOBAR","GOBBI","GOBBO","GOBBY","GOBIS","GOBOS","GODET","GODLY","GODSO","GOELS","GOERS","GOEST","GOETH","GOETY","GOFER","GOFFS","GOGGA","GOGOS","GOIER","GOING","GOJIS","GOLDS","GOLDY","GOLEM","GOLES","GOLFS","GOLLY","GOLPE","GOLPS","GOMBO","GOMER","GOMPA","GONAD","GONCH","GONEF","GONER","GONGS","GONIA","GONIF","GONKS","GONNA","GONOF","GONYS","GONZO","GOOBY","GOODS","GOODY","GOOEY","GOOFS","GOOFY","GOOGS","GOOKS","GOOKY","GOOLD","GOOLS","GOOLY","GOONS","GOONY","GOOPS","GOOPY","GOORS","GOORY","GOOSE","GOOSY","GOPAK","GOPIK","GORAL","GORAS","GORED","GORES","GORGE","GORIS","GORMS","GORMY","GORPS","GORSE","GORSY","GOSHT","GOSSE","GOTCH","GOTHS","GOTHY","GOTTA","GOUCH","GOUGE","GOUKS","GOURA","GOURD","GOUTS","GOUTY","GOWAN","GOWDS","GOWFS","GOWKS","GOWLS","GOWNS","GOXES","GOYLE","GRAAL","GRABS","GRACE","GRADE","GRADS","GRAFF","GRAFT","GRAIL","GRAIN","GRAIP","GRAMA","GRAME","GRAMP","GRAMS","GRANA","GRAND","GRANS","GRANT","GRAPE","GRAPH","GRAPY","GRASP","GRASS","GRATE","GRAVE","GRAVS","GRAVY","GRAYS","GRAZE","GREAT","GREBE","GREBO","GRECE","GREED","GREEK","GREEN","GREES","GREET","GREGE","GREGO","GREIN","GRENS","GRESE","GREVE","GREWS","GREYS","GRICE","GRIDE","GRIDS","GRIEF","GRIFF","GRIFT","GRIGS","GRIKE","GRILL","GRIME","GRIMY","GRIND","GRINS","GRIOT","GRIPE","GRIPS","GRIPT","GRIPY","GRISE","GRIST","GRISY","GRITH","GRITS","GRIZE","GROAN","GROAT","GRODY","GROGS","GROIN","GROKS","GROMA","GRONE","GROOF","GROOM","GROPE","GROSS","GROSZ","GROTS","GROUF","GROUP","GROUT","GROVE","GROVY","GROWL","GROWN","GROWS","GRRLS","GRRRL","GRUBS","GRUED","GRUEL","GRUES","GRUFE","GRUFF","GRUME","GRUMP","GRUND","GRUNT","GRYCE","GRYDE","GRYKE","GRYPE","GRYPT","GUACO","GUANA","GUANO","GUANS","GUARD","GUARS","GUAVA","GUCKS","GUCKY","GUDES","GUESS","GUEST","GUFFS","GUGAS","GUIDE","GUIDS","GUILD","GUILE","GUILT","GUIMP","GUIRO","GUISE","GULAG","GULAR","GULAS","GULCH","GULES","GULET","GULFS","GULFY","GULLS","GULLY","GULPH","GULPS","GULPY","GUMBO","GUMMA","GUMMI","GUMMY","GUMPS","GUNDY","GUNGE","GUNGY","GUNKS","GUNKY","GUNNY","GUPPY","GUQIN","GURDY","GURGE","GURLS","GURLY","GURNS","GURRY","GURSH","GURUS","GUSHY","GUSLA","GUSLE","GUSLI","GUSSY","GUSTO","GUSTS","GUSTY","GUTSY","GUTTA","GUTTY","GUYED","GUYLE","GUYOT","GUYSE","GWINE","GYALS","GYANS","GYBED","GYBES","GYELD","GYMPS","GYNAE","GYNIE","GYNNY","GYNOS","GYOZA","GYPOS","GYPPY","GYPSY","GYRAL","GYRED","GYRES","GYRON","GYROS","GYRUS","GYTES","GYVED","GYVES","HAAFS","HAARS","HABIT","HABLE","HABUS","HACEK","HACKS","HADAL","HADED","HADES","HADJI","HADST","HAEMS","HAETS","HAFFS","HAFIZ","HAFTS","HAGGS","HAHAS","HAICK","HAIKA","HAIKS","HAIKU","HAILS","HAILY","HAINS","HAINT","HAIRS","HAIRY","HAITH","HAJES","HAJIS","HAJJI","HAKAM","HAKAS","HAKEA","HAKES","HAKIM","HAKUS","HALAL","HALED","HALER","HALES","HALFA","HALFS","HALID","HALLO","HALLS","HALMA","HALMS","HALON","HALOS","HALSE","HALTS","HALVA","HALVE","HALWA","HAMAL","HAMBA","HAMED","HAMES","HAMMY","HAMZA","HANAP","HANCE","HANCH","HANDS","HANDY","HANGI","HANGS","HANKS","HANKY","HANSA","HANSE","HANTS","HAOMA","HAPAX","HAPLY","HAPPI","HAPPY","HAPUS","HARAM","HARDS","HARDY","HARED","HAREM","HARES","HARIM","HARKS","HARLS","HARMS","HARNS","HAROS","HARPS","HARPY","HARRY","HARSH","HARTS","HASHY","HASKS","HASPS","HASTA","HASTE","HASTY","HATCH","HATED","HATER","HATES","HATHA","HAUDS","HAUFS","HAUGH","HAULD","HAULM","HAULS","HAULT","HAUNS","HAUNT","HAUSE","HAUTE","HAVEN","HAVER","HAVES","HAVOC","HAWED","HAWKS","HAWMS","HAWSE","HAYED","HAYER","HAYEY","HAYLE","HAZAN","HAZED","HAZEL","HAZER","HAZES","HEADS","HEADY","HEALD","HEALS","HEAME","HEAPS","HEAPY","HEARD","HEARE","HEARS","HEART","HEAST","HEATH","HEATS","HEAVE","HEAVY","HEBEN","HEBES","HECHT","HECKS","HEDER","HEDGE","HEDGY","HEEDS","HEEDY","HEELS","HEEZE","HEFTE","HEFTS","HEFTY","HEIDS","HEIGH","HEILS","HEIRS","HEIST","HEJAB","HEJRA","HELED","HELES","HELIO","HELIX","HELLO","HELLS","HELMS","HELOS","HELOT","HELPS","HELVE","HEMAL","HEMES","HEMIC","HEMIN","HEMPS","HEMPY","HENCE","HENCH","HENDS","HENGE","HENNA","HENNY","HENRY","HENTS","HEPAR","HERBS","HERBY","HERDS","HERES","HERLS","HERMA","HERMS","HERNS","HERON","HEROS","HERRY","HERSE","HERTZ","HERYE","HESPS","HESTS","HETES","HETHS","HEUCH","HEUGH","HEVEA","HEWED","HEWER","HEWGH","HEXAD","HEXED","HEXER","HEXES","HEXYL","HEYED","HIANT","HICKS","HIDED","HIDER","HIDES","HIEMS","HIGHS","HIGHT","HIJAB","HIJRA","HIKED","HIKER","HIKES","HIKOI","HILAR","HILCH","HILLO","HILLS","HILLY","HILTS","HILUM","HILUS","HIMBO","HINAU","HINDS","HINGE","HINGS","HINKY","HINNY","HINTS","HIOIS","HIPLY","HIPPO","HIPPY","HIRED","HIREE","HIRER","HIRES","HISSY","HISTS","HITCH","HITHE","HIVED","HIVER","HIVES","HIZEN","HOAED","HOAGY","HOARD","HOARS","HOARY","HOAST","HOBBY","HOBOS","HOCKS","HOCUS","HODAD","HODJA","HOERS","HOGAN","HOGEN","HOGGS","HOGHS","HOHED","HOICK","HOIED","HOIKS","HOING","HOISE","HOIST","HOKAS","HOKED","HOKES","HOKEY","HOKIS","HOKKU","HOKUM","HOLDS","HOLED","HOLES","HOLEY","HOLKS","HOLLA","HOLLO","HOLLY","HOLME","HOLMS","HOLON","HOLOS","HOLTS","HOMAS","HOMED","HOMER","HOMES","HOMEY","HOMIE","HOMME","HOMOS","HONAN","HONDA","HONDS","HONED","HONER","HONES","HONEY","HONGI","HONGS","HONKS","HONOR","HOOCH","HOODS","HOODY","HOOEY","HOOFS","HOOKA","HOOKS","HOOKY","HOOLY","HOONS","HOOPS","HOORD","HOORS","HOOSH","HOOTS","HOOTY","HOOVE","HOPAK","HOPED","HOPER","HOPES","HOPPY","HORAH","HORAL","HORAS","HORDE","HORKS","HORME","HORNS","HORNY","HORSE","HORST","HORSY","HOSED","HOSEL","HOSEN","HOSER","HOSES","HOSEY","HOSTA","HOSTS","HOTCH","HOTEL","HOTEN","HOTLY","HOTTY","HOUFF","HOUFS","HOUGH","HOUND","HOURI","HOURS","HOUSE","HOUTS","HOVEA","HOVED","HOVEL","HOVEN","HOVER","HOVES","HOWBE","HOWDY","HOWES","HOWFF","HOWFS","HOWKS","HOWLS","HOWRE","HOWSO","HOXED","HOXES","HOYAS","HOYED","HOYLE","HUBBY","HUCKS","HUDNA","HUDUD","HUERS","HUFFS","HUFFY","HUGER","HUGGY","HUHUS","HUIAS","HULAS","HULES","HULKS","HULKY","HULLO","HULLS","HULLY","HUMAN","HUMAS","HUMFS","HUMIC","HUMID","HUMOR","HUMPH","HUMPS","HUMPY","HUMUS","HUNCH","HUNKS","HUNKY","HUNTS","HURDS","HURLS","HURLY","HURRA","HURRY","HURST","HURTS","HUSHY","HUSKS","HUSKY","HUSOS","HUSSY","HUTCH","HUTIA","HUZZA","HUZZY","HWYLS","HYDRA","HYDRO","HYENA","HYENS","HYGGE","HYING","HYKES","HYLAS","HYLEG","HYLES","HYLIC","HYMEN","HYMNS","HYNDE","HYOID","HYPED","HYPER","HYPES","HYPHA","HYPHY","HYPOS","HYRAX","HYSON","HYTHE","IAMBI","IAMBS","IBRIK","ICERS","ICHED","ICHES","ICHOR","ICIER","ICILY","ICING","ICKER","ICKLE","ICONS","ICTAL","ICTIC","ICTUS","IDANT","IDEAL","IDEAS","IDEES","IDENT","IDIOM","IDIOT","IDLED","IDLER","IDLES","IDOLA","IDOLS","IDYLL","IDYLS","IFTAR","IGAPO","IGGED","IGLOO","IGLUS","IHRAM","IKANS","IKATS","IKONS","ILEAC","ILEAL","ILEUM","ILEUS","ILIAC","ILIAD","ILIAL","ILIUM","ILLER","ILLTH","IMAGE","IMAGO","IMAMS","IMARI","IMAUM","IMBAR","IMBED","IMBUE","IMIDE","IMIDO","IMIDS","IMINE","IMINO","IMMEW","IMMIT","IMMIX","IMPED","IMPEL","IMPIS","IMPLY","IMPOT","IMPRO","IMSHI","IMSHY","INANE","INAPT","INARM","INBOX","INBYE","INCEL","INCLE","INCOG","INCUR","INCUS","INCUT","INDEW","INDEX","INDIA","INDIE","INDOL","INDOW","INDRI","INDUE","INEPT","INERM","INERT","INFER","INFIX","INFOS","INFRA","INGAN","INGLE","INGOT","INION","INKED","INKER","INKLE","INLAY","INLET","INNED","INNER","INNIT","INORB","INPUT","INRUN","INSET","INSPO","INTEL","INTER","INTIL","INTIS","INTRA","INTRO","INULA","INURE","INURN","INUST","INVAR","INWIT","IODIC","IODID","IODIN","IONIC","IOTAS","IPPON","IRADE","IRATE","IRIDS","IRING","IRKED","IROKO","IRONE","IRONS","IRONY","ISBAS","ISHES","ISLED","ISLES","ISLET","ISNAE","ISSEI","ISSUE","ISTLE","ITCHY","ITEMS","ITHER","IVIED","IVIES","IVORY","IXIAS","IXNAY","IXORA","IXTLE","IZARD","IZARS","IZZAT","JAAPS","JABOT","JACAL","JACKS","JACKY","JADED","JADES","JAFAS","JAFFA","JAGAS","JAGER","JAGGS","JAGGY","JAGIR","JAGRA","JAILS","JAKER","JAKES","JAKEY","JALAP","JALOP","JAMBE","JAMBO","JAMBS","JAMBU","JAMES","JAMMY","JAMON","JANES","JANNS","JANNY","JANTY","JAPAN","JAPED","JAPER","JAPES","JARKS","JARLS","JARPS","JARTA","JARUL","JASEY","JASPE","JASPS","JATOS","JAUKS","JAUNT","JAUPS","JAVAS","JAVEL","JAWAN","JAWED","JAXIE","JAZZY","JEANS","JEATS","JEBEL","JEDIS","JEELS","JEELY","JEEPS","JEERS","JEEZE","JEFES","JEFFS","JEHAD","JEHUS","JELAB","JELLO","JELLS","JELLY","JEMBE","JEMMY","JENNY","JEONS","JERID","JERKS","JERKY","JERRY","JESSE","JESTS","JESUS","JETES","JETON","JETTY","JEUNE","JEWEL","JEWIE","JHALA","JIAOS","JIBBA","JIBBS","JIBED","JIBER","JIBES","JIFFS","JIFFY","JIGGY","JIGOT","JIHAD","JILLS","JILTS","JIMMY","JIMPY","JINGO","JINKS","JINNE","JINNI","JINNS","JIRDS","JIRGA","JIRRE","JISMS","JIVED","JIVER","JIVES","JIVEY","JNANA","JOBED","JOBES","JOCKO","JOCKS","JOCKY","JOCOS","JODEL","JOEYS","JOHNS","JOINS","JOINT","JOIST","JOKED","JOKER","JOKES","JOKEY","JOKOL","JOLED","JOLES","JOLLS","JOLLY","JOLTS","JOLTY","JOMON","JOMOS","JONES","JONGS","JONTY","JOOKS","JORAM","JORUM","JOTAS","JOTTY","JOTUN","JOUAL","JOUGS","JOUKS","JOULE","JOURS","JOUST","JOWAR","JOWED","JOWLS","JOWLY","JOYED","JUBAS","JUBES","JUCOS","JUDAS","JUDGE","JUDGY","JUDOS","JUGAL","JUGUM","JUICE","JUICY","JUJUS","JUKED","JUKES","JUKUS","JULEP","JUMAR","JUMBO","JUMBY","JUMPS","JUMPY","JUNCO","JUNKS","JUNKY","JUNTA","JUNTO","JUPES","JUPON","JURAL","JURAT","JUREL","JURES","JUROR","JUSTS","JUTES","JUTTY","JUVES","JUVIE","KAAMA","KABAB","KABAR","KABOB","KACHA","KACKS","KADAI","KADES","KADIS","KAGOS","KAGUS","KAHAL","KAIAK","KAIDS","KAIES","KAIFS","KAIKA","KAIKS","KAILS","KAIMS","KAING","KAINS","KAKAS","KAKIS","KALAM","KALES","KALIF","KALIS","KALPA","KAMAS","KAMES","KAMIK","KAMIS","KAMME","KANAE","KANAS","KANDY","KANEH","KANES","KANGA","KANGS","KANJI","KANTS","KANZU","KAONS","KAPAS","KAPHS","KAPOK","KAPOW","KAPPA","KAPUS","KAPUT","KARAS","KARAT","KARKS","KARMA","KARNS","KAROO","KAROS","KARRI","KARST","KARSY","KARTS","KARZY","KASHA","KASME","KATAL","KATAS","KATIS","KATTI","KAUGH","KAURI","KAURU","KAURY","KAVAL","KAVAS","KAWAS","KAWAU","KAWED","KAYAK","KAYLE","KAYOS","KAZIS","KAZOO","KBARS","KEBAB","KEBAR","KEBOB","KECKS","KEDGE","KEDGY","KEECH","KEEFS","KEEKS","KEELS","KEEMA","KEENO","KEENS","KEEPS","KEETS","KEEVE","KEFIR","KEHUA","KEIRS","KELEP","KELIM","KELLS","KELLY","KELPS","KELPY","KELTS","KELTY","KEMBO","KEMBS","KEMPS","KEMPT","KEMPY","KENAF","KENCH","KENDO","KENOS","KENTE","KENTS","KEPIS","KERBS","KEREL","KERFS","KERKY","KERMA","KERNE","KERNS","KEROS","KERRY","KERVE","KESAR","KESTS","KETAS","KETCH","KETES","KETOL","KEVEL","KEVIL","KEXES","KEYED","KEYER","KHADI","KHAFS","KHAKI","KHANS","KHAPH","KHATS","KHAYA","KHAZI","KHEDA","KHETH","KHETS","KHOJA","KHORS","KHOUM","KHUDS","KIAAT","KIACK","KIANG","KIBBE","KIBBI","KIBEI","KIBES","KIBLA","KICKS","KICKY","KIDDO","KIDDY","KIDEL","KIDGE","KIEFS","KIERS","KIEVE","KIEVS","KIGHT","KIKOI","KILEY","KILIM","KILLS","KILNS","KILOS","KILPS","KILTS","KILTY","KIMBO","KINAS","KINDA","KINDS","KINDY","KINES","KINGS","KININ","KINKS","KINKY","KINOS","KIORE","KIOSK","KIPES","KIPPA","KIPPS","KIRBY","KIRKS","KIRNS","KIRRI","KISAN","KISSY","KISTS","KITED","KITER","KITES","KITHE","KITHS","KITTY","KITUL","KIVAS","KIWIS","KLANG","KLAPS","KLETT","KLICK","KLIEG","KLIKS","KLONG","KLOOF","KLUGE","KLUTZ","KNACK","KNAGS","KNAPS","KNARL","KNARS","KNAUR","KNAVE","KNAWE","KNEAD","KNEED","KNEEL","KNEES","KNELL","KNELT","KNIFE","KNISH","KNITS","KNIVE","KNOBS","KNOCK","KNOLL","KNOPS","KNOSP","KNOTS","KNOUT","KNOWE","KNOWN","KNOWS","KNUBS","KNURL","KNURR","KNURS","KNUTS","KOALA","KOANS","KOAPS","KOBAN","KOBOS","KOELS","KOFFS","KOFTA","KOGAL","KOHAS","KOHEN","KOHLS","KOINE","KOJIS","KOKAM","KOKAS","KOKER","KOKRA","KOKUM","KOLAS","KOLOS","KOMBU","KONBU","KONDO","KONKS","KOOKS","KOOKY","KOORI","KOPEK","KOPHS","KOPJE","KOPPA","KORAI","KORAS","KORAT","KORES","KORMA","KOROS","KORUN","KORUS","KOSES","KOTCH","KOTOS","KOTOW","KOURA","KRAAL","KRABS","KRAFT","KRAIS","KRAIT","KRANG","KRANS","KRANZ","KRAUT","KRAYS","KREEP","KRENG","KREWE","KRILL","KRONA","KRONE","KROON","KRUBI","KRUNK","KSARS","KUBIE","KUDOS","KUDUS","KUDZU","KUFIS","KUGEL","KUIAS","KUKRI","KUKUS","KULAK","KULAN","KULAS","KULFI","KUMIS","KUMYS","KURIS","KURRE","KURTA","KURUS","KUSSO","KUTAS","KUTCH","KUTIS","KUTUS","KUZUS","KVASS","KVELL","KWELA","KYACK","KYAKS","KYANG","KYARS","KYATS","KYBOS","KYDST","KYLES","KYLIE","KYLIN","KYLIX","KYLOE","KYNDE","KYNDS","KYPES","KYRIE","KYTES","KYTHE","LAARI","LABDA","LABEL","LABIA","LABIS","LABOR","LABRA","LACED","LACER","LACES","LACET","LACEY","LACKS","LADDY","LADED","LADEN","LADER","LADES","LADLE","LAERS","LAEVO","LAGAN","LAGER","LAHAL","LAHAR","LAICH","LAICS","LAIDS","LAIGH","LAIKA","LAIKS","LAIRD","LAIRS","LAIRY","LAITH","LAITY","LAKED","LAKER","LAKES","LAKHS","LAKIN","LAKSA","LALDY","LALLS","LAMAS","LAMBS","LAMBY","LAMED","LAMER","LAMES","LAMIA","LAMMY","LAMPS","LANAI","LANAS","LANCE","LANCH","LANDE","LANDS","LANES","LANKS","LANKY","LANTS","LAPEL","LAPIN","LAPIS","LAPJE","LAPSE","LARCH","LARDS","LARDY","LAREE","LARES","LARGE","LARGO","LARIS","LARKS","LARKY","LARNS","LARNT","LARUM","LARVA","LASED","LASER","LASES","LASSI","LASSO","LASSU","LASSY","LASTS","LATAH","LATCH","LATED","LATEN","LATER","LATEX","LATHE","LATHI","LATHS","LATHY","LATKE","LATTE","LATUS","LAUAN","LAUCH","LAUDS","LAUFS","LAUGH","LAUND","LAURA","LAVAL","LAVAS","LAVED","LAVER","LAVES","LAVRA","LAVVY","LAWED","LAWER","LAWIN","LAWKS","LAWNS","LAWNY","LAXED","LAXER","LAXES","LAXLY","LAYED","LAYER","LAYIN","LAYUP","LAZAR","LAZED","LAZES","LAZOS","LAZZI","LAZZO","LEACH","LEADS","LEADY","LEAFS","LEAFY","LEAKS","LEAKY","LEAMS","LEANS","LEANT","LEANY","LEAPS","LEAPT","LEARE","LEARN","LEARS","LEARY","LEASE","LEASH","LEAST","LEATS","LEAVE","LEAVY","LEAZE","LEBEN","LECCY","LEDES","LEDGE","LEDGY","LEDUM","LEEAR","LEECH","LEEKS","LEEPS","LEERS","LEERY","LEESE","LEETS","LEEZE","LEFTE","LEFTS","LEFTY","LEGAL","LEGER","LEGES","LEGGE","LEGGO","LEGGY","LEGIT","LEHRS","LEHUA","LEIRS","LEISH","LEMAN","LEMED","LEMEL","LEMES","LEMMA","LEMME","LEMON","LEMUR","LENDS","LENES","LENGS","LENIS","LENOS","LENSE","LENTI","LENTO","LEONE","LEPER","LEPID","LEPRA","LEPTA","LERED","LERES","LERPS","LESTS","LETCH","LETHE","LETUP","LEUCH","LEUCO","LEUDS","LEUGH","LEVAS","LEVEE","LEVEL","LEVER","LEVES","LEVIN","LEVIS","LEWIS","LEXES","LEXIS","LIANA","LIANE","LIANG","LIARD","LIARS","LIART","LIBEL","LIBER","LIBRA","LIBRI","LICHI","LICHT","LICIT","LICKS","LIDAR","LIDOS","LIEFS","LIEGE","LIENS","LIERS","LIEUS","LIEVE","LIFER","LIFES","LIFTS","LIGAN","LIGER","LIGGE","LIGHT","LIGNE","LIKED","LIKEN","LIKER","LIKES","LIKIN","LILAC","LILLS","LILOS","LILTS","LIMAN","LIMAS","LIMAX","LIMBA","LIMBI","LIMBO","LIMBS","LIMBY","LIMED","LIMEN","LIMES","LIMEY","LIMIT","LIMMA","LIMNS","LIMOS","LIMPA","LIMPS","LINAC","LINCH","LINDS","LINDY","LINED","LINEN","LINER","LINES","LINEY","LINGA","LINGO","LINGS","LINGY","LININ","LINKS","LINKY","LINNS","LINNY","LINOS","LINTS","LINTY","LINUM","LINUX","LIONS","LIPAS","LIPES","LIPID","LIPIN","LIPOS","LIPPY","LIRAS","LIRKS","LIROT","LISKS","LISLE","LISPS","LISTS","LITAI","LITAS","LITED","LITER","LITES","LITHE","LITHO","LITHS","LITRE","LIVED","LIVEN","LIVER","LIVES","LIVID","LIVOR","LIVRE","LLAMA","LLANO","LOACH","LOADS","LOAFS","LOAMS","LOAMY","LOANS","LOAST","LOATH","LOAVE","LOBAR","LOBBY","LOBED","LOBES","LOBOS","LOBUS","LOCAL","LOCHE","LOCHS","LOCIE","LOCIS","LOCKS","LOCOS","LOCUM","LOCUS","LODEN","LODES","LODGE","LOESS","LOFTS","LOFTY","LOGAN","LOGES","LOGGY","LOGIA","LOGIC","LOGIE","LOGIN","LOGOI","LOGON","LOGOS","LOHAN","LOIDS","LOINS","LOIPE","LOIRS","LOKES","LOLLS","LOLLY","LOLOG","LOMAS","LOMED","LOMES","LONER","LONGA","LONGE","LONGS","LOOBY","LOOED","LOOEY","LOOFA","LOOFS","LOOIE","LOOKS","LOOKY","LOOMS","LOONS","LOONY","LOOPS","LOOPY","LOORD","LOOSE","LOOTS","LOPED","LOPER","LOPES","LOPPY","LORAL","LORAN","LORDS","LORDY","LOREL","LORES","LORIC","LORIS","LORRY","LOSED","LOSEL","LOSEN","LOSER","LOSES","LOSSY","LOTAH","LOTAS","LOTES","LOTIC","LOTOS","LOTSA","LOTTA","LOTTE","LOTTO","LOTUS","LOUED","LOUGH","LOUIE","LOUIS","LOUMA","LOUND","LOUNS","LOUPE","LOUPS","LOURE","LOURS","LOURY","LOUSE","LOUSY","LOUTS","LOVAT","LOVED","LOVER","LOVES","LOVEY","LOVIE","LOWAN","LOWED","LOWER","LOWES","LOWLY","LOWND","LOWNE","LOWNS","LOWPS","LOWRY","LOWSE","LOWTS","LOXED","LOXES","LOYAL","LOZEN","LUACH","LUAUS","LUBED","LUBES","LUCES","LUCID","LUCKS","LUCKY","LUCRE","LUDES","LUDIC","LUDOS","LUFFA","LUFFS","LUGED","LUGER","LUGES","LULLS","LULUS","LUMAS","LUMBI","LUMEN","LUMME","LUMMY","LUMPS","LUMPY","LUNAR","LUNAS","LUNCH","LUNES","LUNET","LUNGE","LUNGI","LUNGS","LUNKS","LUNTS","LUPIN","LUPUS","LURCH","LURED","LURER","LURES","LUREX","LURGI","LURGY","LURID","LURKS","LURRY","LURVE","LUSER","LUSHY","LUSKS","LUSTS","LUSTY","LUSUS","LUTEA","LUTED","LUTER","LUTES","LUVVY","LUXED","LUXER","LUXES","LWEIS","LYAMS","LYARD","LYART","LYASE","LYCEA","LYCEE","LYCRA","LYING","LYMES","LYMPH","LYNCH","LYNES","LYRES","LYRIC","LYSED","LYSES","LYSIN","LYSIS","LYSOL","LYSSA","LYTED","LYTES","LYTHE","LYTIC","LYTTA","MAAED","MAARE","MAARS","MABES","MACAS","MACAW","MACED","MACER","MACES","MACHE","MACHI","MACHO","MACHS","MACKS","MACLE","MACON","MACRO","MADAM","MADGE","MADID","MADLY","MADRE","MAERL","MAFIA","MAFIC","MAGES","MAGGS","MAGIC","MAGMA","MAGOT","MAGUS","MAHOE","MAHUA","MAHWA","MAIDS","MAIKO","MAIKS","MAILE","MAILL","MAILS","MAIMS","MAINS","MAIRE","MAIRS","MAISE","MAIST","MAIZE","MAJOR","MAKAR","MAKER","MAKES","MAKIS","MAKOS","MALAM","MALAR","MALAS","MALAX","MALES","MALIC","MALIK","MALIS","MALLS","MALMS","MALMY","MALTS","MALTY","MALUS","MALVA","MALWA","MAMAS","MAMBA","MAMBO","MAMEE","MAMEY","MAMIE","MAMMA","MAMMY","MANAS","MANAT","MANDI","MANEB","MANED","MANEH","MANES","MANET","MANGA","MANGE","MANGO","MANGS","MANGY","MANIA","MANIC","MANIS","MANKY","MANLY","MANNA","MANOR","MANOS","MANSE","MANTA","MANTO","MANTY","MANUL","MANUS","MAPAU","MAPLE","MAQUI","MARAE","MARAH","MARAS","MARCH","MARCS","MARDY","MARES","MARGE","MARGS","MARIA","MARID","MARKA","MARKS","MARLE","MARLS","MARLY","MARMS","MARON","MAROR","MARRA","MARRI","MARRY","MARSE","MARSH","MARTS","MARVY","MASAS","MASED","MASER","MASES","MASHY","MASKS","MASON","MASSA","MASSE","MASSY","MASTS","MASTY","MASUS","MATAI","MATCH","MATED","MATER","MATES","MATEY","MATHS","MATIN","MATLO","MATTE","MATTS","MATZA","MATZO","MAUBY","MAUDS","MAULS","MAUND","MAURI","MAUSY","MAUTS","MAUVE","MAUZY","MAVEN","MAVIE","MAVIN","MAVIS","MAWED","MAWKS","MAWKY","MAWNS","MAWRS","MAXED","MAXES","MAXIM","MAXIS","MAYAN","MAYAS","MAYBE","MAYED","MAYOR","MAYOS","MAYST","MAZED","MAZER","MAZES","MAZEY","MAZUT","MBIRA","MEADS","MEALS","MEALY","MEANE","MEANS","MEANT","MEANY","MEARE","MEASE","MEATH","MEATS","MEATY","MEBOS","MECCA","MECHS","MECKS","MEDAL","MEDIA","MEDIC","MEDII","MEDLE","MEEDS","MEERS","MEETS","MEFFS","MEINS","MEINT","MEINY","MEITH","MEKKA","MELAS","MELBA","MELDS","MELEE","MELIC","MELIK","MELLS","MELON","MELTS","MELTY","MEMES","MEMOS","MENAD","MENDS","MENED","MENES","MENGE","MENGS","MENSA","MENSE","MENSH","MENTA","MENTO","MENUS","MEOUS","MEOWS","MERCH","MERCS","MERCY","MERDE","MERED","MEREL","MERER","MERES","MERGE","MERIL","MERIS","MERIT","MERKS","MERLE","MERLS","MERRY","MERSE","MESAL","MESAS","MESEL","MESES","MESHY","MESIC","MESNE","MESON","MESSY","MESTO","METAL","METED","METER","METES","METHO","METHS","METIC","METIF","METIS","METOL","METRE","METRO","MEUSE","MEVED","MEVES","MEWED","MEWLS","MEYNT","MEZES","MEZZE","MEZZO","MHORR","MIAOU","MIAOW","MIASM","MIAUL","MICAS","MICHE","MICHT","MICKY","MICOS","MICRA","MICRO","MIDDY","MIDGE","MIDGY","MIDIS","MIDST","MIENS","MIEVE","MIFFS","MIFFY","MIFTY","MIGGS","MIGHT","MIHAS","MIHIS","MIKED","MIKES","MIKRA","MIKVA","MILCH","MILDS","MILER","MILES","MILFS","MILIA","MILKO","MILKS","MILKY","MILLE","MILLS","MILOR","MILOS","MILPA","MILTS","MILTY","MILTZ","MIMED","MIMEO","MIMER","MIMES","MIMIC","MIMSY","MINAE","MINAR","MINAS","MINCE","MINCY","MINDS","MINED","MINER","MINES","MINGE","MINGS","MINGY","MINIM","MINIS","MINKE","MINKS","MINNY","MINOR","MINOS","MINTS","MINTY","MINUS","MIRED","MIRES","MIREX","MIRID","MIRIN","MIRKS","MIRKY","MIRLY","MIROS","MIRTH","MIRVS","MIRZA","MISCH","MISDO","MISER","MISES","MISGO","MISOS","MISSA","MISSY","MISTS","MISTY","MITCH","MITER","MITES","MITIS","MITRE","MITTS","MIXED","MIXEN","MIXER","MIXES","MIXTE","MIXUP","MIZEN","MIZZY","MNEME","MOANS","MOATS","MOBBY","MOBES","MOBEY","MOBIE","MOBLE","MOCHA","MOCHI","MOCHS","MOCHY","MOCKS","MODAL","MODEL","MODEM","MODER","MODES","MODGE","MODII","MODUS","MOERS","MOFOS","MOGGY","MOGUL","MOHEL","MOHOS","MOHRS","MOHUA","MOHUR","MOILE","MOILS","MOIRA","MOIRE","MOIST","MOITS","MOJOS","MOKES","MOKIS","MOKOS","MOLAL","MOLAR","MOLAS","MOLDS","MOLDY","MOLED","MOLES","MOLLA","MOLLS","MOLLY","MOLTO","MOLTS","MOLYS","MOMES","MOMMA","MOMMY","MOMUS","MONAD","MONAL","MONAS","MONDE","MONDO","MONER","MONEY","MONGO","MONGS","MONIC","MONIE","MONKS","MONOS","MONTE","MONTH","MONTY","MOOBS","MOOCH","MOODS","MOODY","MOOED","MOOKS","MOOLA","MOOLI","MOOLS","MOOLY","MOONG","MOONS","MOONY","MOOPS","MOORS","MOORY","MOOSE","MOOTS","MOOVE","MOPED","MOPER","MOPES","MOPEY","MOPPY","MOPSY","MOPUS","MORAE","MORAL","MORAS","MORAT","MORAY","MOREL","MORES","MORIA","MORNE","MORNS","MORON","MORPH","MORRA","MORRO","MORSE","MORTS","MOSED","MOSES","MOSEY","MOSKS","MOSSO","MOSSY","MOSTE","MOSTS","MOTED","MOTEL","MOTEN","MOTES","MOTET","MOTEY","MOTHS","MOTHY","MOTIF","MOTIS","MOTOR","MOTTE","MOTTO","MOTTS","MOTTY","MOTUS","MOTZA","MOUCH","MOUES","MOULD","MOULS","MOULT","MOUND","MOUNT","MOUPS","MOURN","MOUSE","MOUST","MOUSY","MOUTH","MOVED","MOVER","MOVES","MOVIE","MOWAS","MOWED","MOWER","MOWRA","MOXAS","MOXIE","MOYAS","MOYLE","MOYLS","MOZED","MOZES","MOZOS","MPRET","MUCHO","MUCIC","MUCID","MUCIN","MUCKS","MUCKY","MUCOR","MUCRO","MUCUS","MUDDY","MUDGE","MUDIR","MUDRA","MUFFS","MUFTI","MUGGA","MUGGS","MUGGY","MUHLY","MUIDS","MUILS","MUIRS","MUIST","MUJIK","MULCH","MULCT","MULED","MULES","MULEY","MULGA","MULIE","MULLA","MULLS","MULSE","MULSH","MUMMS","MUMMY","MUMPS","MUMSY","MUMUS","MUNCH","MUNGA","MUNGE","MUNGO","MUNGS","MUNIS","MUONS","MURAL","MURAS","MURED","MURES","MUREX","MURID","MURKS","MURKY","MURLS","MURLY","MURRA","MURRE","MURRI","MURRS","MURRY","MURTI","MURVA","MUSAR","MUSCA","MUSED","MUSER","MUSES","MUSET","MUSHA","MUSHY","MUSIC","MUSIT","MUSKS","MUSKY","MUSOS","MUSSE","MUSSY","MUSTH","MUSTS","MUSTY","MUTCH","MUTED","MUTER","MUTES","MUTHA","MUTIS","MUTON","MUTTS","MUXED","MUXES","MUZAK","MUZZY","MVULE","MYALL","MYLAR","MYNAH","MYNAS","MYOID","MYOMA","MYOPE","MYOPS","MYOPY","MYRRH","MYSID","MYTHI","MYTHS","MYTHY","MYXOS","MZEES","NAAMS","NAANS","NABES","NABIS","NABKS","NABLA","NABOB","NACHE","NACHO","NACRE","NADAS","NADIR","NAEVE","NAEVI","NAFFS","NAGAS","NAGGY","NAGOR","NAHAL","NAIAD","NAIFS","NAIKS","NAILS","NAIRA","NAIRU","NAIVE","NAKED","NAKER","NAKFA","NALAS","NALED","NALLA","NAMED","NAMER","NAMES","NAMMA","NAMUS","NANAS","NANDU","NANNA","NANNY","NANOS","NANUA","NAPAS","NAPED","NAPES","NAPOO","NAPPA","NAPPE","NAPPY","NARAS","NARCO","NARCS","NARDS","NARES","NARIC","NARIS","NARKS","NARKY","NARRE","NASAL","NASHI","NASTY","NATAL","NATCH","NATES","NATIS","NATTY","NAUCH","NAUNT","NAVAL","NAVAR","NAVEL","NAVES","NAVEW","NAVVY","NAWAB","NAZES","NAZIR","NAZIS","NDUJA","NEAFE","NEALS","NEAPS","NEARS","NEATH","NEATS","NEBEK","NEBEL","NECKS","NEDDY","NEEDS","NEEDY","NEELD","NEELE","NEEMB","NEEMS","NEEPS","NEESE","NEEZE","NEGUS","NEIFS","NEIGH","NEIST","NEIVE","NELIS","NELLY","NEMAS","NEMNS","NEMPT","NENES","NEONS","NEPER","NEPIT","NERAL","NERDS","NERDY","NERKA","NERKS","NEROL","NERTS","NERTZ","NERVE","NERVY","NESTS","NETES","NETOP","NETTS","NETTY","NEUKS","NEUME","NEUMS","NEVEL","NEVER","NEVES","NEVUS","NEWBS","NEWED","NEWEL","NEWER","NEWIE","NEWLY","NEWSY","NEWTS","NEXTS","NEXUS","NGAIO","NGANA","NGATI","NGOMA","NGWEE","NICAD","NICER","NICHE","NICHT","NICKS","NICOL","NIDAL","NIDED","NIDES","NIDOR","NIDUS","NIECE","NIEFS","NIEVE","NIFES","NIFFS","NIFFY","NIFTY","NIGHS","NIGHT","NIHIL","NIKAB","NIKAH","NIKAU","NILLS","NIMBI","NIMBS","NIMPS","NINER","NINES","NINJA","NINNY","NINON","NINTH","NIPAS","NIPPY","NIQAB","NIRLS","NIRLY","NISEI","NISSE","NISUS","NITER","NITES","NITID","NITON","NITRE","NITRO","NITRY","NITTY","NIVAL","NIXED","NIXER","NIXES","NIXIE","NIZAM","NKOSI","NOAHS","NOBBY","NOBLE","NOBLY","NOCKS","NODAL","NODDY","NODES","NODUS","NOELS","NOGGS","NOHOW","NOILS","NOILY","NOINT","NOIRS","NOISE","NOISY","NOLES","NOLLS","NOLOS","NOMAD","NOMAS","NOMEN","NOMES","NOMIC","NOMOI","NOMOS","NONAS","NONCE","NONES","NONET","NONGS","NONIS","NONNY","NONYL","NOOBS","NOOIT","NOOKS","NOOKY","NOONS","NOOPS","NOOSE","NOPAL","NORIA","NORIS","NORKS","NORMA","NORMS","NORTH","NOSED","NOSER","NOSES","NOSEY","NOTAL","NOTCH","NOTED","NOTER","NOTES","NOTUM","NOULD","NOULE","NOULS","NOUNS","NOUNY","NOUPS","NOVAE","NOVAS","NOVEL","NOVUM","NOWAY","NOWED","NOWLS","NOWTS","NOWTY","NOXAL","NOXES","NOYAU","NOYED","NOYES","NUBBY","NUBIA","NUCHA","NUDDY","NUDER","NUDES","NUDGE","NUDIE","NUDZH","NUFFS","NUGAE","NUKED","NUKES","NULLA","NULLS","NUMBS","NUMEN","NUMMY","NUNNY","NURDS","NURDY","NURLS","NURRS","NURSE","NUTSO","NUTSY","NUTTY","NYAFF","NYALA","NYING","NYLON","NYMPH","NYSSA","OAKED","OAKEN","OAKER","OAKUM","OARED","OASES","OASIS","OASTS","OATEN","OATER","OATHS","OAVES","OBANG","OBEAH","OBELI","OBESE","OBEYS","OBIAS","OBIED","OBIIT","OBITS","OBJET","OBOES","OBOLE","OBOLI","OBOLS","OCCAM","OCCUR","OCEAN","OCHER","OCHES","OCHRE","OCHRY","OCKER","OCREA","OCTAD","OCTAL","OCTAN","OCTAS","OCTET","OCTYL","OCULI","ODAHS","ODALS","ODDER","ODDLY","ODEON","ODEUM","ODISM","ODIST","ODIUM","ODORS","ODOUR","ODYLE","ODYLS","OFFAL","OFFED","OFFER","OFFIE","OFLAG","OFTEN","OFTER","OGAMS","OGEED","OGEES","OGGIN","OGHAM","OGIVE","OGLED","OGLER","OGLES","OGMIC","OGRES","OHIAS","OHING","OHMIC","OHONE","OIDIA","OILED","OILER","OINKS","OINTS","OJIME","OKAPI","OKAYS","OKEHS","OKRAS","OKTAS","OLDEN","OLDER","OLDIE","OLEIC","OLEIN","OLENT","OLEOS","OLEUM","OLIOS","OLIVE","OLLAS","OLLAV","OLLER","OLLIE","OLOGY","OLPAE","OLPES","OMASA","OMBER","OMBRE","OMBUS","OMEGA","OMENS","OMERS","OMITS","OMLAH","OMOVS","OMRAH","ONCER","ONCES","ONCET","ONCUS","ONELY","ONERS","ONERY","ONION","ONIUM","ONKUS","ONLAY","ONNED","ONSET","ONTIC","OOBIT","OOHED","OOMPH","OONTS","OOPED","OORIE","OOSES","OOTID","OOZED","OOZES","OPAHS","OPALS","OPENS","OPEPE","OPERA","OPINE","OPING","OPIUM","OPPOS","OPSIN","OPTED","OPTER","OPTIC","ORACH","ORACY","ORALS","ORANG","ORANT","ORATE","ORBED","ORBIT","ORCAS","ORCIN","ORDER","ORDOS","OREAD","ORFES","ORGAN","ORGIA","ORGIC","ORGUE","ORIBI","ORIEL","ORIXA","ORLES","ORLON","ORLOP","ORMER","ORNIS","ORPIN","ORRIS","ORTHO","ORVAL","ORZOS","OSCAR","OSHAC","OSIER","OSMIC","OSMOL","OSSIA","OSTIA","OTAKU","OTARY","OTHER","OTTAR","OTTER","OTTOS","OUBIT","OUCHT","OUENS","OUGHT","OUIJA","OULKS","OUMAS","OUNCE","OUNDY","OUPAS","OUPED","OUPHE","OUPHS","OURIE","OUSEL","OUSTS","OUTBY","OUTDO","OUTED","OUTER","OUTGO","OUTRE","OUTRO","OUTTA","OUZEL","OUZOS","OVALS","OVARY","OVATE","OVELS","OVENS","OVERS","OVERT","OVINE","OVIST","OVOID","OVOLI","OVOLO","OVULE","OWCHE","OWIES","OWING","OWLED","OWLER","OWLET","OWNED","OWNER","OWRES","OWRIE","OWSEN","OXBOW","OXERS","OXEYE","OXIDE","OXIDS","OXIES","OXIME","OXIMS","OXLIP","OXTER","OYERS","OZEKI","OZONE","OZZIE","PAALS","PAANS","PACAS","PACED","PACER","PACES","PACEY","PACHA","PACKS","PACOS","PACTA","PACTS","PADDY","PADIS","PADLE","PADMA","PADRE","PADRI","PAEAN","PAEDO","PAEON","PAGAN","PAGED","PAGER","PAGES","PAGLE","PAGOD","PAGRI","PAIKS","PAILS","PAINS","PAINT","PAIRE","PAIRS","PAISA","PAISE","PAKKA","PALAS","PALAY","PALEA","PALED","PALER","PALES","PALET","PALIS","PALKI","PALLA","PALLS","PALLY","PALMS","PALMY","PALPI","PALPS","PALSA","PALSY","PAMPA","PANAX","PANCE","PANDA","PANDS","PANDY","PANED","PANEL","PANES","PANGA","PANGS","PANIC","PANIM","PANKO","PANNE","PANNI","PANSY","PANTO","PANTS","PANTY","PAOLI","PAOLO","PAPAL","PAPAS","PAPAW","PAPER","PAPES","PAPPI","PAPPY","PARAE","PARAS","PARCH","PARDI","PARDS","PARDY","PARED","PAREN","PAREO","PARER","PARES","PAREU","PAREV","PARGE","PARGO","PARIS","PARKA","PARKI","PARKS","PARKY","PARLE","PARLY","PARMA","PAROL","PARPS","PARRA","PARRS","PARRY","PARSE","PARTI","PARTS","PARTY","PARVE","PARVO","PASEO","PASES","PASHA","PASHM","PASKA","PASPY","PASSE","PASTA","PASTE","PASTS","PASTY","PATCH","PATED","PATEN","PATER","PATES","PATHS","PATIN","PATIO","PATKA","PATLY","PATSY","PATTE","PATTY","PATUS","PAUAS","PAULS","PAUSE","PAVAN","PAVED","PAVEN","PAVER","PAVES","PAVID","PAVIN","PAVIS","PAWAS","PAWAW","PAWED","PAWER","PAWKS","PAWKY","PAWLS","PAWNS","PAXES","PAYED","PAYEE","PAYER","PAYOR","PAYSD","PEACE","PEACH","PEAGE","PEAGS","PEAKS","PEAKY","PEALS","PEANS","PEARE","PEARL","PEARS","PEART","PEASE","PEATS","PEATY","PEAVY","PEAZE","PEBAS","PECAN","PECHS","PECKE","PECKS","PECKY","PEDAL","PEDES","PEDIS","PEDRO","PEECE","PEEKS","PEELS","PEENS","PEEOY","PEEPE","PEEPS","PEERS","PEERY","PEEVE","PEGGY","PEGHS","PEINS","PEISE","PEIZE","PEKAN","PEKES","PEKIN","PEKOE","PELAS","PELAU","PELES","PELFS","PELLS","PELMA","PELON","PELTA","PELTS","PENAL","PENCE","PENDS","PENDU","PENED","PENES","PENGO","PENIE","PENIS","PENKS","PENNA","PENNE","PENNI","PENNY","PENTS","PEONS","PEONY","PEPLA","PEPOS","PEPPY","PEPSI","PERAI","PERCE","PERCH","PERCS","PERDU","PERDY","PEREA","PERES","PERIL","PERIS","PERKS","PERKY","PERMS","PERNS","PEROG","PERPS","PERRY","PERSE","PERST","PERTS","PERVE","PERVO","PERVS","PERVY","PESKY","PESOS","PESTO","PESTS","PESTY","PETAL","PETAR","PETER","PETIT","PETRE","PETRI","PETTI","PETTO","PETTY","PEWEE","PEWIT","PEYSE","PHAGE","PHANG","PHARE","PHARM","PHASE","PHEER","PHENE","PHEON","PHESE","PHIAL","PHISH","PHIZZ","PHLOX","PHOCA","PHONE","PHONO","PHONS","PHONY","PHOTO","PHOTS","PHPHT","PHUTS","PHYLA","PHYLE","PIANI","PIANO","PIANS","PIBAL","PICAL","PICAS","PICCY","PICKS","PICKY","PICOT","PICRA","PICUL","PIECE","PIEND","PIERS","PIERT","PIETA","PIETS","PIETY","PIEZO","PIGGY","PIGHT","PIGMY","PIING","PIKAS","PIKAU","PIKED","PIKER","PIKES","PIKIS","PIKUL","PILAE","PILAF","PILAO","PILAR","PILAU","PILAW","PILCH","PILEA","PILED","PILEI","PILER","PILES","PILIS","PILLS","PILOT","PILOW","PILUM","PILUS","PIMAS","PIMPS","PINAS","PINCH","PINED","PINES","PINEY","PINGO","PINGS","PINKO","PINKS","PINKY","PINNA","PINNY","PINON","PINOT","PINTA","PINTO","PINTS","PINUP","PIONS","PIONY","PIOUS","PIOYE","PIOYS","PIPAL","PIPAS","PIPED","PIPER","PIPES","PIPET","PIPIS","PIPIT","PIPPY","PIPUL","PIQUE","PIRAI","PIRLS","PIRNS","PIROG","PISCO","PISES","PISKY","PISOS","PISSY","PISTE","PITAS","PITCH","PITHS","PITHY","PITON","PITOT","PITTA","PIUMS","PIVOT","PIXEL","PIXES","PIXIE","PIZED","PIZES","PIZZA","PLAAS","PLACE","PLACK","PLAGE","PLAID","PLAIN","PLAIT","PLANE","PLANK","PLANS","PLANT","PLAPS","PLASH","PLASM","PLAST","PLATE","PLATS","PLATT","PLATY","PLAYA","PLAYS","PLAZA","PLEAD","PLEAS","PLEAT","PLEBE","PLEBS","PLENA","PLEON","PLESH","PLEWS","PLICA","PLIED","PLIER","PLIES","PLIMS","PLING","PLINK","PLOAT","PLODS","PLONG","PLONK","PLOOK","PLOPS","PLOTS","PLOTZ","PLOUK","PLOWS","PLOYE","PLOYS","PLUCK","PLUES","PLUFF","PLUGS","PLUMB","PLUME","PLUMP","PLUMS","PLUMY","PLUNK","PLUOT","PLUSH","PLUTO","PLYER","POACH","POAKA","POAKE","POBOY","POCKS","POCKY","PODAL","PODDY","PODEX","PODGE","PODGY","PODIA","POEMS","POEPS","POESY","POETS","POGEY","POGGE","POGOS","POHED","POILU","POIND","POINT","POISE","POKAL","POKED","POKER","POKES","POKEY","POKIE","POLAR","POLED","POLER","POLES","POLEY","POLIO","POLIS","POLJE","POLKA","POLKS","POLLS","POLLY","POLOS","POLTS","POLYP","POLYS","POMBE","POMES","POMMY","POMOS","POMPS","PONCE","PONCY","PONDS","PONES","PONEY","PONGA","PONGO","PONGS","PONGY","PONKS","PONTS","PONTY","PONZU","POOCH","POODS","POOED","POOHS","POOJA","POOKA","POOKS","POOLS","POONS","POOPS","POOPY","POORI","POORT","POOTS","POPES","POPPA","POPPY","POPSY","PORAE","PORAL","PORCH","PORED","PORER","PORES","PORGE","PORGY","PORIN","PORKS","PORKY","PORNO","PORNS","PORNY","PORTA","PORTS","PORTY","POSED","POSER","POSES","POSEY","POSHO","POSIT","POSSE","POSTS","POTAE","POTCH","POTED","POTES","POTIN","POTOO","POTSY","POTTO","POTTS","POTTY","POUCH","POUFF","POUFS","POUKE","POUKS","POULE","POULP","POULT","POUND","POUPE","POUPT","POURS","POUTS","POUTY","POWAN","POWER","POWIN","POWND","POWNS","POWNY","POWRE","POXED","POXES","POYNT","POYOU","POYSE","POZZY","PRAAM","PRADS","PRAHU","PRAMS","PRANA","PRANG","PRANK","PRAOS","PRASE","PRATE","PRATS","PRATT","PRATY","PRAUS","PRAWN","PRAYS","PREDY","PREED","PREEN","PREES","PREIF","PREMS","PREMY","PRENT","PREON","PREOP","PREPS","PRESA","PRESE","PRESS","PREST","PREVE","PREXY","PREYS","PRIAL","PRICE","PRICK","PRICY","PRIDE","PRIED","PRIEF","PRIER","PRIES","PRIGS","PRILL","PRIMA","PRIME","PRIMI","PRIMO","PRIMP","PRIMS","PRIMY","PRINK","PRINT","PRION","PRIOR","PRISE","PRISM","PRISS","PRIVY","PRIZE","PROAS","PROBE","PROBS","PRODS","PROEM","PROFS","PROGS","PROIN","PROKE","PROLE","PROLL","PROMO","PROMS","PRONE","PRONG","PRONK","PROOF","PROPS","PRORE","PROSE","PROSO","PROSS","PROST","PROSY","PROTO","PROUD","PROUL","PROVE","PROWL","PROWS","PROXY","PROYN","PRUDE","PRUNE","PRUNT","PRUTA","PRYER","PRYSE","PSALM","PSEUD","PSHAW","PSION","PSOAE","PSOAI","PSOAS","PSORA","PSYCH","PSYOP","PUBCO","PUBES","PUBIC","PUBIS","PUCAN","PUCER","PUCES","PUCKA","PUCKS","PUDDY","PUDGE","PUDGY","PUDIC","PUDOR","PUDSY","PUDUS","PUERS","PUFFA","PUFFS","PUFFY","PUGGY","PUGIL","PUHAS","PUJAH","PUJAS","PUKAS","PUKED","PUKER","PUKES","PUKEY","PUKKA","PUKUS","PULAO","PULAS","PULED","PULER","PULES","PULIK","PULIS","PULKA","PULKS","PULLI","PULLS","PULLY","PULMO","PULPS","PULPY","PULSE","PULUS","PUMAS","PUMIE","PUMPS","PUNAS","PUNCE","PUNCH","PUNGA","PUNGS","PUNJI","PUNKA","PUNKS","PUNKY","PUNNY","PUNTO","PUNTS","PUNTY","PUPAE","PUPAL","PUPAS","PUPIL","PUPPY","PUPUS","PURDA","PURED","PUREE","PURER","PURES","PURGE","PURIN","PURIS","PURLS","PURPY","PURRS","PURSE","PURSY","PURTY","PUSES","PUSHY","PUSLE","PUSSY","PUTID","PUTON","PUTTI","PUTTO","PUTTS","PUTTY","PUZEL","PWNED","PYATS","PYETS","PYGAL","PYGMY","PYINS","PYLON","PYNED","PYNES","PYOID","PYOTS","PYRAL","PYRAN","PYRES","PYREX","PYRIC","PYROS","PYXED","PYXES","PYXIE","PYXIS","PZAZZ","QADIS","QAIDS","QAJAQ","QANAT","QAPIK","QIBLA","QOPHS","QORMA","QUACK","QUADS","QUAFF","QUAGS","QUAIL","QUAIR","QUAIS","QUAKE","QUAKY","QUALE","QUALM","QUANT","QUARE","QUARK","QUART","QUASH","QUASI","QUASS","QUATE","QUATS","QUAYD","QUAYS","QUBIT","QUEAN","QUEEN","QUEER","QUELL","QUEME","QUENA","QUERN","QUERY","QUEST","QUEUE","QUEYN","QUEYS","QUICH","QUICK","QUIDS","QUIET","QUIFF","QUILL","QUILT","QUIMS","QUINA","QUINE","QUINO","QUINS","QUINT","QUIPO","QUIPS","QUIPU","QUIRE","QUIRK","QUIRT","QUIST","QUITE","QUITS","QUOAD","QUODS","QUOIF","QUOIN","QUOIT","QUOLL","QUONK","QUOPS","QUOTA","QUOTE","QUOTH","QURSH","QUYTE","RABAT","RABBI","RABIC","RABID","RABIS","RACED","RACER","RACES","RACHE","RACKS","RACON","RADAR","RADGE","RADII","RADIO","RADIX","RADON","RAFFS","RAFTS","RAGAS","RAGDE","RAGED","RAGEE","RAGER","RAGES","RAGGA","RAGGS","RAGGY","RAGIS","RAGUS","RAHED","RAHUI","RAIAS","RAIDS","RAIKS","RAILE","RAILS","RAINE","RAINS","RAINY","RAIRD","RAISE","RAITA","RAITS","RAJAH","RAJAS","RAJES","RAKED","RAKEE","RAKER","RAKES","RAKIA","RAKIS","RAKUS","RALES","RALLY","RALPH","RAMAL","RAMEE","RAMEN","RAMET","RAMIE","RAMIN","RAMIS","RAMMY","RAMPS","RAMUS","RANAS","RANCE","RANCH","RANDS","RANDY","RANEE","RANGA","RANGE","RANGI","RANGS","RANGY","RANID","RANIS","RANKE","RANKS","RANTS","RAPED","RAPER","RAPES","RAPHE","RAPID","RAPPE","RARED","RAREE","RARER","RARES","RARKS","RASED","RASER","RASES","RASPS","RASPY","RASSE","RASTA","RATAL","RATAN","RATAS","RATCH","RATED","RATEL","RATER","RATES","RATHA","RATHE","RATHS","RATIO","RATOO","RATOS","RATTY","RATUS","RAUNS","RAUPO","RAVED","RAVEL","RAVEN","RAVER","RAVES","RAVEY","RAVIN","RAWER","RAWIN","RAWLY","RAWNS","RAXED","RAXES","RAYAH","RAYAS","RAYED","RAYLE","RAYNE","RAYON","RAZED","RAZEE","RAZER","RAZES","RAZOO","RAZOR","REACH","REACT","READD","READS","READY","REAIS","REAKS","REALM","REALO","REALS","REAME","REAMS","REAMY","REANS","REAPS","REARM","REARS","REAST","REATA","REATE","REAVE","REBAR","REBBE","REBEC","REBEL","REBID","REBIT","REBOP","REBUS","REBUT","REBUY","RECAL","RECAP","RECCE","RECCO","RECCY","RECIT","RECKS","RECON","RECTA","RECTI","RECTO","RECUR","RECUT","REDAN","REDDS","REDDY","REDED","REDES","REDIA","REDID","REDIP","REDLY","REDON","REDOS","REDOX","REDRY","REDUB","REDUX","REDYE","REECH","REEDE","REEDS","REEDY","REEFS","REEFY","REEKS","REEKY","REELS","REENS","REEST","REEVE","REFED","REFEL","REFER","REFIS","REFIT","REFIX","REFLY","REFRY","REGAL","REGAR","REGES","REGGO","REGIE","REGMA","REGNA","REGOS","REGUR","REHAB","REHEM","REIFS","REIFY","REIGN","REIKI","REIKS","REINK","REINS","REIRD","REIST","REIVE","REJIG","REJON","REKED","REKES","REKEY","RELAX","RELAY","RELET","RELIC","RELIE","RELIT","RELLO","REMAN","REMAP","REMEN","REMET","REMEX","REMIT","REMIX","RENAL","RENAY","RENDS","RENEW","RENEY","RENGA","RENIG","RENIN","RENNE","RENOS","RENTE","RENTS","REOIL","REORG","REPAY","REPEG","REPEL","REPIN","REPLA","REPLY","REPOS","REPOT","REPPS","REPRO","RERAN","RERIG","RERUN","RESAT","RESAW","RESAY","RESEE","RESES","RESET","RESEW","RESID","RESIN","RESIT","RESOD","RESOW","RESTO","RESTS","RESTY","RESUS","RETAG","RETAX","RETCH","RETEM","RETIA","RETIE","RETOX","RETRO","RETRY","REUSE","REVEL","REVET","REVIE","REVUE","REWAN","REWAX","REWED","REWET","REWIN","REWON","REWTH","REXES","REZES","RHEAS","RHEME","RHEUM","RHIES","RHIME","RHINE","RHINO","RHODY","RHOMB","RHONE","RHUMB","RHYME","RHYNE","RHYTA","RIADS","RIALS","RIANT","RIATA","RIBAS","RIBBY","RIBES","RICED","RICER","RICES","RICEY","RICHT","RICIN","RICKS","RIDER","RIDES","RIDGE","RIDGY","RIDIC","RIELS","RIEMS","RIEVE","RIFER","RIFFS","RIFLE","RIFTE","RIFTS","RIFTY","RIGGS","RIGHT","RIGID","RIGOL","RIGOR","RILED","RILES","RILEY","RILLE","RILLS","RIMAE","RIMED","RIMER","RIMES","RIMUS","RINDS","RINDY","RINES","RINGS","RINKS","RINSE","RIOJA","RIOTS","RIPED","RIPEN","RIPER","RIPES","RIPPS","RISEN","RISER","RISES","RISHI","RISKS","RISKY","RISPS","RISUS","RITES","RITTS","RITZY","RIVAL","RIVAS","RIVED","RIVEL","RIVEN","RIVER","RIVES","RIVET","RIYAL","RIZAS","ROACH","ROADS","ROAMS","ROANS","ROARS","ROARY","ROAST","ROATE","ROBED","ROBES","ROBIN","ROBLE","ROBOT","ROCKS","ROCKY","RODED","RODEO","RODES","ROGER","ROGUE","ROGUY","ROHES","ROIDS","ROILS","ROILY","ROINS","ROIST","ROJAK","ROJIS","ROKED","ROKER","ROKES","ROLAG","ROLES","ROLFS","ROLLS","ROMAL","ROMAN","ROMEO","ROMPS","RONDE","RONDO","RONEO","RONES","RONIN","RONNE","RONTE","RONTS","ROODS","ROOFS","ROOFY","ROOKS","ROOKY","ROOMS","ROOMY","ROONS","ROOPS","ROOPY","ROOSA","ROOSE","ROOST","ROOTS","ROOTY","ROPED","ROPER","ROPES","ROPEY","ROQUE","RORAL","RORES","RORIC","RORID","RORIE","RORTS","RORTY","ROSED","ROSES","ROSET","ROSHI","ROSIN","ROSIT","ROSTI","ROSTS","ROTAL","ROTAN","ROTAS","ROTCH","ROTED","ROTES","ROTIS","ROTLS","ROTON","ROTOR","ROTOS","ROTTE","ROUEN","ROUES","ROUGE","ROUGH","ROULE","ROULS","ROUMS","ROUND","ROUPS","ROUPY","ROUSE","ROUST","ROUTE","ROUTH","ROUTS","ROVED","ROVEN","ROVER","ROVES","ROWAN","ROWDY","ROWED","ROWEL","ROWEN","ROWER","ROWIE","ROWME","ROWND","ROWTH","ROWTS","ROYAL","ROYNE","ROYST","ROZET","ROZIT","RUANA","RUBAI","RUBBY","RUBEL","RUBES","RUBIN","RUBLE","RUBLI","RUBUS","RUCHE","RUCKS","RUDAS","RUDDS","RUDDY","RUDER","RUDES","RUDIE","RUDIS","RUEDA","RUERS","RUFFE","RUFFS","RUGAE","RUGAL","RUGBY","RUGGY","RUING","RUINS","RUKHS","RULED","RULER","RULES","RUMAL","RUMBA","RUMBO","RUMEN","RUMES","RUMLY","RUMMY","RUMOR","RUMPO","RUMPS","RUMPY","RUNCH","RUNDS","RUNED","RUNES","RUNGS","RUNIC","RUNNY","RUNTS","RUNTY","RUPEE","RUPIA","RURAL","RURPS","RURUS","RUSAS","RUSES","RUSHY","RUSKS","RUSMA","RUSSE","RUSTS","RUSTY","RUTHS","RUTIN","RUTTY","RYALS","RYBAT","RYKED","RYKES","RYMME","RYNDS","RYOTS","RYPER","SAAGS","SABAL","SABED","SABER","SABES","SABHA","SABIN","SABIR","SABLE","SABOT","SABRA","SABRE","SACKS","SACRA","SADDO","SADES","SADHE","SADHU","SADIS","SADLY","SADOS","SADZA","SAFED","SAFER","SAFES","SAGAS","SAGER","SAGES","SAGGY","SAGOS","SAGUM","SAHEB","SAHIB","SAICE","SAICK","SAICS","SAIDS","SAIGA","SAILS","SAIMS","SAINE","SAINS","SAINT","SAIRS","SAIST","SAITH","SAJOU","SAKER","SAKES","SAKIA","SAKIS","SAKTI","SALAD","SALAL","SALAT","SALEP","SALES","SALET","SALIC","SALIX","SALLE","SALLY","SALMI","SALOL","SALON","SALOP","SALPA","SALPS","SALSA","SALSE","SALTO","SALTS","SALTY","SALUE","SALUT","SALVE","SALVO","SAMAN","SAMAS","SAMBA","SAMBO","SAMEK","SAMEL","SAMEN","SAMES","SAMEY","SAMFU","SAMMY","SAMPI","SAMPS","SANDS","SANDY","SANED","SANER","SANES","SANGA","SANGH","SANGO","SANGS","SANKO","SANSA","SANTO","SANTS","SAOLA","SAPAN","SAPID","SAPOR","SAPPY","SARAN","SARDS","SARED","SAREE","SARGE","SARGO","SARIN","SARIS","SARKS","SARKY","SAROD","SAROS","SARUS","SASER","SASIN","SASSE","SASSY","SATAI","SATAY","SATED","SATEM","SATES","SATIN","SATIS","SATYR","SAUBA","SAUCE","SAUCH","SAUCY","SAUGH","SAULS","SAULT","SAUNA","SAUNT","SAURY","SAUTE","SAUTS","SAVED","SAVER","SAVES","SAVEY","SAVIN","SAVOR","SAVOY","SAVVY","SAWAH","SAWED","SAWER","SAXES","SAYED","SAYER","SAYID","SAYNE","SAYON","SAYST","SAZES","SCABS","SCADS","SCAFF","SCAGS","SCAIL","SCALA","SCALD","SCALE","SCALL","SCALP","SCALY","SCAMP","SCAMS","SCAND","SCANS","SCANT","SCAPA","SCAPE","SCAPI","SCARE","SCARF","SCARP","SCARS","SCART","SCARY","SCATH","SCATS","SCATT","SCAUD","SCAUP","SCAUR","SCAWS","SCEAT","SCENA","SCEND","SCENE","SCENT","SCHAV","SCHMO","SCHUL","SCHWA","SCION","SCLIM","SCODY","SCOFF","SCOGS","SCOLD","SCONE","SCOOG","SCOOP","SCOOT","SCOPA","SCOPE","SCOPS","SCORE","SCORN","SCOTS","SCOUG","SCOUP","SCOUR","SCOUT","SCOWL","SCOWP","SCOWS","SCRAB","SCRAE","SCRAG","SCRAM","SCRAN","SCRAP","SCRAT","SCRAW","SCRAY","SCREE","SCREW","SCRIM","SCRIP","SCROB","SCROD","SCROG","SCROW","SCRUB","SCRUM","SCUBA","SCUDI","SCUDO","SCUDS","SCUFF","SCUFT","SCUGS","SCULK","SCULL","SCULP","SCULS","SCUMS","SCUPS","SCURF","SCURS","SCUSE","SCUTA","SCUTE","SCUTS","SCUZZ","SCYES","SDAYN","SDEIN","SEALS","SEAME","SEAMS","SEAMY","SEANS","SEARE","SEARS","SEASE","SEATS","SEAZE","SEBUM","SECCO","SECHS","SECTS","SEDAN","SEDER","SEDES","SEDGE","SEDGY","SEDUM","SEEDS","SEEDY","SEEKS","SEELD","SEELS","SEELY","SEEMS","SEEPS","SEEPY","SEERS","SEFER","SEGAR","SEGNI","SEGNO","SEGOL","SEGOS","SEGUE","SEHRI","SEIFS","SEILS","SEINE","SEIRS","SEISE","SEISM","SEITY","SEIZA","SEIZE","SEKOS","SEKTS","SELAH","SELES","SELFS","SELLA","SELLE","SELLS","SELVA","SEMEE","SEMEN","SEMES","SEMIE","SEMIS","SENAS","SENDS","SENES","SENGI","SENNA","SENOR","SENSA","SENSE","SENSI","SENTE","SENTI","SENTS","SENVY","SENZA","SEPAD","SEPAL","SEPIA","SEPIC","SEPOY","SEPTA","SEPTS","SERAC","SERAI","SERAL","SERED","SERER","SERES","SERFS","SERGE","SERIC","SERIF","SERIN","SERKS","SERON","SEROW","SERRA","SERRE","SERRS","SERRY","SERUM","SERVE","SERVO","SESEY","SESSA","SETAE","SETAL","SETON","SETTS","SETUP","SEVEN","SEVER","SEWAN","SEWAR","SEWED","SEWEL","SEWEN","SEWER","SEWIN","SEXED","SEXER","SEXES","SEXTO","SEXTS","SEYEN","SHACK","SHADE","SHADS","SHADY","SHAFT","SHAGS","SHAHS","SHAKE","SHAKO","SHAKT","SHAKY","SHALE","SHALL","SHALM","SHALT","SHALY","SHAMA","SHAME","SHAMS","SHAND","SHANK","SHANS","SHAPE","SHAPS","SHARD","SHARE","SHARK","SHARN","SHARP","SHASH","SHAUL","SHAVE","SHAWL","SHAWM","SHAWN","SHAWS","SHAYA","SHAYS","SHCHI","SHEAF","SHEAL","SHEAR","SHEAS","SHEDS","SHEEL","SHEEN","SHEEP","SHEER","SHEET","SHEIK","SHELF","SHELL","SHEND","SHENT","SHEOL","SHERD","SHERE","SHERO","SHETS","SHEVA","SHEWN","SHEWS","SHIAI","SHIED","SHIEL","SHIER","SHIES","SHIFT","SHILL","SHILY","SHIMS","SHINE","SHINS","SHINY","SHIPS","SHIRE","SHIRK","SHIRR","SHIRS","SHIRT","SHISH","SHISO","SHIST","SHITE","SHITS","SHIUR","SHIVA","SHIVE","SHIVS","SHLEP","SHLUB","SHMEK","SHMOE","SHOAL","SHOAT","SHOCK","SHOED","SHOER","SHOES","SHOGI","SHOGS","SHOJI","SHOJO","SHOLA","SHONE","SHOOK","SHOOL","SHOON","SHOOS","SHOOT","SHOPE","SHOPS","SHORE","SHORL","SHORN","SHORT","SHOTE","SHOTS","SHOTT","SHOUT","SHOVE","SHOWD","SHOWN","SHOWS","SHOWY","SHOYU","SHRED","SHREW","SHRIS","SHROW","SHRUB","SHRUG","SHTIK","SHTUM","SHTUP","SHUCK","SHULE","SHULN","SHULS","SHUNS","SHUNT","SHURA","SHUSH","SHUTE","SHUTS","SHWAS","SHYER","SHYLY","SIALS","SIBBS","SIBYL","SICES","SICHT","SICKO","SICKS","SICKY","SIDAS","SIDED","SIDER","SIDES","SIDHA","SIDHE","SIDLE","SIEGE","SIELD","SIENS","SIENT","SIETH","SIEUR","SIEVE","SIFTS","SIGHS","SIGHT","SIGIL","SIGLA","SIGMA","SIGNA","SIGNS","SIJOS","SIKAS","SIKER","SIKES","SILDS","SILED","SILEN","SILER","SILES","SILEX","SILKS","SILKY","SILLS","SILLY","SILOS","SILTS","SILTY","SILVA","SIMAR","SIMAS","SIMBA","SIMIS","SIMPS","SIMUL","SINCE","SINDS","SINED","SINES","SINEW","SINGE","SINGS","SINHS","SINKS","SINKY","SINUS","SIPED","SIPES","SIPPY","SIRED","SIREE","SIREN","SIRES","SIRIH","SIRIS","SIROC","SIRRA","SIRUP","SISAL","SISES","SISSY","SISTA","SISTS","SITAR","SITED","SITES","SITHE","SITKA","SITUP","SITUS","SIVER","SIXER","SIXES","SIXMO","SIXTE","SIXTH","SIXTY","SIZAR","SIZED","SIZEL","SIZER","SIZES","SKAGS","SKAIL","SKALD","SKANK","SKART","SKATE","SKATS","SKATT","SKAWS","SKEAN","SKEAR","SKEDS","SKEED","SKEEF","SKEEN","SKEER","SKEES","SKEET","SKEGG","SKEGS","SKEIN","SKELF","SKELL","SKELM","SKELP","SKENE","SKENS","SKEOS","SKEPS","SKERS","SKETS","SKEWS","SKIDS","SKIED","SKIER","SKIES","SKIEY","SKIFF","SKILL","SKIMP","SKIMS","SKINK","SKINS","SKINT","SKIOS","SKIPS","SKIRL","SKIRR","SKIRT","SKITE","SKITS","SKIVE","SKIVY","SKLIM","SKOAL","SKODY","SKOFF","SKOGS","SKOLS","SKOOL","SKORT","SKOSH","SKRAN","SKRIK","SKUAS","SKUGS","SKULK","SKULL","SKUNK","SKYED","SKYER","SKYEY","SKYFS","SKYRE","SKYRS","SKYTE","SLABS","SLACK","SLADE","SLAES","SLAGS","SLAID","SLAIN","SLAKE","SLAMS","SLANE","SLANG","SLANK","SLANT","SLAPS","SLART","SLASH","SLATE","SLATS","SLATY","SLAVE","SLAWS","SLAYS","SLEBS","SLEDS","SLEEK","SLEEP","SLEER","SLEET","SLEPT","SLEWS","SLEYS","SLICE","SLICK","SLIDE","SLIER","SLILY","SLIME","SLIMS","SLIMY","SLING","SLINK","SLIPE","SLIPS","SLIPT","SLISH","SLITS","SLIVE","SLOAN","SLOBS","SLOES","SLOGS","SLOID","SLOJD","SLOMO","SLOOM","SLOOP","SLOOT","SLOPE","SLOPS","SLOPY","SLORM","SLOSH","SLOTH","SLOTS","SLOVE","SLOWS","SLOYD","SLUBB","SLUBS","SLUED","SLUES","SLUFF","SLUGS","SLUIT","SLUMP","SLUMS","SLUNG","SLUNK","SLURB","SLURP","SLURS","SLUSE","SLUSH","SLUTS","SLYER","SLYLY","SLYPE","SMAAK","SMACK","SMAIK","SMALL","SMALM","SMALT","SMARM","SMART","SMASH","SMAZE","SMEAR","SMEEK","SMEES","SMEIK","SMEKE","SMELL","SMELT","SMERK","SMEWS","SMILE","SMIRK","SMIRR","SMIRS","SMITE","SMITH","SMITS","SMOCK","SMOGS","SMOKE","SMOKO","SMOKY","SMOLT","SMOOR","SMOOT","SMORE","SMORG","SMOTE","SMOUT","SMOWT","SMUGS","SMURS","SMUSH","SMUTS","SNABS","SNACK","SNAFU","SNAGS","SNAIL","SNAKE","SNAKY","SNAPS","SNARE","SNARF","SNARK","SNARL","SNARS","SNARY","SNASH","SNATH","SNAWS","SNEAD","SNEAK","SNEAP","SNEBS","SNECK","SNEDS","SNEED","SNEER","SNEES","SNELL","SNIBS","SNICK","SNIDE","SNIES","SNIFF","SNIFT","SNIGS","SNIPE","SNIPS","SNIPY","SNIRT","SNITS","SNOBS","SNODS","SNOEK","SNOEP","SNOGS","SNOKE","SNOOD","SNOOK","SNOOL","SNOOP","SNOOT","SNORE","SNORT","SNOTS","SNOUT","SNOWK","SNOWS","SNOWY","SNUBS","SNUCK","SNUFF","SNUGS","SNUSH","SNYES","SOAKS","SOAPS","SOAPY","SOARE","SOARS","SOAVE","SOBAS","SOBER","SOCAS","SOCES","SOCKO","SOCKS","SOCLE","SODAS","SODDY","SODIC","SODOM","SOFAR","SOFAS","SOFTA","SOFTS","SOFTY","SOGER","SOGGY","SOHUR","SOILS","SOILY","SOJAS","SOJUS","SOKAH","SOKEN","SOKES","SOKOL","SOLAH","SOLAN","SOLAR","SOLAS","SOLDE","SOLDI","SOLDO","SOLDS","SOLED","SOLEI","SOLER","SOLES","SOLID","SOLON","SOLOS","SOLUM","SOLUS","SOLVE","SOMAN","SOMAS","SONAR","SONCE","SONDE","SONES","SONGS","SONIC","SONLY","SONNE","SONNY","SONSE","SONSY","SOOEY","SOOKS","SOOKY","SOOLE","SOOLS","SOOMS","SOOPS","SOOTE","SOOTH","SOOTS","SOOTY","SOPHS","SOPHY","SOPOR","SOPPY","SOPRA","SORAL","SORAS","SORBO","SORBS","SORDA","SORDO","SORDS","SORED","SOREE","SOREL","SORER","SORES","SOREX","SORGO","SORNS","SORRA","SORRY","SORTA","SORTS","SORUS","SOTHS","SOTOL","SOUCE","SOUCT","SOUGH","SOUKS","SOULS","SOUMS","SOUND","SOUPS","SOUPY","SOURS","SOUSE","SOUTH","SOUTS","SOWAR","SOWCE","SOWED","SOWER","SOWFF","SOWFS","SOWLE","SOWLS","SOWMS","SOWND","SOWNE","SOWPS","SOWSE","SOWTH","SOYAS","SOYLE","SOYUZ","SOZIN","SPACE","SPACY","SPADE","SPADO","SPAED","SPAER","SPAES","SPAGS","SPAHI","SPAIL","SPAIN","SPAIT","SPAKE","SPALD","SPALE","SPALL","SPALT","SPAMS","SPANE","SPANG","SPANK","SPANS","SPARD","SPARE","SPARK","SPARS","SPART","SPASM","SPATE","SPATS","SPAUL","SPAWL","SPAWN","SPAWS","SPAYD","SPAYS","SPAZA","SPEAK","SPEAL","SPEAN","SPEAR","SPEAT","SPECK","SPECS","SPECT","SPEED","SPEEL","SPEER","SPEIL","SPEIR","SPEKS","SPELD","SPELK","SPELL","SPELT","SPEND","SPENT","SPEOS","SPERM","SPETS","SPEUG","SPEWS","SPEWY","SPIAL","SPICA","SPICE","SPICK","SPICY","SPIDE","SPIED","SPIEL","SPIER","SPIES","SPIFF","SPIFS","SPIKE","SPIKY","SPILE","SPILL","SPILT","SPIMS","SPINA","SPINE","SPINK","SPINS","SPINY","SPIRE","SPIRT","SPIRY","SPITE","SPITS","SPITZ","SPIVS","SPLAT","SPLAY","SPLIT","SPLOG","SPODE","SPODS","SPOIL","SPOKE","SPOOF","SPOOK","SPOOL","SPOOM","SPOON","SPOOR","SPOOT","SPORE","SPORK","SPORT","SPOSH","SPOTS","SPOUT","SPRAD","SPRAG","SPRAT","SPRAY","SPRED","SPREE","SPREW","SPRIG","SPRIT","SPROD","SPROG","SPRUE","SPRUG","SPUDS","SPUED","SPUER","SPUES","SPUGS","SPULE","SPUME","SPUMY","SPUNK","SPURN","SPURS","SPURT","SPUTA","SPYAL","SPYRE","SQUAB","SQUAD","SQUAT","SQUEG","SQUIB","SQUID","SQUIT","SQUIZ","STABS","STACK","STADE","STAFF","STAGE","STAGS","STAGY","STAID","STAIG","STAIN","STAIR","STAKE","STALE","STALK","STALL","STAMP","STAND","STANE","STANG","STANK","STAPH","STAPS","STARE","STARK","STARN","STARR","STARS","START","STASH","STATE","STATS","STAUN","STAVE","STAWS","STAYS","STEAD","STEAK","STEAL","STEAM","STEAN","STEAR","STEDD","STEDE","STEDS","STEED","STEEK","STEEL","STEEM","STEEN","STEEP","STEER","STEIL","STEIN","STELA","STELE","STELL","STEME","STEMS","STEND","STENO","STENS","STENT","STEPS","STEPT","STERE","STERN","STETS","STEWS","STEWY","STEYS","STICH","STICK","STIED","STIES","STIFF","STILB","STILE","STILL","STILT","STIME","STIMS","STIMY","STING","STINK","STINT","STIPA","STIPE","STIRE","STIRK","STIRP","STIRS","STIVE","STIVY","STOAE","STOAI","STOAS","STOAT","STOBS","STOCK","STOEP","STOGY","STOIC","STOIT","STOKE","STOLE","STOLN","STOMA","STOMP","STOND","STONE","STONG","STONK","STONN","STONY","STOOD","STOOK","STOOL","STOOP","STOOR","STOPE","STOPS","STOPT","STORE","STORK","STORM","STORY","STOSS","STOTS","STOTT","STOUN","STOUP","STOUR","STOUT","STOVE","STOWN","STOWP","STOWS","STRAD","STRAE","STRAG","STRAK","STRAP","STRAW","STRAY","STREP","STREW","STRIA","STRIG","STRIM","STRIP","STROP","STROW","STROY","STRUM","STRUT","STUBS","STUCK","STUDE","STUDS","STUDY","STUFF","STULL","STULM","STUMM","STUMP","STUMS","STUNG","STUNK","STUNS","STUNT","STUPA","STUPE","STURE","STURT","STYED","STYES","STYLE","STYLI","STYLO","STYME","STYMY","STYRE","STYTE","SUAVE","SUBAH","SUBAS","SUBBY","SUBER","SUBHA","SUCCI","SUCKS","SUCKY","SUCRE","SUDDS","SUDOR","SUDSY","SUEDE","SUENT","SUERS","SUETE","SUETS","SUETY","SUGAN","SUGAR","SUGHS","SUGOS","SUHUR","SUIDS","SUING","SUINT","SUITE","SUITS","SUJEE","SUKHS","SUKUK","SULCI","SULFA","SULFO","SULKS","SULKY","SULLY","SULPH","SULUS","SUMAC","SUMIS","SUMMA","SUMOS","SUMPH","SUMPS","SUNIS","SUNKS","SUNNA","SUNNS","SUNNY","SUNUP","SUPER","SUPES","SUPRA","SURAH","SURAL","SURAS","SURAT","SURDS","SURED","SURER","SURES","SURFS","SURFY","SURGE","SURGY","SURLY","SURRA","SUSED","SUSES","SUSHI","SUSUS","SUTOR","SUTRA","SUTTA","SWABS","SWACK","SWADS","SWAGE","SWAGS","SWAIL","SWAIN","SWALE","SWALY","SWAMI","SWAMP","SWAMY","SWANG","SWANK","SWANS","SWAPS","SWAPT","SWARD","SWARE","SWARF","SWARM","SWART","SWASH","SWATH","SWATS","SWAYL","SWAYS","SWEAL","SWEAR","SWEAT","SWEDE","SWEED","SWEEL","SWEEP","SWEER","SWEES","SWEET","SWEIR","SWELL","SWELT","SWEPT","SWERF","SWEYS","SWIES","SWIFT","SWIGS","SWILE","SWILL","SWIMS","SWINE","SWING","SWINK","SWIPE","SWIRE","SWIRL","SWISH","SWISS","SWITH","SWITS","SWIVE","SWIZZ","SWOBS","SWOLE","SWOLN","SWOON","SWOOP","SWOPS","SWOPT","SWORD","SWORE","SWORN","SWOTS","SWOUN","SWUNG","SYBBE","SYBIL","SYBOE","SYBOW","SYCEE","SYCES","SYCON","SYENS","SYKER","SYKES","SYLIS","SYLPH","SYLVA","SYMAR","SYNCH","SYNCS","SYNDS","SYNED","SYNES","SYNOD","SYNTH","SYPED","SYPES","SYPHS","SYRAH","SYREN","SYRUP","SYSOP","SYTHE","SYVER","TAALS","TAATA","TABBY","TABER","TABES","TABID","TABIS","TABLA","TABLE","TABOO","TABOR","TABUN","TABUS","TACAN","TACES","TACET","TACHE","TACHO","TACHS","TACIT","TACKS","TACKY","TACOS","TACTS","TAELS","TAFFY","TAFIA","TAGGY","TAGMA","TAHAS","TAHRS","TAIGA","TAIKO","TAILS","TAINS","TAINT","TAIRA","TAISH","TAITS","TAJES","TAKAS","TAKEN","TAKER","TAKES","TAKHI","TAKIN","TAKIS","TAKKY","TALAK","TALAQ","TALAR","TALAS","TALCS","TALCY","TALEA","TALER","TALES","TALKS","TALKY","TALLS","TALLY","TALMA","TALON","TALPA","TALUK","TALUS","TAMAL","TAMED","TAMER","TAMES","TAMIN","TAMIS","TAMMY","TAMPS","TANAS","TANGA","TANGI","TANGO","TANGS","TANGY","TANHS","TANKA","TANKS","TANKY","TANNA","TANSY","TANTI","TANTO","TANTY","TAPAS","TAPED","TAPEN","TAPER","TAPES","TAPET","TAPIR","TAPIS","TAPPA","TAPUS","TARAS","TARDO","TARDY","TARED","TARES","TARGA","TARGE","TARNS","TAROC","TAROK","TAROS","TAROT","TARPS","TARRE","TARRY","TARSI","TARTS","TARTY","TASAR","TASED","TASER","TASES","TASKS","TASSA","TASSE","TASSO","TASTE","TASTY","TATAR","TATER","TATES","TATHS","TATIE","TATOU","TATTS","TATTY","TATUS","TAUBE","TAULD","TAUNT","TAUON","TAUPE","TAUTS","TAVAH","TAVAS","TAVER","TAWAI","TAWAS","TAWED","TAWER","TAWIE","TAWNY","TAWSE","TAWTS","TAXED","TAXER","TAXES","TAXIS","TAXOL","TAXON","TAXOR","TAXUS","TAYRA","TAZZA","TAZZE","TEACH","TEADE","TEADS","TEAED","TEAKS","TEALS","TEAMS","TEARS","TEARY","TEASE","TEATS","TEAZE","TECHS","TECHY","TECTA","TEDDY","TEELS","TEEMS","TEEND","TEENE","TEENS","TEENY","TEERS","TEETH","TEFFS","TEGGS","TEGUA","TEGUS","TEHRS","TEIID","TEILS","TEIND","TEINS","TELAE","TELCO","TELES","TELEX","TELIA","TELIC","TELLS","TELLY","TELOI","TELOS","TEMED","TEMES","TEMPI","TEMPO","TEMPS","TEMPT","TEMSE","TENCH","TENDS","TENDU","TENES","TENET","TENGE","TENIA","TENNE","TENNO","TENNY","TENON","TENOR","TENSE","TENTH","TENTS","TENTY","TENUE","TEPAL","TEPAS","TEPEE","TEPID","TEPOY","TERAI","TERAS","TERCE","TEREK","TERES","TERFE","TERFS","TERGA","TERMS","TERNE","TERNS","TERRA","TERRY","TERSE","TERTS","TESLA","TESTA","TESTE","TESTS","TESTY","TETES","TETHS","TETRA","TETRI","TEUCH","TEUGH","TEWED","TEWEL","TEWIT","TEXAS","TEXES","TEXTS","THACK","THAGI","THAIM","THALE","THALI","THANA","THANE","THANG","THANK","THANS","THANX","THARM","THARS","THAWS","THAWY","THEBE","THECA","THEED","THEEK","THEES","THEFT","THEGN","THEIC","THEIN","THEIR","THELF","THEMA","THEME","THENS","THEOW","THERE","THERM","THESE","THESP","THETA","THETE","THEWS","THEWY","THICK","THIEF","THIGH","THIGS","THILK","THILL","THINE","THING","THINK","THINS","THIOL","THIRD","THIRL","THOFT","THOLE","THOLI","THONG","THORN","THORO","THORP","THOSE","THOUS","THOWL","THRAE","THRAW","THREE","THREW","THRID","THRIP","THROB","THROE","THROW","THRUM","THUDS","THUGS","THUJA","THUMB","THUMP","THUNK","THURL","THUYA","THYME","THYMI","THYMY","TIANS","TIARA","TIARS","TIBIA","TICAL","TICCA","TICED","TICES","TICHY","TICKS","TICKY","TIDAL","TIDDY","TIDED","TIDES","TIERS","TIFFS","TIFOS","TIFTS","TIGER","TIGES","TIGHT","TIGON","TIKAS","TIKES","TIKIS","TIKKA","TILAK","TILDE","TILED","TILER","TILES","TILLS","TILLY","TILTH","TILTS","TIMBO","TIMED","TIMER","TIMES","TIMID","TIMON","TIMPS","TINAS","TINCT","TINDS","TINEA","TINED","TINES","TINGE","TINGS","TINKS","TINNY","TINTS","TINTY","TIPIS","TIPPY","TIPSY","TIRED","TIRES","TIRLS","TIROS","TIRRS","TITAN","TITCH","TITER","TITHE","TITIS","TITLE","TITRE","TITTY","TITUP","TIYIN","TIYNS","TIZES","TIZZY","TOADS","TOADY","TOAST","TOAZE","TOCKS","TOCKY","TOCOS","TODAY","TODDE","TODDY","TOEAS","TOFFS","TOFFY","TOFTS","TOFUS","TOGAE","TOGAS","TOGED","TOGES","TOGUE","TOHOS","TOILE","TOILS","TOING","TOISE","TOITS","TOKAY","TOKED","TOKEN","TOKER","TOKES","TOKOS","TOLAN","TOLAR","TOLAS","TOLED","TOLES","TOLLS","TOLLY","TOLTS","TOLUS","TOLYL","TOMAN","TOMBS","TOMES","TOMIA","TOMMY","TOMOS","TONAL","TONDI","TONDO","TONED","TONER","TONES","TONEY","TONGA","TONGS","TONIC","TONKA","TONKS","TONNE","TONUS","TOOLS","TOOMS","TOONS","TOOTH","TOOTS","TOPAZ","TOPED","TOPEE","TOPEK","TOPER","TOPES","TOPHE","TOPHI","TOPHS","TOPIC","TOPIS","TOPOI","TOPOS","TOPPY","TOQUE","TORAH","TORAN","TORAS","TORCH","TORCS","TORES","TORIC","TORII","TOROS","TOROT","TORRS","TORSE","TORSI","TORSK","TORSO","TORTA","TORTE","TORTS","TORUS","TOSAS","TOSED","TOSES","TOSHY","TOSSY","TOTAL","TOTED","TOTEM","TOTER","TOTES","TOTTY","TOUCH","TOUGH","TOUKS","TOUNS","TOURS","TOUSE","TOUSY","TOUTS","TOUZE","TOUZY","TOWED","TOWEL","TOWER","TOWIE","TOWNS","TOWNY","TOWSE","TOWSY","TOWTS","TOWZE","TOWZY","TOXIC","TOXIN","TOYED","TOYER","TOYON","TOYOS","TOZED","TOZES","TOZIE","TRABS","TRACE","TRACK","TRACT","TRADE","TRADS","TRAGI","TRAIK","TRAIL","TRAIN","TRAIT","TRAMP","TRAMS","TRANK","TRANQ","TRANS","TRANT","TRAPE","TRAPS","TRAPT","TRASH","TRASS","TRATS","TRATT","TRAVE","TRAWL","TRAYF","TRAYS","TREAD","TREAT","TRECK","TREED","TREEN","TREES","TREFA","TREIF","TREKS","TREMA","TREMS","TREND","TRESS","TREST","TRETS","TREWS","TREYF","TREYS","TRIAC","TRIAD","TRIAL","TRIBE","TRICE","TRICK","TRIDE","TRIED","TRIER","TRIES","TRIFF","TRIGO","TRIGS","TRIKE","TRILD","TRILL","TRIMS","TRINE","TRINS","TRIOL","TRIOR","TRIOS","TRIPE","TRIPS","TRIPY","TRIST","TRITE","TROAD","TROAK","TROAT","TROCK","TRODE","TRODS","TROGS","TROIS","TROKE","TROLL","TROMP","TRONA","TRONC","TRONE","TRONK","TRONS","TROOP","TROOZ","TROPE","TROTH","TROTS","TROUT","TROVE","TROWS","TROYS","TRUCE","TRUCK","TRUED","TRUER","TRUES","TRUGO","TRUGS","TRULL","TRULY","TRUMP","TRUNK","TRUSS","TRUST","TRUTH","TRYER","TRYKE","TRYMA","TRYPS","TRYST","TSADE","TSADI","TSARS","TSKED","TSUBA","TSUBO","TUANS","TUART","TUATH","TUBAE","TUBAL","TUBAR","TUBAS","TUBBY","TUBED","TUBER","TUBES","TUCKS","TUFAS","TUFFE","TUFFS","TUFTS","TUFTY","TUGRA","TUILE","TUINA","TUISM","TUKTU","TULES","TULIP","TULLE","TULPA","TULSI","TUMID","TUMMY","TUMOR","TUMPS","TUMPY","TUNAS","TUNDS","TUNED","TUNER","TUNES","TUNGS","TUNIC","TUNNY","TUPEK","TUPIK","TUPLE","TUQUE","TURBO","TURDS","TURFS","TURFY","TURKS","TURME","TURMS","TURNS","TURNT","TURPS","TURRS","TUSHY","TUSKS","TUSKY","TUTEE","TUTOR","TUTTI","TUTTY","TUTUS","TUXES","TUYER","TWAES","TWAIN","TWALS","TWANG","TWANK","TWATS","TWAYS","TWEAK","TWEED","TWEEL","TWEEN","TWEEP","TWEER","TWEET","TWERK","TWERP","TWICE","TWIER","TWIGS","TWILL","TWILT","TWINE","TWINK","TWINS","TWINY","TWIRE","TWIRL","TWIRP","TWIST","TWITE","TWITS","TWIXT","TWOER","TWYER","TYEES","TYERS","TYING","TYIYN","TYKES","TYLER","TYMPS","TYNDE","TYNED","TYNES","TYPAL","TYPED","TYPES","TYPEY","TYPIC","TYPOS","TYPPS","TYPTO","TYRAN","TYRED","TYRES","TYROS","TYTHE","TZARS","UDALS","UDDER","UDONS","UGALI","UGGED","UHLAN","UHURU","UKASE","ULAMA","ULANS","ULCER","ULEMA","ULMIN","ULNAD","ULNAE","ULNAR","ULNAS","ULPAN","ULTRA","ULVAS","ULYIE","ULZIE","UMAMI","UMBEL","UMBER","UMBLE","UMBOS","UMBRA","UMBRE","UMIAC","UMIAK","UMIAQ","UMMAH","UMMAS","UMMED","UMPED","UMPHS","UMPIE","UMPTY","UMRAH","UMRAS","UNAIS","UNAPT","UNARM","UNARY","UNAUS","UNBAG","UNBAN","UNBAR","UNBED","UNBID","UNBOX","UNCAP","UNCES","UNCIA","UNCLE","UNCOS","UNCOY","UNCUS","UNCUT","UNDAM","UNDEE","UNDER","UNDID","UNDOS","UNDUE","UNDUG","UNETH","UNFED","UNFIT","UNFIX","UNGAG","UNGET","UNGOD","UNGOT","UNGUM","UNHAT","UNHIP","UNICA","UNIFY","UNION","UNITE","UNITS","UNITY","UNJAM","UNKED","UNKET","UNKID","UNLAW","UNLAY","UNLED","UNLET","UNLID","UNLIT","UNMAN","UNMET","UNMEW","UNMIX","UNPAY","UNPEG","UNPEN","UNPIN","UNRED","UNRID","UNRIG","UNRIP","UNSAW","UNSAY","UNSEE","UNSET","UNSEW","UNSEX","UNSOD","UNTAX","UNTIE","UNTIL","UNTIN","UNWED","UNWET","UNWIT","UNWON","UNZIP","UPBOW","UPBYE","UPDOS","UPDRY","UPEND","UPJET","UPLAY","UPLED","UPLIT","UPPED","UPPER","UPRAN","UPRUN","UPSEE","UPSET","UPSEY","UPTAK","UPTER","UPTIE","URAEI","URALI","URAOS","URARE","URARI","URASE","URATE","URBAN","URBEX","URBIA","URDEE","UREAL","UREAS","UREDO","UREIC","URENA","URENT","URGED","URGER","URGES","URIAL","URINE","URITE","URMAN","URNAL","URNED","URPED","URSAE","URSID","URSON","URUBU","URVAS","USAGE","USERS","USHER","USING","USNEA","USQUE","USUAL","USURE","USURP","USURY","UTERI","UTILE","UTTER","UVEAL","UVEAS","UVULA","VACUA","VADED","VADES","VAGAL","VAGUE","VAGUS","VAILS","VAIRE","VAIRS","VAIRY","VAKAS","VAKIL","VALES","VALET","VALID","VALIS","VALOR","VALSE","VALUE","VALVE","VAMPS","VAMPY","VANDA","VANED","VANES","VANGS","VANTS","VAPED","VAPER","VAPES","VAPID","VAPOR","VARAN","VARAS","VARDY","VAREC","VARES","VARIA","VARIX","VARNA","VARUS","VARVE","VASAL","VASES","VASTS","VASTY","VATIC","VATUS","VAUCH","VAULT","VAUNT","VAUTE","VAUTS","VAWTE","VAXES","VEALE","VEALS","VEALY","VEENA","VEEPS","VEERS","VEERY","VEGAN","VEGAS","VEGES","VEGIE","VEGOS","VEHME","VEILS","VEILY","VEINS","VEINY","VELAR","VELDS","VELDT","VELES","VELLS","VELUM","VENAE","VENAL","VENDS","VENEY","VENGE","VENIN","VENOM","VENTS","VENUE","VENUS","VERBS","VERGE","VERRA","VERRY","VERSE","VERSO","VERST","VERTS","VERTU","VERVE","VESPA","VESTA","VESTS","VETCH","VEXED","VEXER","VEXES","VEXIL","VEZIR","VIALS","VIAND","VIBES","VIBEX","VIBEY","VICAR","VICED","VICES","VICHY","VIDEO","VIERS","VIEWS","VIEWY","VIFDA","VIFFS","VIGAS","VIGIA","VIGIL","VIGOR","VILDE","VILER","VILLA","VILLI","VILLS","VIMEN","VINAL","VINAS","VINCA","VINED","VINER","VINES","VINEW","VINIC","VINOS","VINTS","VINYL","VIOLA","VIOLD","VIOLS","VIPER","VIRAL","VIRED","VIREO","VIRES","VIRGA","VIRGE","VIRID","VIRLS","VIRTU","VIRUS","VISAS","VISED","VISES","VISIE","VISIT","VISNE","VISON","VISOR","VISTA","VISTO","VITAE","VITAL","VITAS","VITEX","VITRO","VITTA","VIVAS","VIVAT","VIVDA","VIVER","VIVES","VIVID","VIXEN","VIZIR","VIZOR","VLEIS","VLIES","VLOGS","VOARS","VOCAB","VOCAL","VOCES","VODDY","VODKA","VODOU","VODUN","VOEMA","VOGIE","VOGUE","VOICE","VOIDS","VOILA","VOILE","VOIPS","VOLAE","VOLAR","VOLED","VOLES","VOLET","VOLKS","VOLTA","VOLTE","VOLTI","VOLTS","VOLVA","VOLVE","VOMER","VOMIT","VOTED","VOTER","VOTES","VOUCH","VOUGE","VOULU","VOWED","VOWEL","VOWER","VOXEL","VOZHD","VRAIC","VRILS","VROOM","VROUS","VROUW","VROWS","VUGGS","VUGGY","VUGHS","VUGHY","VULGO","VULNS","VULVA","VUTTY","VYING","WAACS","WACKE","WACKO","WACKS","WACKY","WADDS","WADDY","WADED","WADER","WADES","WADGE","WADIS","WADTS","WAFER","WAFFS","WAFTS","WAGED","WAGER","WAGES","WAGGA","WAGON","WAGYU","WAHOO","WAIDE","WAIFS","WAIFT","WAILS","WAINS","WAIRS","WAIST","WAITE","WAITS","WAIVE","WAKAS","WAKED","WAKEN","WAKER","WAKES","WAKFS","WALDO","WALDS","WALED","WALER","WALES","WALIE","WALIS","WALKS","WALLA","WALLS","WALLY","WALTY","WALTZ","WAMED","WAMES","WAMUS","WANDS","WANED","WANES","WANEY","WANGS","WANKS","WANKY","WANLE","WANLY","WANNA","WANTS","WANTY","WANZE","WAQFS","WARBS","WARBY","WARDS","WARED","WARES","WAREZ","WARKS","WARMS","WARNS","WARPS","WARRE","WARST","WARTS","WARTY","WASES","WASHY","WASMS","WASPS","WASPY","WASTE","WASTS","WATAP","WATCH","WATER","WATTS","WAUFF","WAUGH","WAUKS","WAULK","WAULS","WAURS","WAVED","WAVER","WAVES","WAVEY","WAWAS","WAWES","WAWLS","WAXED","WAXEN","WAXER","WAXES","WAYED","WAZIR","WAZOO","WEALD","WEALS","WEAMB","WEANS","WEARS","WEARY","WEAVE","WEBBY","WEBER","WECHT","WEDEL","WEDGE","WEDGY","WEEDS","WEEDY","WEEKE","WEEKS","WEELS","WEEMS","WEENS","WEENY","WEEPS","WEEPY","WEEST","WEETE","WEETS","WEFTE","WEFTS","WEIDS","WEIGH","WEILS","WEIRD","WEIRS","WEISE","WEIZE","WEKAS","WELCH","WELDS","WELKE","WELKS","WELKT","WELLS","WELLY","WELSH","WELTS","WEMBS","WENCH","WENDS","WENGE","WENNY","WENTS","WEROS","WERSH","WESTS","WETAS","WETLY","WEXED","WEXES","WHACK","WHALE","WHAMO","WHAMS","WHANG","WHAPS","WHARE","WHARF","WHATA","WHATS","WHAUP","WHAUR","WHEAL","WHEAR","WHEAT","WHEEL","WHEEN","WHEEP","WHEFT","WHELK","WHELM","WHELP","WHENS","WHERE","WHETS","WHEWS","WHEYS","WHICH","WHIDS","WHIFF","WHIFT","WHIGS","WHILE","WHILK","WHIMS","WHINE","WHINS","WHINY","WHIOS","WHIPS","WHIPT","WHIRL","WHIRR","WHIRS","WHISH","WHISK","WHISS","WHIST","WHITE","WHITS","WHITY","WHIZZ","WHOLE","WHOMP","WHOOF","WHOOP","WHOOT","WHOPS","WHORE","WHORL","WHORT","WHOSE","WHOSO","WHOWS","WHUMP","WHUPS","WHYDA","WICCA","WICKS","WICKY","WIDDY","WIDEN","WIDER","WIDES","WIDOW","WIDTH","WIELD","WIELS","WIFED","WIFES","WIFEY","WIFIE","WIFTY","WIGAN","WIGGY","WIGHT","WIKIS","WILCO","WILDS","WILED","WILES","WILGA","WILIS","WILJA","WILLS","WILLY","WILTS","WIMPS","WIMPY","WINCE","WINCH","WINDS","WINDY","WINED","WINES","WINEY","WINGE","WINGS","WINGY","WINKS","WINNA","WINNS","WINOS","WINZE","WIPED","WIPER","WIPES","WIRED","WIRER","WIRES","WIRRA","WISED","WISER","WISES","WISHA","WISHT","WISPS","WISPY","WISTS","WITAN","WITCH","WITED","WITES","WITHE","WITHS","WITHY","WITTY","WIVED","WIVER","WIVES","WIZEN","WIZES","WOADS","WOALD","WOCKS","WODGE","WOFUL","WOJUS","WOKEN","WOKER","WOKKA","WOLDS","WOLFS","WOLLY","WOLVE","WOMAN","WOMBS","WOMBY","WOMEN","WOMYN","WONGA","WONGI","WONKS","WONKY","WONTS","WOODS","WOODY","WOOED","WOOER","WOOFS","WOOFY","WOOLD","WOOLS","WOOLY","WOONS","WOOPS","WOOPY","WOOSE","WOOSH","WOOTZ","WOOZY","WORDS","WORDY","WORKS","WORLD","WORMS","WORMY","WORRY","WORSE","WORST","WORTH","WORTS","WOULD","WOUND","WOVEN","WOWED","WOWEE","WOXEN","WRACK","WRANG","WRAPS","WRAPT","WRAST","WRATE","WRATH","WRAWL","WREAK","WRECK","WRENS","WREST","WRICK","WRIED","WRIER","WRIES","WRING","WRIST","WRITE","WRITS","WROKE","WRONG","WROOT","WROTE","WROTH","WRUNG","WRYER","WRYLY","WUDDY","WUDUS","WULLS","WURST","WUSES","WUSHU","WUSSY","WUXIA","WYLED","WYLES","WYNDS","WYNNS","WYTED","WYTES","XEBEC","XENIA","XENIC","XENON","XERIC","XEROX","XERUS","XOANA","XRAYS","XYLAN","XYLEM","XYLIC","XYLOL","XYLYL","XYSTI","XYSTS","YAARS","YABAS","YABBA","YABBY","YACCA","YACHT","YACKA","YACKS","YAFFS","YAGER","YAGES","YAGIS","YAHOO","YAIRD","YAKKA","YAKOW","YALES","YAMEN","YAMPY","YAMUN","YANGS","YANKS","YAPOK","YAPON","YAPPS","YAPPY","YARAK","YARCO","YARDS","YARER","YARFA","YARKS","YARNS","YARRS","YARTA","YARTO","YATES","YAUDS","YAULD","YAUPS","YAWED","YAWEY","YAWLS","YAWNS","YAWNY","YAWPS","YBORE","YCLAD","YCLED","YCOND","YDRAD","YDRED","YEADS","YEAHS","YEALM","YEANS","YEARD","YEARN","YEARS","YEAST","YECCH","YECHS","YECHY","YEDES","YEEDS","YEESH","YEGGS","YELKS","YELLS","YELMS","YELPS","YELTS","YENTA","YENTE","YERBA","YERDS","YERKS","YESES","YESKS","YESTS","YESTY","YETIS","YETTS","YEUKS","YEUKY","YEVEN","YEVES","YEWEN","YEXED","YEXES","YFERE","YIELD","YIKED","YIKES","YILLS","YINCE","YIPES","YIPPY","YIRDS","YIRKS","YIRRS","YIRTH","YITES","YITIE","YLEMS","YLIKE","YLKES","YMOLT","YMPES","YOBBO","YOBBY","YOCKS","YODEL","YODHS","YODLE","YOGAS","YOGEE","YOGHS","YOGIC","YOGIN","YOGIS","YOICK","YOJAN","YOKED","YOKEL","YOKER","YOKES","YOKUL","YOLKS","YOLKY","YOMIM","YOMPS","YONIC","YONIS","YONKS","YOOFS","YOOPS","YORES","YORKS","YORPS","YOUKS","YOUNG","YOURN","YOURS","YOURT","YOUSE","YOUTH","YOWED","YOWES","YOWIE","YOWLS","YOWZA","YRAPT","YRENT","YRIVD","YRNEH","YSAME","YTOST","YUANS","YUCAS","YUCCA","YUCCH","YUCKO","YUCKS","YUCKY","YUFTS","YUGAS","YUKED","YUKES","YUKKY","YUKOS","YULAN","YULES","YUMMO","YUMMY","YUMPS","YUPON","YUPPY","YURTA","YURTS","YUZUS","ZABRA","ZACKS","ZAIDA","ZAIDY","ZAIRE","ZAKAT","ZAMAN","ZAMIA","ZANJA","ZANTE","ZANZA","ZANZE","ZAPPY","ZARFS","ZARIS","ZATIS","ZAXES","ZAYIN","ZAZEN","ZEALS","ZEBEC","ZEBRA","ZEBUB","ZEBUS","ZEDAS","ZEINS","ZENDO","ZERDA","ZERKS","ZEROS","ZESTS","ZESTY","ZETAS","ZEXES","ZEZES","ZHOMO","ZIBET","ZIFFS","ZIGAN","ZILAS","ZILCH","ZILLA","ZILLS","ZIMBI","ZIMBS","ZINCO","ZINCS","ZINCY","ZINEB","ZINES","ZINGS","ZINGY","ZINKE","ZINKY","ZIPPO","ZIPPY","ZIRAM","ZITIS","ZIZEL","ZIZIT","ZLOTE","ZLOTY","ZOAEA","ZOBOS","ZOBUS","ZOCCO","ZOEAE","ZOEAL","ZOEAS","ZOISM","ZOIST","ZOMBI","ZONAE","ZONAL","ZONDA","ZONED","ZONER","ZONES","ZONKS","ZOOEA","ZOOEY","ZOOID","ZOOKS","ZOOMS","ZOONS","ZOOTY","ZOPPA","ZOPPO","ZORIL","ZORIS","ZORRO","ZOUKS","ZOWEE","ZOWIE","ZULUS","ZUPAN","ZUPAS","ZUPPA","ZURFS","ZUZIM","ZYGAL","ZYGON","ZYMES","ZYMIC"],kE=["aback","abase","abate","abbey","abbot","abhor","abide","abled","abode","abort","about","above","abuse","abyss","acorn","acrid","actor","acute","adage","adapt","adept","admin","admit","adobe","adopt","adore","adorn","adult","affix","afire","afoot","afoul","after","again","agape","agate","agent","agile","aging","aglow","agony","agree","ahead","aider","aisle","alarm","album","alert","algae","alibi","alien","align","alike","alive","allay","alley","allot","allow","alloy","aloft","alone","along","aloof","aloud","alpha","altar","alter","amass","amaze","amber","amble","amend","amiss","amity","among","ample","amply","amuse","angel","anger","angle","angry","angst","anime","ankle","annex","annoy","annul","anode","antic","anvil","aorta","apart","aphid","aping","apnea","apple","apply","apron","aptly","arbor","ardor","arena","argue","arise","armor","aroma","arose","array","arrow","arson","artsy","ascot","ashen","aside","askew","assay","asset","atoll","atone","attic","audio","audit","augur","aunty","avail","avert","avian","avoid","await","awake","award","aware","awash","awful","awoke","axial","axiom","axion","azure","bacon","badge","badly","bagel","baggy","baker","baler","balmy","banal","banjo","barge","baron","basal","basic","basil","basin","basis","baste","batch","bathe","baton","batty","bawdy","bayou","beach","beady","beard","beast","beech","beefy","befit","began","begat","beget","begin","begun","being","belch","belie","belle","belly","below","bench","beret","berry","berth","beset","betel","bevel","bezel","bible","bicep","biddy","bigot","bilge","billy","binge","bingo","biome","birch","birth","bison","bitty","black","blade","blame","bland","blank","blare","blast","blaze","bleak","bleat","bleed","bleep","blend","bless","blimp","blind","blink","bliss","blitz","bloat","block","bloke","blond","blood","bloom","blown","bluer","bluff","blunt","blurb","blurt","blush","board","boast","bobby","boney","bongo","bonus","booby","boost","booth","booty","booze","boozy","borax","borne","bosom","bossy","botch","bough","boule","bound","bowel","boxer","brace","braid","brain","brake","brand","brash","brass","brave","bravo","brawl","brawn","bread","break","breed","briar","bribe","brick","bride","brief","brine","bring","brink","briny","brisk","broad","broil","broke","brood","brook","broom","broth","brown","brunt","brush","brute","buddy","budge","buggy","bugle","build","built","bulge","bulky","bully","bunch","bunny","burly","burnt","burst","bused","bushy","butch","butte","buxom","buyer","bylaw","cabal","cabby","cabin","cable","cacao","cache","cacti","caddy","cadet","cagey","cairn","camel","cameo","canal","candy","canny","canoe","canon","caper","caput","carat","cargo","carol","carry","carve","caste","catch","cater","catty","caulk","cause","cavil","cease","cedar","cello","chafe","chaff","chain","chair","chalk","champ","chant","chaos","chard","charm","chart","chase","chasm","cheap","cheat","check","cheek","cheer","chess","chest","chick","chide","chief","child","chili","chill","chime","china","chirp","chock","choir","choke","chord","chore","chose","chuck","chump","chunk","churn","chute","cider","cigar","cinch","circa","civic","civil","clack","claim","clamp","clang","clank","clash","clasp","class","clean","clear","cleat","cleft","clerk","click","cliff","climb","cling","clink","cloak","clock","clone","close","cloth","cloud","clout","clove","clown","cluck","clued","clump","clung","coach","coast","cobra","cocoa","colon","color","comet","comfy","comic","comma","conch","condo","conic","copse","coral","corer","corny","couch","cough","could","count","coupe","court","coven","cover","covet","covey","cower","coyly","crack","craft","cramp","crane","crank","crash","crass","crate","crave","crawl","craze","crazy","creak","cream","credo","creed","creek","creep","creme","crepe","crept","cress","crest","crick","cried","crier","crime","crimp","crisp","croak","crock","crone","crony","crook","cross","croup","crowd","crown","crude","cruel","crumb","crump","crush","crust","crypt","cubic","cumin","curio","curly","curry","curse","curve","curvy","cutie","cyber","cycle","cynic","daddy","daily","dairy","daisy","dally","dance","dandy","datum","daunt","dealt","death","debar","debit","debug","debut","decal","decay","decor","decoy","decry","defer","deign","deity","delay","delta","delve","demon","demur","denim","dense","depot","depth","derby","deter","detox","deuce","devil","diary","dicey","digit","dilly","dimly","diner","dingo","dingy","diode","dirge","dirty","disco","ditch","ditto","ditty","diver","dizzy","dodge","dodgy","dogma","doing","dolly","donor","donut","dopey","doubt","dough","dowdy","dowel","downy","dowry","dozen","draft","drain","drake","drama","drank","drape","drawl","drawn","dread","dream","dress","dried","drier","drift","drill","drink","drive","droit","droll","drone","drool","droop","dross","drove","drown","druid","drunk","dryer","dryly","duchy","dully","dummy","dumpy","dunce","dusky","dusty","dutch","duvet","dwarf","dwell","dwelt","dying","eager","eagle","early","earth","easel","eaten","eater","ebony","eclat","edict","edify","eerie","egret","eight","eject","eking","elate","elbow","elder","elect","elegy","elfin","elide","elite","elope","elude","email","embed","ember","emcee","empty","enact","endow","enema","enemy","enjoy","ennui","ensue","enter","entry","envoy","epoch","epoxy","equal","equip","erase","erect","erode","error","erupt","essay","ester","ether","ethic","ethos","etude","evade","event","every","evict","evoke","exact","exalt","excel","exert","exile","exist","expel","extol","extra","exult","eying","fable","facet","faint","fairy","faith","false","fancy","fanny","farce","fatal","fatty","fault","fauna","favor","feast","fecal","feign","fella","felon","femme","femur","fence","feral","ferry","fetal","fetch","fetid","fetus","fever","fewer","fiber","ficus","field","fiend","fiery","fifth","fifty","fight","filer","filet","filly","filmy","filth","final","finch","finer","first","fishy","fixer","fizzy","fjord","flack","flail","flair","flake","flaky","flame","flank","flare","flash","flask","fleck","fleet","flesh","flick","flier","fling","flint","flirt","float","flock","flood","floor","flora","floss","flour","flout","flown","fluff","fluid","fluke","flume","flung","flunk","flush","flute","flyer","foamy","focal","focus","foggy","foist","folio","folly","foray","force","forge","forgo","forte","forth","forty","forum","found","foyer","frail","frame","frank","fraud","freak","freed","freer","fresh","friar","fried","frill","frisk","fritz","frock","frond","front","frost","froth","frown","froze","fruit","fudge","fugue","fully","fungi","funky","funny","furor","furry","fussy","fuzzy","gaffe","gaily","gamer","gamma","gamut","gassy","gaudy","gauge","gaunt","gauze","gavel","gawky","gayer","gayly","gazer","gecko","geeky","geese","genie","genre","ghost","ghoul","giant","giddy","gipsy","girly","girth","given","giver","glade","gland","glare","glass","glaze","gleam","glean","glide","glint","gloat","globe","gloom","glory","gloss","glove","glyph","gnash","gnome","godly","going","golem","golly","gonad","goner","goody","gooey","goofy","goose","gorge","gouge","gourd","grace","grade","graft","grail","grain","grand","grant","grape","graph","grasp","grass","grate","grave","gravy","graze","great","greed","green","greet","grief","grill","grime","grimy","grind","gripe","groan","groin","groom","grope","gross","group","grout","grove","growl","grown","gruel","gruff","grunt","guard","guava","guess","guest","guide","guild","guile","guilt","guise","gulch","gully","gumbo","gummy","guppy","gusto","gusty","gypsy","habit","hairy","halve","handy","happy","hardy","harem","harpy","harry","harsh","haste","hasty","hatch","hater","haunt","haute","haven","havoc","hazel","heady","heard","heart","heath","heave","heavy","hedge","hefty","heist","helix","hello","hence","heron","hilly","hinge","hippo","hippy","hitch","hoard","hobby","hoist","holly","homer","honey","honor","horde","horny","horse","hotel","hotly","hound","house","hovel","hover","howdy","human","humid","humor","humph","humus","hunch","hunky","hurry","husky","hussy","hutch","hydro","hyena","hymen","hyper","icily","icing","ideal","idiom","idiot","idler","idyll","igloo","iliac","image","imbue","impel","imply","inane","inbox","incur","index","inept","inert","infer","ingot","inlay","inlet","inner","input","inter","intro","ionic","irate","irony","islet","issue","itchy","ivory","jaunt","jazzy","jelly","jerky","jetty","jewel","jiffy","joint","joist","joker","jolly","joust","judge","juice","juicy","jumbo","jumpy","junta","junto","juror","kappa","karma","kayak","kebab","khaki","kinky","kiosk","kitty","knack","knave","knead","kneed","kneel","knelt","knife","knock","knoll","known","koala","krill","label","labor","laden","ladle","lager","lance","lanky","lapel","lapse","large","larva","lasso","latch","later","lathe","latte","laugh","layer","leach","leafy","leaky","leant","leapt","learn","lease","leash","least","leave","ledge","leech","leery","lefty","legal","leggy","lemon","lemur","leper","level","lever","libel","liege","light","liken","lilac","limbo","limit","linen","liner","lingo","lipid","lithe","liver","livid","llama","loamy","loath","lobby","local","locus","lodge","lofty","logic","login","loopy","loose","lorry","loser","louse","lousy","lover","lower","lowly","loyal","lucid","lucky","lumen","lumpy","lunar","lunch","lunge","lupus","lurch","lurid","lusty","lying","lymph","lyric","macaw","macho","macro","madam","madly","mafia","magic","magma","maize","major","maker","mambo","mamma","mammy","manga","mange","mango","mangy","mania","manic","manly","manor","maple","march","marry","marsh","mason","masse","match","matey","mauve","maxim","maybe","mayor","mealy","meant","meaty","mecca","medal","media","medic","melee","melon","mercy","merge","merit","merry","metal","meter","metro","micro","midge","midst","might","milky","mimic","mince","miner","minim","minor","minty","minus","mirth","miser","missy","mocha","modal","model","modem","mogul","moist","molar","moldy","money","month","moody","moose","moral","moron","morph","mossy","motel","motif","motor","motto","moult","mound","mount","mourn","mouse","mouth","mover","movie","mower","mucky","mucus","muddy","mulch","mummy","munch","mural","murky","mushy","music","musky","musty","myrrh","nadir","naive","nanny","nasal","nasty","natal","naval","navel","needy","neigh","nerdy","nerve","never","newer","newly","nicer","niche","niece","night","ninja","ninny","ninth","noble","nobly","noise","noisy","nomad","noose","north","nosey","notch","novel","nudge","nurse","nutty","nylon","nymph","oaken","obese","occur","ocean","octal","octet","odder","oddly","offal","offer","often","olden","older","olive","ombre","omega","onion","onset","opera","opine","opium","optic","orbit","order","organ","other","otter","ought","ounce","outdo","outer","outgo","ovary","ovate","overt","ovine","ovoid","owing","owner","oxide","ozone","paddy","pagan","paint","paler","palsy","panel","panic","pansy","papal","paper","parer","parka","parry","parse","party","pasta","paste","pasty","patch","patio","patsy","patty","pause","payee","payer","peace","peach","pearl","pecan","pedal","penal","pence","penne","penny","perch","peril","perky","pesky","pesto","petal","petty","phase","phone","phony","photo","piano","picky","piece","piety","piggy","pilot","pinch","piney","pinky","pinto","piper","pique","pitch","pithy","pivot","pixel","pixie","pizza","place","plaid","plain","plait","plane","plank","plant","plate","plaza","plead","pleat","plied","plier","pluck","plumb","plume","plump","plunk","plush","poesy","point","poise","poker","polar","polka","polyp","pooch","poppy","porch","poser","posit","posse","pouch","pound","pouty","power","prank","prawn","preen","press","price","prick","pride","pried","prime","primo","print","prior","prism","privy","prize","probe","prone","prong","proof","prose","proud","prove","prowl","proxy","prude","prune","psalm","pubic","pudgy","puffy","pulpy","pulse","punch","pupil","puppy","puree","purer","purge","purse","pushy","putty","pygmy","quack","quail","quake","qualm","quark","quart","quash","quasi","queen","queer","quell","query","quest","queue","quick","quiet","quill","quilt","quirk","quite","quota","quote","quoth","rabbi","rabid","racer","radar","radii","radio","rainy","raise","rajah","rally","ralph","ramen","ranch","randy","range","rapid","rarer","raspy","ratio","ratty","raven","rayon","razor","reach","react","ready","realm","rearm","rebar","rebel","rebus","rebut","recap","recur","recut","reedy","refer","refit","regal","rehab","reign","relax","relay","relic","remit","renal","renew","repay","repel","reply","rerun","reset","resin","retch","retro","retry","reuse","revel","revue","rhino","rhyme","rider","ridge","rifle","right","rigid","rigor","rinse","ripen","riper","risen","riser","risky","rival","river","rivet","roach","roast","robin","robot","rocky","rodeo","roger","rogue","roomy","roost","rotor","rouge","rough","round","rouse","route","rover","rowdy","rower","royal","ruddy","ruder","rugby","ruler","rumba","rumor","rupee","rural","rusty","sadly","safer","saint","salad","sally","salon","salsa","salty","salve","salvo","sandy","saner","sappy","sassy","satin","satyr","sauce","saucy","sauna","saute","savor","savoy","savvy","scald","scale","scalp","scaly","scamp","scant","scare","scarf","scary","scene","scent","scion","scoff","scold","scone","scoop","scope","score","scorn","scour","scout","scowl","scram","scrap","scree","screw","scrub","scrum","scuba","sedan","seedy","segue","seize","semen","sense","sepia","serif","serum","serve","setup","seven","sever","sewer","shack","shade","shady","shaft","shake","shaky","shale","shall","shalt","shame","shank","shape","shard","share","shark","sharp","shave","shawl","shear","sheen","sheep","sheer","sheet","sheik","shelf","shell","shied","shift","shine","shiny","shire","shirk","shirt","shoal","shock","shone","shook","shoot","shore","shorn","short","shout","shove","shown","showy","shrew","shrub","shrug","shuck","shunt","shush","shyly","siege","sieve","sight","sigma","silky","silly","since","sinew","singe","siren","sissy","sixth","sixty","skate","skier","skiff","skill","skimp","skirt","skulk","skull","skunk","slack","slain","slang","slant","slash","slate","sleek","sleep","sleet","slept","slice","slick","slide","slime","slimy","sling","slink","sloop","slope","slosh","sloth","slump","slung","slunk","slurp","slush","slyly","smack","small","smart","smash","smear","smell","smelt","smile","smirk","smite","smith","smock","smoke","smoky","smote","snack","snail","snake","snaky","snare","snarl","sneak","sneer","snide","sniff","snipe","snoop","snore","snort","snout","snowy","snuck","snuff","soapy","sober","soggy","solar","solid","solve","sonar","sonic","sooth","sooty","sorry","sound","south","sower","space","spade","spank","spare","spark","spasm","spawn","speak","spear","speck","speed","spell","spelt","spend","spent","sperm","spice","spicy","spied","spiel","spike","spiky","spill","spilt","spine","spiny","spire","spite","splat","split","spoil","spoke","spoof","spook","spool","spoon","spore","sport","spout","spray","spree","sprig","spunk","spurn","spurt","squad","squat","squib","stack","staff","stage","staid","stain","stair","stake","stale","stalk","stall","stamp","stand","stank","stare","stark","start","stash","state","stave","stead","steak","steal","steam","steed","steel","steep","steer","stein","stern","stick","stiff","still","stilt","sting","stink","stint","stock","stoic","stoke","stole","stomp","stone","stony","stood","stool","stoop","store","stork","storm","story","stout","stove","strap","straw","stray","strip","strut","stuck","study","stuff","stump","stung","stunk","stunt","style","suave","sugar","suing","suite","sulky","sully","sumac","sunny","super","surer","surge","surly","sushi","swami","swamp","swarm","swash","swath","swear","sweat","sweep","sweet","swell","swept","swift","swill","swine","swing","swirl","swish","swoon","swoop","sword","swore","sworn","swung","synod","syrup","tabby","table","taboo","tacit","tacky","taffy","taint","taken","taker","tally","talon","tamer","tango","tangy","taper","tapir","tardy","tarot","taste","tasty","tatty","taunt","tawny","teach","teary","tease","teddy","teeth","tempo","tenet","tenor","tense","tenth","tepee","tepid","terra","terse","testy","thank","theft","their","theme","there","these","theta","thick","thief","thigh","thing","think","third","thong","thorn","those","three","threw","throb","throw","thrum","thumb","thump","thyme","tiara","tibia","tidal","tiger","tight","tilde","timer","timid","tipsy","titan","tithe","title","toast","today","toddy","token","tonal","tonga","tonic","tooth","topaz","topic","torch","torso","torus","total","totem","touch","tough","towel","tower","toxic","toxin","trace","track","tract","trade","trail","train","trait","tramp","trash","trawl","tread","treat","trend","triad","trial","tribe","trice","trick","tried","tripe","trite","troll","troop","trope","trout","trove","truce","truck","truer","truly","trump","trunk","truss","trust","truth","tryst","tubal","tuber","tulip","tulle","tumor","tunic","turbo","tutor","twang","tweak","tweed","tweet","twice","twine","twirl","twist","twixt","tying","udder","ulcer","ultra","umbra","uncle","uncut","under","undid","undue","unfed","unfit","unify","union","unite","unity","unlit","unmet","unset","untie","until","unwed","unzip","upper","upset","urban","urine","usage","usher","using","usual","usurp","utile","utter","vague","valet","valid","valor","value","valve","vapid","vapor","vault","vaunt","vegan","venom","venue","verge","verse","verso","verve","vicar","video","vigil","vigor","villa","vinyl","viola","viper","viral","virus","visit","visor","vista","vital","vivid","vixen","vocal","vodka","vogue","voice","voila","vomit","voter","vouch","vowel","vying","wacky","wafer","wager","wagon","waist","waive","waltz","warty","waste","watch","water","waver","waxen","weary","weave","wedge","weedy","weigh","weird","welch","welsh","whack","whale","wharf","wheat","wheel","whelp","where","which","whiff","while","whine","whiny","whirl","whisk","white","whole","whoop","whose","widen","wider","widow","width","wield","wight","willy","wimpy","wince","winch","windy","wiser","wispy","witch","witty","woken","woman","women","woody","wooer","wooly","woozy","wordy","world","worry","worse","worst","worth","would","wound","woven","wrack","wrath","wreak","wreck","wrest","wring","wrist","write","wrong","wrote","wrung","wryly","yacht","yearn","yeast","yield","young","youth","zebra","zesty","zonal"];var rs=(e,E)=>{const S=e.__vccOpts||e;for(const[t,A]of E)S[t]=A;return S};const tE=e=>(pn("data-v-b9fd431c"),e=e(),hn(),e),Os={class:"container wrap"},os={class:"header row"},ss=tE(()=>B("div",{class:"col-md-3"},null,-1)),Rs=tE(()=>B("div",{class:"col-md-6"},[B("span",{class:"title"},"Gauntletle")],-1)),ls={class:"col-md-3 help"},is={class:"info"},Is={class:"row"},as=tE(()=>B("div",{class:"col-2"},null,-1)),Ls={class:"nav nav-pills nav-justified col-8",id:"boardsNav",role:"tablist"},Ts={class:"nav-item",role:"presentation"},us=["disabled"],Ns={class:"nav-item",role:"presentation"},cs=["disabled"],Us={class:"nav-item",role:"presentation"},Ds=["disabled"],fs={class:"nav-item",role:"presentation"},Cs=["disabled"],Ps={class:"nav-item",role:"presentation"},Ms=["disabled"],ds=tE(()=>B("div",{class:"col-2"},null,-1)),Ys={class:"tab-content",id:"boards"},Hs=tE(()=>B("div",{class:"footer"}," Created by theasylm ",-1)),Bs={class:"close-modal-div"},Gs={class:"modal__title",id:"win-msg"},Ks={class:"modal__content"},ps={key:0,class:"solution"},hs=FE(" Solutions: "),Fs={class:"solution-word"},ms=tE(()=>B("br",null,null,-1)),gs=tE(()=>B("span",{id:"copiedResultsMessage"},"Copied!",-1)),Ws={class:"close-modal-div"},ys=tE(()=>B("div",{class:"modal__content confirm"},[B("div",{class:"hint-div"},[B("div",{class:"warning"},"Are you sure you wish to give up?")])],-1)),vs={class:"modal__action"},bs={class:"mb-3 row"},Vs={class:"col-sm-4"},ws={class:"close-modal-div"},Zs=tE(()=>B("div",{class:"modal__content"},[B("h2",null,"How to Play"),B("div",{class:"mb-3 row"},[B("div",{class:"col-sm-12"},[FE(" Guess the five words in the given number of tries. After each guess, the tiles will be colored to indicate how close to the target word your guess was. "),B("img",{src:bo}),FE(" Green indicates the N is in the correct spot. "),B("img",{src:Vo}),FE(" Yellow indicates the U is in the word, but in another position. "),B("p",null,[B("img",{src:wo}),FE(" Grey indicates the P is not in the word.")]),B("p",null,"After the first word, you will be seeded with the previous word as your starting guess."),B("p",null,"On the final word, you will be seeded with the previous four words as starting guesses."),B("p",null,"If you wish to give up, you can hit the red X. You will be asked to confirm your decision."),B("hr"),B("small",null,"Special thanks for Rangsk for the extra code!")])])],-1)),_s={name:"App",setup(e){function E(O,s){O=O.toLowerCase(),s=s.toLowerCase();let l=O.length;if(s.length!=l)throw"Guess and answer must be the same length";let a=new Array(26).fill(0);for(let D=0;D<l;D++){let c=O[D],f=s[D];if(c!=f){let T=c.charCodeAt(0)-"a".charCodeAt(0);a[T]++}}let I=new Array(26).fill(0),u="";for(let D=0;D<l;D++){let c=s[D],f=O[D];if(c<"a"||c>"z"){u+="x";continue}if(c==f)u+="g";else{let T=c.charCodeAt(0)-"a".charCodeAt(0),G=a[T],M=I[T];I[T]++,M<G?u+="y":u+="x"}}return u}function S(O,s){if(O.length==0||s.length==0)throw"No answers or forced guesses";let l=new Map;for(let I of O){if(s.includes(I))continue;let u=s.map(D=>E(I,D)).join("");l.has(u)?l.get(u).push(I):l.set(u,[I])}let a=[];for(let[I,u]of l)u.length>1&&u.length<=4&&a.push.apply(a,u);return a.length==0?"":a[Math.floor(Math.random()*a.length)]}const t=function(){let O=new ArrayBuffer(10),s=new Uint16Array(O);for(let u=0;u<o.length;u++)s[u]=kE.indexOf(o[u]);let l=new Uint8Array(O),a="",I=l.byteLength;for(let u=0;u<I;u++)a+=String.fromCharCode(l[u]);return window.btoa(a).replace("+","-").replace("/","_").replace(/=+$/,"")},A=function(O){for(O=O.replace("-","+").replace("_","/");O.length%4;)O+="=";let s=window.atob(O),l=s.length,a=new Uint8Array(l);for(let I=0;I<l;I++)a[I]=s.charCodeAt(I);return new Uint16Array(a.buffer)},n=function(){for(;o.length<5;){for(o=[];o.length<4;){let s=kE[ee()];o.includes(s)||o.push(s)}let O=S(kE,o);O!=""&&o.push(O)}},r=function(O){let s=A(O);for(let l=0;l<5;l++)o[l]=kE[s[l]]};let o=[],R=new URL(document.location).searchParams.get("p");R?r(R):n();let i=_([[{letter:"q",state:1,colored:!0},{letter:"w",state:1,colored:!0},{letter:"e",state:1,colored:!0},{letter:"r",state:1,colored:!0},{letter:"t",state:1,colored:!0},{letter:"y",state:1,colored:!0},{letter:"u",state:1,colored:!0},{letter:"i",state:1,colored:!0},{letter:"o",state:1,colored:!0},{letter:"p",state:1,colored:!0}],[{letter:"a",state:1,colored:!0},{letter:"s",state:1,colored:!0},{letter:"d",state:1,colored:!0},{letter:"f",state:1,colored:!0},{letter:"g",state:1,colored:!0},{letter:"h",state:1,colored:!0},{letter:"j",state:1,colored:!0},{letter:"k",state:1,colored:!0},{letter:"l",state:1,colored:!0},{letter:"_",state:1,colored:!0}],[{letter:"enter",state:1,colored:!0},{letter:"z",state:1,colored:!0},{letter:"x",state:1,colored:!0},{letter:"c",state:1,colored:!0},{letter:"v",state:1,colored:!0},{letter:"b",state:1,colored:!0},{letter:"n",state:1,colored:!0},{letter:"m",state:1,colored:!0},{letter:"del",state:1,colored:!0}]]);const L=o[0].length>0?o[0].length:0;let U=6,N=_(!1),C=_(!1),F=_(!1),K=_(Array());const W=function(){K.value.length=0,K.value.push([]);for(let O=1;O<o.length;O++){let s=[];if(O<o.length-1){let l=[];for(let a=0;a<L;a++)l.push({letter:o[O-1].charAt(a),state:0,initialized:!0,colored:!0});s.push(l)}else for(let l=0;l<o.length-1;l++){let a=[];for(let I=0;I<L;I++)a.push({letter:o[l].charAt(I),state:0,initialized:!0,colored:!0});s.push(a)}K.value.push(s)}for(let O=0;O<K.value.length;O++)for(let s=K.value[O].length;s<=U-1;s++){let l=[];for(let a=0;a<L;a++)l.push({letter:"",state:0,initialized:!1,colored:!1,completed:!1});K.value[O].push(l)}};W();let p=_(0),Y=_(0);_(1),_(Array());let g=_(0);_("");let v=_(!1),Se=_(!1),Le=_(!1),Be=_(!1);_(0),_(0),_(0),_(0),_(0),_(0),_(0);let w=_(!1),j=Me(()=>v.value?Se.value?"Nice!":"Too Bad!":""),$=Me(()=>!1),oe=Me(()=>{if(v.value){if(Y.value>0)return!1}else if(Y.value>0)return!1;return!0}),h=Me(()=>{if(v.value){if(Y.value>1)return!1}else if(Y.value>1)return!1;return!0}),q=Me(()=>{if(v.value){if(Y.value>2)return!1}else if(Y.value>2)return!1;return!0}),Re=Me(()=>{if(v.value){if(Y.value>3)return!1}else if(Y.value>3)return!1;return!0});const Ue=function(O,s){let l=o[Y.value],a=O?0:1,I=K.value[Y.value][p.value];for(let T=0;T<I.length;T++)if(I[T].letter==="")return;l.split("");let u=I.map(T=>T.letter).join("");if(Se.value=u===l,!Se.value&&!en.includes(u.toUpperCase())&&!O){GE();return}let D=[];const c=E(l,u),f=["","","x","y","g"];for(let T=0;T<c.length;T++){let G=f.indexOf(c.charAt(T));s||D.push([I[T].letter,G]),setTimeout(()=>{I[T].state=G},150*T*a),setTimeout(()=>{I[T].colored=!0},(450+150*T)*a)}if(setTimeout(()=>{for(let T=0;T<D.length;T++)te(D[T][0],D[T][1]);v.value&&(N.value=!0)},300*I.length*a),Se.value){Y.value==o.length-1?(v.value=!0,g.value=-1,p.value=-1):(g.value=0,p.value=-1,setTimeout(()=>{g.value=0,p.value=0,Y.value++,Oe(),Ue(!0),Y.value==4&&(Ue(!0),Ue(!0),Ue(!0))},2500));return}p.value++,g.value=0,O||p.value==U&&(v.value=!0,N.value=!0)},Oe=function(){for(let O=0;O<3;O++)for(let s=0;s<i.value[O].length;s++)i.value[O][s].state=1},te=function(O,s){let l=X(O);i.value[l[0]][l[1]].state<s&&(i.value[l[0]][l[1]].state=s)},X=function(O){for(let s=0;s<3;s++)for(let l=0;l<i.value[s].length;l++)if(O===i.value[s][l].letter)return[s,l]},De=O=>{O.ctrlKey||O.altKey||O.metaKey||qe(O.key)},Je=function(O){v.value||(g.value=O.detail)};window.addEventListener("keyup",De),new Event("tile-click"),window.addEventListener("tile-click",Je),Jt(()=>{window.removeEventListener("keyup",De),window.removeEventListener("tile-click",Je)});const qe=function(O){w.value||v.value||(/^[a-zA-Z_\-]$/.test(O)?(O=="-"&&(O="_"),Ge(O.toLowerCase())):O==="Backspace"||O==="Delete"?Ke():O==="Enter"?Ue(!1):O=="ArrowLeft"&&g.value>0?g.value--:(O=="ArrowRight"||O==" ")&&g.value<L-1&&g.value++)},Ge=function(O){let s={};g.value==L?s=K.value[Y.value][p.value][g.value-1]:s=K.value[Y.value][p.value][g.value],s.letter=O,g.value<L-1&&g.value++},Ke=function(){g.value>0&&K.value[Y.value][p.value][g.value].letter==""&&g.value--;let O=K.value[Y.value][p.value][g.value];O.letter=""},ve=Me(()=>{if(Y.value<0||Y.value>4||p.value<0||v.value)return!1;let O=K.value[Y.value][p.value].map(s=>s.letter).join("");return o[Y.value]==O||O.length!=L||O.match(/_/)?!1:!en.includes(O.toUpperCase())}),GE=function(){Le.value=!0,setTimeout(()=>{Le.value=!1},1500)},KE=function(){Oe(),Y.value=0,p.value=0,g.value=0,Se.value=!1,v.value=!1,o=[],n(),W(),N.value=!1},H=function(){F.value=!1,v.value=!0,Be.value=!0,N.value=!0},x=function(){!v.value||(N.value=!0)};function ee(){let O=Math.ceil(0),s=Math.floor(kE.length);return Math.floor(Math.random()*(s-O+1))+O}const Te=function(){let O=`Gauntletle Results
`,s=fe(0);O+="1: "+(s>0?s:"X")+`/6
`;for(let I=1;I<4;I++)s=fe(I)-1,O+=I+1+": "+(s>0?s:"X")+`/5
`;s=fe(4)-4,O+="5: "+(s>0?s:"X")+`/2
`,O+=`How well can you do?
`,O+="http://theasylm.github.io/gauntletle/?p="+t(),navigator.clipboard.writeText(O);let l=document.getElementById("copiedResultsMessage"),a=l.className;l.className+="shown",setTimeout(()=>{l.className=a},2e3)},be=function(O,s){let l="",a=K.value[O][s];for(let I=0;I<a.length;I++)l+=a[I].letter;return l},fe=function(O){let s=K.value[O],l="";for(let a=0;a<s.length;a++)if(!(O!=0&&a==0||O==4&&a<4)&&(l=be(O,a),l==""))return a;return l==o[O]?6:0};return(O,s)=>(Ee(),xe("div",Os,[B("div",os,[ss,Rs,B("div",ls,[k(P(CS),{class:"give-up-icon",onClick:s[0]||(s[0]=l=>re(F)?F.value=!P(v):F=!P(v))}),k(P(As),{onClick:x,class:ue({inactive:!P(v)})},null,8,["class"]),k(P(ns),{onClick:s[1]||(s[1]=l=>re(C)?C.value=!0:C=!0)})])]),B("div",is,[B("h5",{class:ue(["warning-message",{shown:P(Le)}])},"Word not in dictionary.",2)]),B("div",Is,[as,B("ul",Ls,[B("li",Ts,[B("button",{class:ue(["nav-link",{active:P(Y)==0}]),id:"board1","data-bs-toggle":"pill","data-bs-target":"#board-one-pane",type:"button",role:"tab","aria-controls":"board-one-pane","aria-selected":"true",disabled:P($)},"1",10,us)]),B("li",Ns,[B("button",{class:ue(["nav-link",{active:P(Y)==1}]),id:"board2","data-bs-toggle":"pill","data-bs-target":"#board-two-pane",type:"button",role:"tab","aria-controls":"board-two-pane","aria-selected":"false",disabled:P(oe)},"2",10,cs)]),B("li",Us,[B("button",{class:ue(["nav-link",{active:P(Y)==2}]),id:"board3","data-bs-toggle":"pill","data-bs-target":"#board-three-pane",type:"button",role:"tab","aria-controls":"board-three-pane","aria-selected":"false",disabled:P(h)},"3",10,Ds)]),B("li",fs,[B("button",{class:ue(["nav-link",{active:P(Y)==3}]),id:"board4","data-bs-toggle":"pill","data-bs-target":"#board-four-pane",type:"button",role:"tab","aria-controls":"board-four-pane","aria-selected":"false",disabled:P(q)},"4",10,Cs)]),B("li",Ps,[B("button",{class:ue(["nav-link",{active:P(Y)==4}]),id:"board5","data-bs-toggle":"pill","data-bs-target":"#board-five-pane",type:"button",role:"tab","aria-controls":"board-five-pane","aria-selected":"false",disabled:P(Re)},"5",10,Ms)])]),ds,B("div",Ys,[B("div",{class:ue(["tab-pane fade",{active:P(Y)==0,show:P(Y)==0}]),id:"board-one-pane",role:"tabpanel","aria-labelledby":"board-one",tabindex:"-1"},[k(xE,{guesses:P(K)[0],guessNotInDictionary:P(ve),currentGuess:P(p),currentPosition:P(g),wordLength:P(L)},null,8,["guesses","guessNotInDictionary","currentGuess","currentPosition","wordLength"])],2),B("div",{class:ue(["tab-pane fade",{active:P(Y)==1,show:P(Y)==1}]),id:"board-two-pane",role:"tabpanel","aria-labelledby":"board-two",tabindex:"-1"},[k(xE,{guesses:P(K)[1],guessNotInDictionary:P(ve),currentGuess:P(p),currentPosition:P(g),wordLength:P(L)},null,8,["guesses","guessNotInDictionary","currentGuess","currentPosition","wordLength"])],2),B("div",{class:ue(["tab-pane fade",{active:P(Y)==2,show:P(Y)==2}]),id:"board-three-pane",role:"tabpanel","aria-labelledby":"board-three",tabindex:"-1"},[k(xE,{guesses:P(K)[2],guessNotInDictionary:P(ve),currentGuess:P(p),currentPosition:P(g),wordLength:P(L)},null,8,["guesses","guessNotInDictionary","currentGuess","currentPosition","wordLength"])],2),B("div",{class:ue(["tab-pane fade",{active:P(Y)==3,show:P(Y)==3}]),id:"board-four-pane",role:"tabpanel","aria-labelledby":"board-four",tabindex:"-1"},[k(xE,{guesses:P(K)[3],guessNotInDictionary:P(ve),currentGuess:P(p),currentPosition:P(g),wordLength:P(L)},null,8,["guesses","guessNotInDictionary","currentGuess","currentPosition","wordLength"])],2),B("div",{class:ue(["tab-pane fade",{active:P(Y)==4,show:P(Y)==4}]),id:"board-five-pane",role:"tabpanel","aria-labelledby":"board-five",tabindex:"-1"},[k(xE,{guesses:P(K)[4],guessNotInDictionary:P(ve),currentGuess:P(p),currentPosition:P(g),wordLength:P(L)},null,8,["guesses","guessNotInDictionary","currentGuess","currentPosition","wordLength"])],2)])]),k(ts,{rows:P(i)},null,8,["rows"]),Hs,k(P(lt),{name:"winModal",classes:"modal-container","click-to-close":!1,"esc-to-close":!0,modelValue:P(N),"onUpdate:modelValue":s[3]||(s[3]=l=>re(N)?N.value=l:N=l),"content-class":"modal-content","max-width":500},{default:yE(()=>[B("div",Bs,[k(P(CS),{onClick:s[2]||(s[2]=l=>re(N)?N.value=!1:N=!1)})]),B("span",Gs,PS(P(j)),1),B("div",Ks,[P(v)&&!P(Se)?(Ee(),xe("div",ps,[hs,(Ee(!0),xe(ie,null,HE(P(o),(l,a)=>(Ee(),xe("span",Fs,PS(a+1)+": "+PS(l.toUpperCase()),1))),256))])):eS("",!0),B("button",{class:"btn btn-primary",onClick:KE},"Play Again"),B("button",{class:"btn btn-primary share-button",onClick:Te},"Share results"),ms,gs])]),_:1},8,["modelValue"]),k(P(lt),{name:"giveUpModal",classes:"modal-container","click-to-close":!1,"esc-to-close":!0,modelValue:P(F),"onUpdate:modelValue":s[6]||(s[6]=l=>re(F)?F.value=l:F=l),"content-class":"modal-content","max-width":500},{default:yE(()=>[B("div",Ws,[k(P(CS),{onClick:s[4]||(s[4]=l=>re(F)?F.value=!1:F=!1)})]),ys,B("div",vs,[B("div",bs,[B("div",Vs,[B("button",{onClick:s[5]||(s[5]=l=>re(F)?F.value=!1:F=!1),class:"btn btn-primary"},"Keep Thinking")]),B("div",{class:"col-sm-4"},[B("button",{onClick:H,class:"btn btn-danger"},"Give Up")])])])]),_:1},8,["modelValue"]),k(P(lt),{name:"helpModal",classes:"modal-container help-modal","click-to-close":!1,"esc-to-close":!0,modelValue:P(C),"onUpdate:modelValue":s[8]||(s[8]=l=>re(C)?C.value=l:C=l),"content-class":"modal-content","max-width":600},{default:yE(()=>[B("div",ws,[k(P(CS),{onClick:s[7]||(s[7]=l=>re(C)?C.value=!1:C=!1)})]),Zs]),_:1},8,["modelValue"])]))}};var xs=rs(_s,[["__scopeId","data-v-b9fd431c"]]);yo(xs).mount("#app");
